{
  "CHANGELOG.html": {
    "href": "CHANGELOG.html",
    "title": "Changelog | Metasys Services",
    "keywords": "Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog, and this project adheres to Semantic Versioning. Unreleased 6.0.4 - 2024-07-25 Changed Fixed issue related to the method 'GetObjects()' (specifically related to the attribute 'Classification') Updated the dictionaries of all the supported locales. Reviewed and cleaned up unnecessary code. 6.0.3 - 2024-04-11 Changed Fixed issue related to the method 'GetObjects()' (the parameter 'levels' was not properly handled) Enhanced methods 'ReadProperty()' and 'ReadPropertyMultiple()' Enhanced the TestClient app in order to support the latest changes. 6.0.2 - 2024-03-20 Changed Fixed issue related to the method that is retrieving the list of Activities when API v4 was selected. Added the new parameters of the method 'alarms.get()' supported from API v4 on. Enhanced the TestClient app in order to support the latest changes. 6.0.1 - 2024-01-15 Changed Made changes to MetasysObject to fix an issue related to the property ObjectType that wasn't properly populated. Added a few comments and removed some unnecessary code. Fixed a minor issue in the TestApp project. 6.0.0 - 2023-12-05 The main purpose of this release is to add the support for Metasys API v5 (provided by Metasys 13) as well as many enhancements of the library. Added Specifically, as example, it provides the new 'Activities' service including some new methods as: Activities.Get(ActivityFilter activityFilter) Activities.GetSync(ActivityFilter activityFilter) Activities.ActionMultiple(IEnumerable requests) Activities.ActionMultipleAsync(IEnumerable requests) It also provides the corresponding new methods via COM component. GetActivities(IComActivityFilter activityFilter) ActivityActionMultiple(string[] requestParams) Also, it includes the possibility to handle a few extra parameters as, for example, the 'timeout' for https requests as well as the 'page', 'pageSize' and 'sort' for the method to retrieve the spaces. 5.0.3 - 2023-02-15 Added Added the new methods: GetObjects(Guid objectId, string objectType) GetObjectsAsync(Guid objectId, string objectType) Added the related method to the COM component: GetObjects(string id, string type) 5.0.2 - 2023-02-07 Added Added the support for 'Ad-Hoc' calls. Changed Updated reference to Newtonsoft.Json v13.0.2 (and removes a few unused references). 5.0.1 - 2022-11-09 Changed Modified the default value of the parameter 'pageSize' from 100 to 1000. Modified the method Equipments.Get() in order to add a few optional parameters as 'page' and 'pageSize'. 5.0.0 - 2022-06-01 Added Support to Metasys API v4 (provided by Metasys 12). Added new Alarm service methods: Alarms.Acknowledge, Alarms.Discard. Added new Enumeration service and related methods: Enumerations.Get, Enumerations.Create, Enumerations.GetValues, Enumerations.Edit, Enumerations.Replace, Enumerations.Delete. Added new Equipment service and related methods: Equipments.Get, Equipments.FindById, Equipments.GetServedByEquipment, Equipments.GetPoint, Equipments.GetServingASpace, Equipments.GetHostedByNetworkDevice, Equipments.GetServingAnEquipment. Added new NetworkDevice service and related methods: NetworkDevices.Get, NetworkDevices.GetTypes, NetworkDevices.FindById, NetworkDevices.GetHostingAnEquipment, NetworkDevices.GetChildren, NetworkDevices.GetServingASpace. Added new Space service and related methods: Spaces.Get, Spaces.GetChildren, Spaces.GetTypes, Spaces.FindById, Spaces.GetServedByEquipment, Spaces.GetServedByNetworkDevice. Added new Stream service and related methods: StartReadingCOV, StopReadingCOV, Streams.GetCOV, Streams.StartCollectingAlarms, Streams.StopCollectingAlarms, Streams.GetAlarmEvents, Streams.StartCollectingAudits, Streams.StopCollectingAudits, Streams.GetAuditEvents, Streams.KeepAlive. Added a new specific exception to report when a method is not supported by the specified API version. Added a new TestClient application to show how to use all the provided methods. Changed Updated the file 'MetasysApiTest.xlsm' to shown examples of the new methods. Modified the following existing methods to support API v4: Alarms.Get, Alarms.FindById, Alarms.GetForNetworkDevice, Alarms.GetForObject, Alarms.GetAnnotations, Audits.Get, Audits.FindById, Audits.GetForObject, Audits.GetAnnotations, Audits.Discard, Audits.DiscardMultiple. Deprecated Deprecated the following existing methods: GetEquipmentPoints, GetNetworkDevices, GetEquipment, GetSpaceEquipment, GetNetworkDevices, GetNetworkDeviceTypes, GetSpaces, GetSpaceChildren, GetSpaceTypes. These methods have been replaced by the equivalent ones provided by the different services. 4.2.0 - 2020-10-20 Added Added new method AddAuditAnnotationMultiple (COM) to add many audit annotations in one call. Added the new method DiscardAuditMultiple (COM) to discard many audits in one call. Added a new specific exception to report when a method is not supported by the specified API version. Changed Updated the file 'MetasysApiTest.xlsm' to shown examples of the new methods. Updated Id for Equipment and Space examples Fixed Issue in the method GetSampleAsync (due to v3 changes) 4.1.0 - 2020-07-24 Added Translations for Fully Qualified Enum Attributes returned by API v3 (for Alarms and Audits) The new method GetServerTime A new enumeration set for ActionType A new enumeration set for OriginApplication A new enumeration set for ClassLevel A new enumeration set for NetworkDeviceType Added AuditSignature and LegacyInfo strong typed objects for Audits (.Net and COM) Added a few new Test Cases (mainly for v3) Changed Handled single values scenario for PreData and PostData (for Audits) Modified the method GetnetworkDevices to accept the new NetworkDeviceType enumeration as parameter Modified the AuditFilter object to accept the new enumeration sets as paramenters Modified Equals and GetHashCode methods in a few class as Alarm, Audit, AuditData and LegacyData Removed priority from write methods in Excel app Updated Id for Equipment and Space examples Fixed Issue in the parameters passed to the SendCommands method (due to v3 changes) Issue in FindById method (for Alarms and Audits) due to difference in the object structure of v3 Issue is the response parsing of GetCommands method (when using v3) 4.0.0 - 2020-06-19 Added Support to API v3 (pre-release) GetBatchRequestAsync, PutBatchRequestAsync, PostBatchRequestAsync methods to support Objects batch endpoint of v3 Support for Batch request on ReadPropertyMultiple Support for Batch request on AddAnnotationMultiple (for Audits) Support for Batch request on DiscardMultiple (for Audits) Public setter for ApiVersion and Hostname Overload for WritePropertyMultiple that takes a dictionary of key/value pairs Support to fully qualified enums of v3 (Sample, Alarm, Audit) Helpers FindByName, FindByID, FindByShortName to work with MetasysObject, MetasysPoint, Variant, VariantMultiple collections Support for the method GetAnnotations (for Alarms) Support for the methods GetAnnotations, AddAnnotation, Discard (for Audits) Added the new class ResourceManager to support the static methods: Localize, GetCommandEnumeration and GetObjectTypeEnumeration Changed Simplified methods and models names of Alarm and Audit service PostBatchRequestAsync method to support Objects batch endpoint of v3 Support for Batch request on ReadPropertyMultiple Renamed Point class in MetasysPoint Renamed Attribute class in MetasysClass Renamed Variants property of VariantMultiple in Values Modified the Localize method that now uses the new class ResourceManager 3.5.1 - 2020-05-18 Fixed Fixed issue of silent thread termination on custom SynchronizationContext for async methods Fixed parsing of type parameter for COM GetSpaces and added COM GetSpaceChildren method 3.5.0 - 2020-05-15 Added GetSpaceChildren method SpaceType enum Set AccessToken method Issuer and IssuedTo properties for AccessToken TypeUrl property for MetasysObject Category property for MetasysObject ToString with JSON format for output objects 3.4.0 - 2020-03-26 Added Added ReadAttributeValue option flag for GetEquipmentPoints method. 3.3.0 - 2020-03-12 Added Added logClientErrors flag for MetasysClient constructor. Added logClientErrors flag for GetLegacyClient method. Added CredManException when an error occurs while retrieving Credential Manager target. Runtime errors are now automatically written to a dedicated text file. 3.2.0 - 2020-02-28 Added Added support to Credential Manager for TryLogin method of MetasysClient. Added support to Credential Manager for TryLoginWithCredMan method of LegacyMetasysClient. Added CredentialUtil to retrieve/set user and passwords from the secure vault. Added Log4Net support in MetasysClient and LegacyMetasysClient. Added Log4Net support in Basic Services as a facility for the host application (see example apps for usage). Fixed Mapping with ComPoint in LegacyClient and SpaceEquipment method. 3.1.0 - 2020-02-13 Added Dedicated Service Provider for Audits. Get Audits method with filter object. Get Single Audit by guid method. Get Audits for a specific object method. Fixed Empty Guid check on Get Equipment points. 3.0.0 - 2020-01-30 Added Dedicated Service Provider for Trends Get Trended Attributes method for a specific object. Get Samples for a specific object given the attribute ID and the Time filter. Changed Alarms services are now exposed by a dedicated Alarms provider of MetasysClient class. GetAlarms methods now returns a PagedResult of type AlarmItemProvider. GetSingleAlarm, GetAlarmsForAnObject, GetAlarmsForNetworkDevice methods now accept Guid object as input in Metasys Services. Fixed COM methods for Alarms accept input filter object and return results using proper mapping. 2.3.0 - 2020-01-20 Added Get Alarms method with filter object. Get Single Alarm by guid method. Get Alarms for a specific object or network devices methods. 2.0.0 - 2019-11-26 Added Get Spaces, Get Space Types and Get Equipment methods. Get Space Equipment and GetEquipment Points methods. Caching for Get Object Identifier. Changed MetasysHttpNotFoundException is raised when attempt to read from a nonexistent resource. ReadProperty and GetObjectIdentifier methods do not use nullable return type anymore. Factory for COM: GetLegacyClient is now the main method to get the instance. Host parameter was moved from TryLogin method to GetLegacyClient Factory. 1.0.0 - 2019-10-31 First Release. Added MetasysClient to perform basic Http requests on a Metasys server. LegacyMetasysClient for compatibility with COM services. Automatic enumeration translations for supported languages."
  },
  "CONTRIBUTING.html": {
    "href": "CONTRIBUTING.html",
    "title": "How to Contribute | Metasys Services",
    "keywords": "How to Contribute Please follow the contribution guidelines outlined below. Project Structure Prerequisites COM Development Work Area Setup Recommended Tools Adding Content Project Structure The main project is under MetasysServices: the MetasysClient. Any changes to the Http requests or core application content is made here. MetasysServicesCom contains the LegacyMetasysClient which is compatible with COM services. This project aims to match the original MSSDA as closely as possible. The LegacyMetasysClient is closely coupled with the MetasysClient since it uses it for all core application content. Prerequisites Have the .NET Framework 4.7.2 installed (installation options). You can check your installed versions with the clrver command. COM Development Have dotnet-zip installed (dotnet tool install --global dotnet-zip). Work Area Setup Follow the steps below to setup a personal work area to contribute to this repository. For more details see this help page. Fork the repository on Github and clone your new repository locally: $ git clone git@github.com:<Username>/basic-services-dotnet.git Setup Git workflow: $ git remote add upstream git@github.com:<Username>/basic-services-dotnet $ git remote add origin git@github.com:metasys-server/basic-services-dotnet.git $ git remote -v origin git@github.com:metasys-server/basic-services-dotnet.git (fetch) origin git@github.com:metasys-server/basic-services-dotnet.git (push) upstream git@github.com:<Username>/basic-services-dotnet (fetch) upstream git@github.com:<Username>/basic-services-dotnet (push) Create a new branch with an intuitive name describing your work such as: $ git checkout -b \"UpdateReadProperty\" Follow the Git workflow of pulling from origin, pushing upstream: $ git push upstream $ git pull origin master Create pull requests on the metasys-server/basic-services-dotnet repository (see Adding Content for pull request guidelines). Recommended Tools If using Visual Studio Code add the following extensions: markdownlint (linter for modifying markdown files) Markdown All in One (for modifying markdown files) Code Spell Checker (spellcheck for camel cased words) Adding Content Follow the general c# coding conventions specified by Microsoft here and naming guidelines here. Add tests to the appropriate .Tests folder for new code. Commits Use good commit messages to specify changes. Keep commit history clean (remove unnecessary messages). See these guidelines. Pull Requests Run ALL TESTS and ensure they pass before submitting a pull request. Create a good title that summarizes the reason for the merge. Include a short summary of changes (details should be included in commit messages). If addressing an issue on Github link the pull request in the issue's comment section. Move issue to \"In Review\" on applicable projects. Example comment message: \"Issue addressed in #1.\" Include @buldrinie as a reviewer on all pull requests. Include @mgwelch for architecture or design review request. Issue Tracking Add any new issues or bugs to the main GitHub repository for tracking purposes."
  },
  "README.html": {
    "href": "README.html",
    "title": "Metasys Basic Services | Metasys Services",
    "keywords": "Metasys Basic Services This project provides a library for accessing the most common services of the Metasys Server API. The intent is to provide an API that is very similar to the original MSSDA (Metasys System Secure Data Access) library. For versioning information see the changelog. Contents Installation Prerequisites .NET COM (Component Object Model) Excel and Visual Basic for Applications (VBA) Usage (.NET) Creating a Client Login and Access Tokens Localization of Metasys Enumerations Metasys Objects Get Object Id Get a Property Write a Property Get and Send Commands Get Children Network-Devices Get Network Device Types Get Network Devices Get Single Network Device Get Network Device Children Get Network Devices Hosting an Equipment Get Network Devices Serving a Space Equipments Get Equipments Get a Single Equipment Get Equipment Served by an Equipment Instance Get Equipments Serving a Space Get Equipment Points Get Equipments Hosted by a Network Device Get Equipments Serving an Equipment Instance Spaces Get Space Types Get Spaces Get Space Children Get a Single Space Get Spaces Served by an Equipment Get Spaces Served by a Network Device Activities Get Activities Alarms Get Alarms Get Single Alarm Get Alarms for an Object Get Alarms for a Network Device Get Alarm Annotations Acknowlege an Alarm Discard an Alarm Audits Get Audits Get Single Audit Get Audits for an Object Get Audit Annotations Discard an Audit Discard Multiple Audits Add Audit Annotation Add Multiple Audit Annotations Trends Get Object Trended Attributes Get Samples Get Network Device Trended Attributes Get Network Device Samples Enumerations Get Enumerations Get Enumeration Values Create a Custom Enumeration Edit a Custom Enumeration Replace a Custom Enumeration Delete a Custom Enumeration Streams Reading Object PresentValue COV Collecting Alarm Events Collecting Audit Events Keep the Stream Alive 'Ad-Hoc' call SendAsync Activities Get Activities Multiple Actions Usage (COM) Creating a Client Login and Access Tokens Metasys Objects Get Object Id Get a Property Write a Property Get and Send Commands Get Children Network-Devices Get Network Device Types Get Network Devices Get Single Network Device Get Network Device Children Get Network Devices Hosting an Equipment Get Network Devices Serving a Space Equipments Get Equipments Get a Single Equipment Get Equipment Served by an Equipment Instance Get Equipments Serving a Space Get Equipment Points Get Equipments Hosted by a Network Device Get Equipments Serving an Equipment Instance Spaces Get Space Types Get Spaces Get Space Children Get a Single Space Get Spaces Served by an Equipment Get Spaces Served by a Network Device Alarms Get Alarms Get Single Alarm Get Alarms for an Object Get Alarms for a Network Device Get Alarm Annotations Acknowlege an Alarm Discard an Alarm Audits Get Audits Get Single Audit Get Audits for an Object Get Audit Annotations Discard an Audit Discard Multiple Audits Add Audit Annotation Add Multiple Audit Annotations Trends Get Object Trended Attributes Get Samples Get Network Device Trended Attributes Get Network Device Samples Enumerations Get Enumerations Get Enumeration Values Create a Custom Enumeration Edit a Custom Enumeration Replace a Custom Enumeration Delete a Custom Enumeration Streams Reading Object PresentValue COV Collecting Alarm Events Collecting Audit Events Keep the Stream Alive License Contributing Additional Information Supported Localization Languages Customizing Windows IIS for Metasys API Installation Prerequisites A method of installing NuGet packages as described by the Microsoft Package Consumpion Workflow. .NET To use in a .NET application include the following in the target source files: using JohnsonControls.Metasys.BasicServices; Option 1: Consume the package by adding a PackageReference. Add the following to the project's .csproj file: <ItemGroup> <PackageReference Include=\"JohnsonControls.Metasys.BasicServices\" Version=\"<target version>\" /> </ItemGroup> Option 2: Consume the package by installing on the command line. This workflow shows how to use the nuget.exe CLI (command line interface). Open a command line and navigate to your project's main directory. Execute the following command: nuget install JohnsonControls.Metasys.BasicServices -OutputDirectory packages Update all packages with the command: nuget restore COM (Component Object Model) Use the one click setup provided with the release tag to install the required dependencies in your system and register the COM DLL. Keep in mind that for developing purposes the solution is already configured to register with the COM interop when the project is built. Alternatively, you can manually register or unregister the DLL use the RegCOM.bat and UnregCOM.bat scripts located in the Scripts directory. To manually register for COM interop you can also use the Regasm.exe (Assembly Registration Tool) or similar tool. See more information here. Excel and Visual Basic for Applications (VBA) LegacyMetasysClient allows you to interact with your Metasys server from a VBA application using COM interop. To get start, enable the Developer Tab in Excel from the menu File-->Options-->Customize Ribbon. See more information here. Finally, from the Developer Tab click the Visual Basic button to open the editor and add the reference to the Metasys Services Object Library from the references list. See more information here. Usage (.NET) This section demonstrates how to use the MetasysClient to interact with your Metasys server from a .NET application. There is an example on Github that can be run from the command line and a specific prototype of an API to API integration about a Weather Forecast application. Creating a Client To create a new client and connect to a Metasys server with the default settings use: var client = new MetasysClient(\"hostname\"); There are four optional parameters when creating a new client: ignoreCertificateErrors: If your server does not have a valid certificate the MetasysClient will not behave as expected and will likely block the connection. Setting the ignoreCertificateErrors = true will ignore this error and make an insecure connection with the server. To avoid this problem ensure the Metasys server has a valid certificate. WARNING: You should not ignore certificate errors on a production site. Doing so puts your server at risk of a man-in-the-middle attack. apiVersion: if your server is not a current 10.1 Metasys server or later this SDK will not function correctly. The version parameter takes in an ApiVersion enumeration value that defaults to the most current release of Metasys. For Metasys 10.1 the api version is v2, for Metasys 11 the api version is v3, for Metasys 12 the api version is v4 and for Metasys 13 the api version is v5. cultureInfo: to set the language for localization specify the target culture with a CultureInfo object. The default culture is en-US. logClientErrors: set this flag to false to disable logging of client errors. By default the library logs any communication error with the Metasys Server in this path: \"C:\\ProgramData\\Johnson Controls\\Metasys Services\\Logs\". timeout: to set the timeout (in seconds) of the https requests. The default timeut value is 300 sec. Example: the following code shows how to create a client that ignores certificate errors for a v12 Metasys server with Italian translations of values: CultureInfo culture = new CultureInfo(\"it-IT\"); var client = new MetasysClient(\"hostname\", true, ApiVersion.v4, culture); In some cases you may want to enrich logs with more specific messages to your application. Typically, you disable internal library logging and catch Metasys Exceptions to be handled in your own logging framework or in use for Log4Net initializer provided by the library. The file log4Net.config allows you to customize settings such as the file path, size, append mode, etc. To create a client with default settings that does not log errors use: var client = new MetasysClient(\"hostname\", logClientErrors: false); To log your own errors with Log4Net initializer provided by the library use: // Initialize Logger with your context Class var log = new LogInitializer(typeof(Program)); try { // Your Try logic here... } catch (Exception ex) { log.Logger.Error(string.Format(\"An error occured - {0}\", ex.Message)); } See the following examples to change the API version and/or hostname after creating a client, keep in mind that changing one of these properties resets the access token and a new login is required. // Changing Api version after creating a client var client = new MetasysClient(\"hostname\",version: ApiVersion.v3); client.Version = ApiVersion.v2; // Changing Metasys Server after creating a client var client = new MetasysClient(\"hostname\"); client.Hostname = \"WIN2016-VM2\"; Login and Access Tokens After creating the client, to login use the method TryLogin. The signature has two overloads: the first uses the Credential Manager target to read the credentials, whilst the second takes a username and password. Both signatures take an optional parameter to automatically refresh the access token during the client's lifetime. The default token refresh policy is true. See more information here on how to use Credential Manager. If something goes wrong while accessing a Credential Manager target, MetasysClient raises a CredManException. Keep in mind that Credential Manager is available on Windows and is not going to work on other platforms. However, MetasysClient Class could be extended by developers to implement different secure vaults support. Notice: when developing an application that uses a system account always logged without user input, the preferred way to login is to store the username and password in the Credential Manager vault. // Automatically refresh token using plain credentials client.TryLogin(\"username\", \"password\"); // Do not automatically refresh token using plain credentials client.TryLogin(\"username\", \"password\", false); // Read target from Credential Manager and automatically refresh token client.TryLogin(\"metasys-energy-app\"); // Read target from Credential Manager and do not refresh token client.TryLogin(\"metasys-energy-app\", false); // Sample of a valid access token returne by the previous methods: /* { \"Issuer\": \"metasysserver\", \"IssuedTo\": \"metasysapiuser\", \"Token\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkJzR0lWelVZcjN0MkI0RGRtT1ljMTdBLVZJOCIsImtpZCI6IkJzR0lWelVZcjN0MkI0RGRtT1ljMTdBLVZJOCJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0Ojk1MDYvQVBJLkF1dGhlbnRpY2F0aW9uU2VydmljZSIsImF1ZCI6Imh0dHA6Ly9sb2NhbGhvc3Q6OTUwNi9BUEkuQXV0aGVudGljYXRpb25TZXJ2aWNlL3Jlc291cmNlcyIsImV4cCI6MTU4OTI5MzEzMCwibmJmIjoxNTg5MjkxMzMwLCJjbGllbnRfaWQiOiJtZXRhc3lzX3VpIiwic2NvcGUiOlsibWV0YXN5c19hcGkiLCJvZmZsaW5lX2FjY2VzcyIsIm9wZW5pZCJdLCJzdWIiOiI4ZGE4YjE4Yy1lMTk1LTRlMmMtOGU2Zi0zNTE2Zjc0ZWFhNGIiLCJhdXRoX3RpbWUiOjE1ODkyOTEzMzAsImlkcCI6Imlkc3J2IiwiVXNlcklkIjoiMSIsIlVzZXJOYW1lIjoibWV0YXN5c3N5c2FnZW50IiwiSXNBZG1pbiI6IlRydWUiLCJJc1Bhc3N3b3JkQ2hhbmdlUmVxdWlyZWQiOiJGYWxzZSIsIklzVGVybXNBbmRDb25kaXRpb25zUmVxdWlyZWQiOiJGYWxzZSIsIkxpY2Vuc2VJbmZvIjoie1wiSXNMaWNlbnNlZFwiOnRydWUsXCJMaWNlbnNlVHlwZVwiOlwiZ3JhY2VcIn0iLCJDdWx0dXJlIjoiZW4tVVMiLCJhbXIiOlsicGFzc3dvcmQiXX0.egzw1bs1831pEBWWXbBOYWGU5wFsI3sEnL7RgCIHHbHmcxtpPPqLq54znpoUoLFrMUeymZj5rkrt_mF-CNIpCE3halZNAH-CR1U46LTZi5CMaDfYlP-wHxikAGV5GwFjlHjGNOUaFtd7n4yC5sH08pHQfXXD5gKDm_FVMfUJXAo-E8gmrkU0wMn5U2FRyQyj7Yhq6jaj7MPTF__Xz46sG3WtDr45WK2NmuwiLDv408URZ5fJxlMngRpjSIONHVAIwna_H0AguHiIELkvuRVYcRqIH5kb1YdFt-3fsnTV9xwpozZZ44dh-4I7x466I-UGlLHAnScWILUbPcpRNWm0Uw\", \"Expires\": \"2020-05-12T14:18:51Z\" } */ In case you need to get a new access token then use the method Refresh before the token expiration time. client.Refresh(); To get the current access token (e.g. to use it in an different HttpClient) use the method GetAccessToken. client.GetAccesToken() To get the current date & time of the server you can use the method GetServerTime. client.GetServerTime() Localization of Metasys Enumerations To get automatically translated enumerations from a Metasys server you have to use the method Localize. Note that you must specify the culture during client creation, or set the \"Culture\" property before using the \"get\" methods. The default language for translations will be the machine's current culture (see more information here) or en-US (American English) if the language is not supported (see Supported Localization Languages). client.Culture = new CultureInfo(\"it-IT\"); Enumerations returned from a Metasys server will be in a format similar to: \"reliabilityEnumSet.reliable\". MetasysClient has a method to translate these enumerations manually. This method can be very useful if using an external HttpClient since Metasys servers do not hold translation information. // Access from the client object string translated = client.Localize(\"reliabilityEnumSet.reliable\"); // Reliable // Access without instantiating a client string translated = ResourceManager.Localize(\"reliabilityEnumSet.reliable\", new CultureInfo(\"it-IT\")); // Affidabile Note: If an automatically translated value (such as Variant.StringValue) contains an enumeration value and not a translated string there could be an error with the MetasysClient globalization setup. If the enumeration key is desired over the translated value use the EnumerationKey attribute. For example, the translated Variant.Reliability has the enumeration key under the attribute: Variant.ReliabilityEnumerationKey. See the documentation of each Model for more information. Metasys Objects Get Object Id In order to use most of the methods in MetasysClient the identifier (Id) of the target object must be known. This Id is in the form of a Guid and can be requested using the method GetObjectIdentifier given you know the 'Fully Qualified Reference' (FQR) of the object: Guid objectId = client.GetObjectIdentifier(\"Win2016-VM2:vNAE2343996/Field Bus MSTP1.VAV-08.ZN-SP\"); Console.WriteLine(objectId); /* d5d96cd3-db4a-52e0-affd-8bc3393c30ec */ Get a Property In order to get a property you must know the Guid of the target object and then you can use the method ReadProperty. An object called \"Variant\" is returned when getting a property from an object. Variant contains the property received in many different forms. There is a bit of intuition when handling a Variant since it will not explicitly provide the type of object received by the server. If the server cannot find the target object or attribute on the object this method will throw a MetasysHttpNotFoundException. Variant property = client.ReadProperty(objectId, \"presentValue\"); Console.WriteLine(property); /* { \"StringValue\": \"72\", \"StringValueEnumerationKey\": null, \"NumericValue\": 72.0, \"BooleanValue\": true, \"ArrayValue\": null, \"Attribute\": \"presentValue\", \"Id\": \"f1469e25-c46c-5009-b92e-d82603e742a4\", \"Reliability\": \"Reliable\", \"ReliabilityEnumerationKey\": \"reliabilityEnumSet.reliable\", \"Priority\": \"0 (No Priority)\", \"PriorityEnumerationKey\": \"writePriorityEnumSet.priorityNone\", \"IsReliable\": true } */ To get multiple properties from multiple objects in one action use the method ReadPropertyMultiple. This can be very useful if the objects all are of the same type or have the same target properties. List<Guid> ids = new List<Guid> { id1, id2 }; List<string> attributes = new List<string> { \"name\", \"description\", \"presentValue\" }; IEnumerable<VariantMultiple> results = client.ReadPropertyMultiple(ids, attributes); VariantMultiple multiple1 = results.FindById(id1); Console.WriteLine(multiple1); /* { \"Id\": \"d5d96cd3-db4a-52e0-affd-8bc3393c30ec\", \"Variants\": [ { \"StringValue\": \"ZN-T\", \"StringValueEnumerationKey\": \"ZN-T\", \"NumericValue\": 0.0, \"BooleanValue\": false, \"ArrayValue\": null, \"Attribute\": \"name\", \"Id\": \"d5d96cd3-db4a-52e0-affd-8bc3393c30ec\", \"Reliability\": \"Reliable\", \"ReliabilityEnumerationKey\": \"reliabilityEnumSet.reliable\", \"Priority\": null, \"PriorityEnumerationKey\": null, \"IsReliable\": true }, { \"StringValue\": \"Zone Temperature\", \"StringValueEnumerationKey\": \"Zone Temperature\", \"NumericValue\": 0.0, \"BooleanValue\": false, \"ArrayValue\": null, \"Attribute\": \"description\", \"Id\": \"d5d96cd3-db4a-52e0-affd-8bc3393c30ec\", \"Reliability\": \"Reliable\", \"ReliabilityEnumerationKey\": \"reliabilityEnumSet.reliable\", \"Priority\": null, \"PriorityEnumerationKey\": null, \"IsReliable\": true } ] } */ Variant multiple1Description = multiple1.FindAttributeByName(\"description\"); Write a Property In order to write a property you must have the Guid of the object and know the attribute name and type and then you have to use the method WriteProperty. Guid id = client.GetObjectIdentifier(\"siteName:naeName/Folder1.AV1\"); client.WriteProperty(id, \"description\", \"This is an AV.\"); To change the same attribute values of many objects use the method WritePropertyMultiple. List<Guid> ids = new List<Guid> { id1, id2 }; // Write to many attributes values using a list of tuples List<(string, object)> attributesList = new List<(string, object)> { (\"description\", \"This is an AV.\") }; client.WritePropertyMultiple(ids, attributesList); // Write to many attributes values using a dictionary of attribute/value pairs Dictionary<string, object> attributesDictionary = new Dictionary<string, object> { { \"description\", \"This is an AV.\" } }; client.WritePropertyMultiple(ids, attributesDictionary); Get and Send Commands To get all available commands on an object use the method GetCommands. This method will return a list of Command objects. The ToString() method is a useful tool to display the available commands and any information associated with it. When sending a command the Command.CommandId attribute is used as the parameter: List<Command> commands = client.GetCommands(objectId).ToList(); Command command = commands.FindById(\"Adjust\"); Console.WriteLine(command); /* { \"Title\": \"Adjust\", \"TitleEnumerationKey\": \"commandIdEnumSet.adjustCommand\", \"CommandId\": \"Adjust\", \"Items\": [ { \"Title\": \"Value\", \"Type\": \"number\", \"EnumerationValues\": null, \"Minimum\": null, \"Maximum\": null } ] } */ When sending a command there may or may not be a single value or list of values that needs to be sent with the command. The property Command.Items will list all of these values as Items which contains the Title and Type of the value to change. If the type of an Item is \"oneOf\" this indicates the values is an enumeration and the possible values will be contained in the EnumerationValues list. Keep in mind the values to be sent in the command is the TitleEnumerationKey not the Title. The Title is the user friendly translated value that describes the enumeration. For example, an \"AV Mapper\" object has the following commands: \"Adjust\" that accepts a number value to adjust the present value. \"TemporaryOperatorOverride\" that accepts the value to adjust the present value, the hours, and the minutes for the temporary adjustment. \"Release\" which accepts two enumeration values for the attribute and new priority level. The values on the Commands will model the following: Command adjust = commands.FindById(\"Adjust\"); Command operatorOverride = commands.FindById(\"OperatorOverride\"); Command release = commands.FindById(\"Release\"); Console.WriteLine(release); /* { \"Title\": \"Release\", \"TitleEnumerationKey\": \"commandIdEnumSet.releaseCommand\", \"CommandId\": \"Release\", \"Items\": [ { \"Title\": \"oneOf\", \"Type\": \"enum\", \"EnumerationValues\": [ { \"Title\": \"Present Value\", \"TitleEnumerationKey\": \"attributeEnumSet.presentValue\" } ], \"Minimum\": 1.0, \"Maximum\": 1.0 }, { \"Title\": \"oneOf\", \"Type\": \"enum\", \"EnumerationValues\": [ { \"Title\": \"0 (No Priority)\", \"TitleEnumerationKey\": \"writePriorityEnumSet.priorityNone\" }, { \"Title\": \"1 (Manual Life Safety)\", \"TitleEnumerationKey\": \"writePriorityEnumSet.priorityManualEmergency\" }, { \"Title\": \"2 (Auto Life Safety)\", \"TitleEnumerationKey\": \"writePriorityEnumSet.priorityFireApplications\" }, { \"Title\": \"3 (Application)\", \"TitleEnumerationKey\": \"writePriorityEnumSet.priority3\" }, { \"Title\": \"4 (Application)\", \"TitleEnumerationKey\": \"writePriorityEnumSet.priority4\" }, { \"Title\": \"5 (Critical Equipment)\", \"TitleEnumerationKey\": \"writePriorityEnumSet.priorityCriticalEquipment\" }, { \"Title\": \"6 (Minimum On Off)\", \"TitleEnumerationKey\": \"writePriorityEnumSet.priorityMinimumOnOff\" }, { \"Title\": \"7 (Heavy Equip Delay)\", \"TitleEnumerationKey\": \"writePriorityEnumSet.priorityHeavyEquipDelay\" }, { \"Title\": \"8 (Operator Override)\", \"TitleEnumerationKey\": \"writePriorityEnumSet.priorityOperatorOverride\" }, { \"Title\": \"9 (Application)\", \"TitleEnumerationKey\": \"writePriorityEnumSet.priority9\" }, { \"Title\": \"10 (Application)\", \"TitleEnumerationKey\": \"writePriorityEnumSet.priority10\" }, { \"Title\": \"11 (Demand Limiting)\", \"TitleEnumerationKey\": \"writePriorityEnumSet.priorityDemandLimiting\" }, { \"Title\": \"12 (Application)\", \"TitleEnumerationKey\": \"writePriorityEnumSet.priority12\" }, { \"Title\": \"13 (Load Rolling)\", \"TitleEnumerationKey\": \"writePriorityEnumSet.priorityLoadRolling\" }, { \"Title\": \"14 (Application)\", \"TitleEnumerationKey\": \"writePriorityEnumSet.priority14\" }, { \"Title\": \"15 (Scheduling)\", \"TitleEnumerationKey\": \"writePriorityEnumSet.prioritySchedulingOst\" }, { \"Title\": \"16 (Default)\", \"TitleEnumerationKey\": \"writePriorityEnumSet.priorityDefault\" } ], \"Minimum\": 1.0, \"Maximum\": 1.0 } ] } */ To send the command use the method SendCommand as showed in the follwing samples: var list1 = new List<object> { 70 }; client.SendCommand(objectId, adjust.CommandId, list1); var list2 = new List<object> { 75 }; client.SendCommand(objectId, operatorOverride.CommandId, list2); var list3 = new List<object> { \"attributeEnumSet.presentValue\", \"writePriorityEnumSet.priorityNone\" }; client.SendCommand(objectId, release.CommandId, list3); Get Children To get the child objects of an object use the method GetObjects. This method requires the identifier (Guid) of the parent object and an optional number of levels to retrieve. The default is 1 level or just the immediate children of the object. Depending on the number of objects on your server this method can take a very long time to complete. Guid parentId = client.GetObjectIdentifier(\"WIN-21DJ9JV9QH6:EECMI-NCE25-2/FCB\"); // Get direct children (1 level) List<MetasysObject> directChildren = client.GetObjects(parentId).ToList(); MetasysObject lastChild = directChildren.LastOrDefault(); Console.WriteLine(lastChild); /* { \"ItemReference\": \"Win2016-VM2:vNAE2343996/Field Bus MSTP1.VAV-08.ZN-T\", \"Id\": \"d5d96cd3-db4a-52e0-affd-8bc3393c30ec\", \"Name\": \"ZN-T\", \"Description\": null, \"Type\": null, \"TypeUrl\": \"https://win2016-vm2/api/v2/enumSets/508/members/601\", \"Category\": null, \"Children\": [], \"ChildrenCount\": 0 } */ // Get direct children (1 level) with internal objects directChildren = client.GetObjects(parentId, includeInternalObjects:true).ToList(); // Get descendant for 2 levels (it could take long time, depending on the number of objects) List<MetasysObject> level2Descendants = client.GetObjects(parentId, 2).ToList(); MetasysObject level1Parent = level2Descendants.FindByName(\"Time\"); Console.WriteLine(level1Parent); /* { \"ItemReference\": \"Win2016-VM2:vNAE2343996/WeatherForecast.Time\", \"Id\": \"22bb952e-7557-5de9-b7e5-dce39e21addd\", \"Name\": \"Time\", \"Description\": null, \"Type\": null, \"TypeUrl\": \"https://win2016-vm2/api/v2/enumSets/508/members/176\", \"Category\": null, \"Children\": [ { \"ItemReference\": \"Win2016-VM2:vNAE2343996/WeatherForecast.Time.Day\", \"Id\": \"5886a93f-9260-553c-995e-6a65374de85d\", \"Name\": \"Day\", \"Description\": null, \"Type\": null, \"TypeUrl\": \"https://win2016-vm2/api/v2/enumSets/508/members/165\", \"Category\": null, \"Children\": [], \"ChildrenCount\": 0 }, { \"ItemReference\": \"Win2016-VM2:vNAE2343996/WeatherForecast.Time.Hour\", \"Id\": \"6a50d3af-d0a2-537c-a2f7-9c1b5f271cc5\", \"Name\": \"Hour\", \"Description\": null, \"Type\": null, \"TypeUrl\": \"https://win2016-vm2/api/v2/enumSets/508/members/165\", \"Category\": null, \"Children\": [], \"ChildrenCount\": 0 }, { \"ItemReference\": \"Win2016-VM2:vNAE2343996/WeatherForecast.Time.Minute\", \"Id\": \"19a53f38-2fd7-5ac3-a12c-f3b9704ac194\", \"Name\": \"Minute\", \"Description\": null, \"Type\": null, \"TypeUrl\": \"https://win2016-vm2/api/v2/enumSets/508/members/165\", \"Category\": null, \"Children\": [], \"ChildrenCount\": 0 }, { \"ItemReference\": \"Win2016-VM2:vNAE2343996/WeatherForecast.Time.Year\", \"Id\": \"74dfc214-22c1-57a7-ace5-606636d0049c\", \"Name\": \"Year\", \"Description\": null, \"Type\": null, \"TypeUrl\": \"https://win2016-vm2/api/v2/enumSets/508/members/165\", \"Category\": null, \"Children\": [], \"ChildrenCount\": 0 } ], \"ChildrenCount\": 4 } */ Network-Devices All services about network devices are provided by NetworkDevices local instance of MetasysClient. Get Network Device Types To get all of the available types on your server use the method NetworkDevices.GetTypes (method GetNetworkDeviceTypes is deprecated) which returns a list of MetasysObjectType. Note: instead of the optional type number you can also specify the network device type parameter using a dedicated enumeration set (called NetworkDeviceTypeEnum) that helps you to identify the needed type. List<MetasysObjectType> types = client.NetworkDevices.GetTypes().ToList(); Console.WriteLine(types[0]); /* { \"Description\": \"NAE55-NIE59\", \"DescriptionEnumerationKey\": \"objectTypeEnumSet.n50Class\", \"Id\": 185 } */ Get Network Devices To get all the available network devices use the method NetworkDevices.Get (method GetNetworkDevices is deprecated) which returns a list of MetasysObjects. This accepts an optional type number as a string to filter the response. int type1 = types[0].Id; List<MetasysObject> devices = client.NetworkDevices.Get(type1.ToString()).ToList(); MetasysObject device = devices.LastOrDefault(); Console.WriteLine(device); /* { \"ItemReference\": \"Win2016-VM2:vNAE2343996\", \"Id\": \"142558f8-c4c7-5f89-be97-d806adb72053\", \"Name\": \"vNAE2343996\", \"Description\": \"\", \"Type\": null, \"TypeUrl\": \"https://win2016-vm2/api/v2/enumSets/508/members/185\", \"Category\": null, \"Children\": [], \"ChildrenCount\": 0 } */ List<MetasysObject> devices2 = client.NetworkDevices.Get(NetworkDeviceTypeEnum.SNC).ToList(); MetasysObject device2 = devices2.LastOrDefault(); Console.WriteLine(device2); /* { \"ItemReference\": \"WIN-21DJ9JV9QH6:EECMI-SNC-KNX\", \"Id\": \"69b3c2a5-1090-5418-afd9-5efc7186e42f\", \"Name\": \"EECMI-SNC-KNX\", \"Description\": \"\", \"Type\": null, \"TypeUrl\": \"https://win-21dj9jv9qh6/api/v3/enumSets/508/members/448\", \"ObjectType\": null, \"Category\": null, \"Children\": [], \"ChildrenCount\": 0 } */ Get Single Network Device To get a single network device use the method NetworkDevices.FindById which returns a Metasys Object corresponding to the network device Id passed as parameter. Get Network Device Children To retrieves the collection of network devices that are children of the specified network device use the method NetworkDevices.GetChildren which return a list of Metasys Objects according to the network device Id (Guid) passed as parameter. Get Network Devices Hosting an Equipment To retrieve the collection of network devices that host the specified equipment instance use the method NetworkDevices.GetHostingAnEquipment which return a list of Metasys Objects according to the equipment Id (Guid) passed as parameter. Get Network Devices Serving a Space To retrieve the collection of network devices that are serving the specified space use the method NetworkDevices.GetServingASpace which return a list of Metasys Objects according to the space Id (Guid) passed as parameter. Equipments All services about equipments are provided by Equipments local instance of MetasysClient. Get Equipments To retrieves a collection of equipment instances you can use the method Equipments.Get (method GetEquipment is deprecated). This method returns a list of 'MetasysObject' objects and doesn't expect any parameter. It is possible to set a few optional parameters as: page (that specifies the number of the page of the items that will be returned) and pageSize (that specifies the number of items per page). NOTE: when the parameter page is specified then the method will return ony the items associated to the specified page. Vive-versa, the method will return all the items. Get a Single Equipment To get a single Equipment object instance you can use the method Equipments.FindById. This method returns the 'MetasysObject' object related to the equipment Id specified as parameter. Get Equipment Served by an Equipment Instance To retrieve the equipment served by the specified equipment instance you can use the method Equipments.GetServedByEquipment. This method returns a list of 'MetasysObject' objects and expects the equipment instance Id. Get Equipments Serving a Space If you wish to retrieve the list of equipment for a given space you have to use the method Equipments.GetServingASpace (method GetSpaceEquipment is deprecated). The deeper element in the hierarchy is the point. IEnumerable<MetasysObject> spaceEquipment = client.Equipments.GetServingASpace(building.Id); MetasysObject sampleSpaceEquipment = spaceEquipment.FirstOrDefault(); Get Equipment Points To get all the points of an equipment use the method Equipments.GetPoints (method GetEquipmentPoint is deprecated). It requires the identifier of the equipment instance and returns the list of 'MetasysPoint' objects. IEnumerable<MetasysPoint> equipmentPoints = client.Equipments.GetPoints(sampleEquipment.Id); MetasysPoint point = equipmentPoints.FindByShortName(\"CLG-O\"); string presentValue = point.PresentValue?.StringValue; Console.WriteLine(point); /* { \"EquipmentName\": \"AHU-07\", \"ShortName\": \"CLG-O\", \"Label\": \"Cooling Output\", \"Category\": \"\", \"IsDisplayData\": true, \"ObjectId\": \"9dd107cf-e8dc-583a-9557-813395ae1971\", \"AttributeUrl\": \"https://win2016-vm2/api/v2/enumSets/509/members/85\", \"ObjectUrl\": \"https://win2016-vm2/api/v2/objects/9dd107cf-e8dc-583a-9557-813395ae1971\", \"PresentValue\": { \"StringValue\": \"0\", \"StringValueEnumerationKey\": null, \"NumericValue\": 0.0, \"BooleanValue\": false, \"ArrayValue\": null, \"Attribute\": \"presentValue\", \"Id\": \"9dd107cf-e8dc-583a-9557-813395ae1971\", \"Reliability\": \"Reliable\", \"ReliabilityEnumerationKey\": \"reliabilityEnumSet.reliable\", \"Priority\": \"0 (No Priority)\", \"PriorityEnumerationKey\": \"writePriorityEnumSet.priorityNone\", \"IsReliable\": true } } */ Get Equipments Hosted by a Network Device To retrieve the equipments hosted by the specified network device or its children use the method Equipments.GetHostedByNetworkDevice. This method returns a list of 'MetasysObject' objects and expects a network device Id as parameter. Note: a network device is considered to host an equipment if the equipment defines points that map to an attribute of any object contained on the network device. Get Equipments Serving an Equipment Instance To retrieve the equipments that serve the specified equipment instance use the method Equipments.GetServingAnEquipment. This method returns alist of 'MetasysObject' and expect an equipment Id as parameter. Spaces All services about spaces are provided by Spaces local instance of MetasysClient. Get Space Types To get all the space types use the method Spaces.GetTypes (method GetSpaceTypes is deprecated). This method returns a list of 'MetasysObjectType' objects. IEnumerable<MetasysObjectType> spaceTypes = client.GetSpaceTypes(); foreach (var type in spaceTypes) { Console.WriteLine(type); } /* { \"Description\": \"Building\", \"DescriptionEnumerationKey\": \"Building\", \"Id\": 1 } { \"Description\": \"Floor\", \"DescriptionEnumerationKey\": \"Floor\", \"Id\": 2 } { \"Description\": \"Generic\", \"DescriptionEnumerationKey\": \"Generic\", \"Id\": 0 } { \"Description\": \"Room\", \"DescriptionEnumerationKey\": \"Room\", \"Id\": 3 } */ Get Spaces To get all available spaces use the method Spaces.Get (method GetSpaces is deprecated). This method returns a list of 'MetasysObject' objects. This accepts some optional parameters as type (enum), page (int), pageSize (int) and sort (string) to filter the response. // Retrieves the list of Buildings using SpaceTypeEnum helper List<MetasysObject> buildings = client.GetSpaces(SpaceTypeEnum.Building).ToList(); MetasysObject building = buildings.LastOrDefault(); Console.WriteLine(building); /* { \"ItemReference\": \"Win2016-VM2:Win2016-VM2/JCI.Building 1\", \"Id\": \"164aaba2-0fb3-5b5d-bfe9-49cf6b797c93\", \"Name\": \"North America (BACnet)\", \"Description\": null, \"Type\": 2, \"TypeUrl\": \"https://win2016-vm2/api/v2/enumSets/1766/members/1\", \"Category\": \"Building\", \"Children\": [], \"ChildrenCount\": 0 } */ // Retrieves all the spaces in a flat hierarchy List<MetasysObject> spaces = client.GetSpaces().ToList(); MetasysObject firstSpace = spaces.FirstOrDefault(); Console.WriteLine(firstSpace); /* { \"ItemReference\": \"Win2016-VM2:Win2016-VM2/JCI.Building 1.Floor 1.Milwaukee.507 E Michigan Street Campus\", \"Id\": \"896ba096-db3c-5038-8505-636785906cca\", \"Name\": \"507 E Michigan Street Campus\", \"Description\": null, \"Type\": 2, \"TypeUrl\": \"https://win2016-vm2/api/v2/enumSets/1766/members/3\", \"Category\": \"Room\", \"Children\": [], \"ChildrenCount\": 0 } */ Get Space Children To retrieve the children of a space instance use the method Spaces.GetChildren (method GetSpaceChildren is deprecated). This meethod requires the identifier of the 'parent' space instance and returns a list of 'MetasysObject' objects. IEnumerable<MetasysObject> spaceChildren = client.Spaces.GetChildren(building.Id); Get a Single Space To retrieve a single space object use the method Spaces.FindById. This method returns the 'MetasysObject' object related to the space Id specified as parameter. Get Spaces Served by an Equipment To retrieve the spaces served by the specified equipment instance use the method Spaces.GetServedByEquipment. This method returns a list of 'MetasysObject' objects and expect the equipment Id as parameter. Get Spaces Served by a Network Device To retrieve the spaces served by the specified network device instance use the method Spaces.GetServedByNetworkDevice. This method returns a list of 'MetasysObject' objects and expect the network device Id as parameter. Activities Available since API v4 All services about activities are provided by Activities local instance of MetasysClient. Since API v4 Activities services replace some services provided by Alarms and Audits as Alarms.Get or Audits.Get that are deprecated from API v4 on. Get Activities To get all available alarms or audits use the method Activities.Get and set the parameter ActivityType to alarm or audit. This method returns a 'PagedResult' with a list of 'Activity' objects and expects an 'ActivityFilter' object to filter the response. ActivityFilter activityFilter = new ActivityFilter { StartTime = new DateTime(2023, 10, 15), EndTime = new DateTime(2023, 10, 18), ActivityType = \"alarm\", IncludeAcknowledged = false, IncludeDiscarded = true }; PagedResult<Activity> activitiesPager = client.Activities.Get(activityFilter); // Prints the number of records fetched and paging information Console.WriteLine(\"Total:\" + activitiesPager.Total); Console.WriteLine(\"Current page:\" + activitiesPager.CurrentPage); Console.WriteLine(\"Page size:\" + activitiesPager.PageSize); Console.WriteLine(\"Pages:\" + activitiesPager.PageCount); /* Console Output: Start Total:8802 Current page:1 Page size:100 Pages:89 Console Output: End */ Activity activity = activitiesPager.Items.ElementAt(0); Console.WriteLine(activity); /* Console Output: Start { \"id\": \"7ba495a9-1e24-4894-9729-1f474a1b5ef0\", \"itemReference\": \"EECMI-ADX-13:SNE00108D0AD2F6\", \"objectName\": \"M4-SNC25150-0\", \"activityManagementStatus\": \"discarded\", \"discardedTime\": \"2024-01-18T16:12:46.763Z\", \"creationTime\": \"2023-10-18T17:35:55Z\", \"spaces\": [], \"equipment\": [], \"objectUrl\": \"https://10.164.104.103/api/v5/objects/f4dd71f5-5703-54ff-81ae-4ee021e32f6d\", \"objectId\": \"f4dd71f5-5703-54ff-81ae-4ee021e32f6d\", \"alarm\": { \"message\": \"EECMI-ADX-13:SNE00108D0AD2F6 is online\", \"alarmGeneratorObject\": null, \"isAckRequired\": true, \"acknowledgedTime\": null, \"type\": \"alarmValueEnumSet.avOnline\", \"priority\": 106, \"category\": \"objectCategoryEnumSet.systemCategory\", \"annotationsUrl\": \"https://10.164.104.103/api/v5/alarms/7ba495a9-1e24-4894-9729-1f474a1b5ef0/annotations\", \"annotationsCount\": 1, \"self\": \"https://10.164.104.103/api/v5/alarms/7ba495a9-1e24-4894-9729-1f474a1b5ef0\", \"triggerValue\": { \"item\": \"\", \"schema\": { \"type\": \"string\", \"metasysType\": \"string\", \"units\": { \"id\": \"unitEnumSet.noUnits\", \"title\": \"\" } } }, \"description\": \"\", \"associatedGraphic\": null } }, Console Output: End */ Alarms All services about alarms are provided by Alarms local instance of MetasysClient. Get Alarms Deprecated from API v4 on To get all available alarms use the method Alarms.Get. This method returns a 'PagedResult' with a list of 'Alarm' objects and expects an 'AlarmFilter' object to filter the response. AlarmFilter alarmFilter = new AlarmFilter { StartTime = new DateTime(2020, 5, 1), EndTime = new DateTime(2020, 6, 2), ExcludeAcknowledged = true }; PagedResult<Alarm> alarmsPager = client.Alarms.Get(alarmFilter); // Prints the number of records fetched and paging information Console.WriteLine(\"Total:\" + alarmsPager.Total); Console.WriteLine(\"Current page:\" + alarmsPager.CurrentPage); Console.WriteLine(\"Page size:\" + alarmsPager.PageSize); Console.WriteLine(\"Pages:\" + alarmsPager.PageCount); /* Console Output: Start Total:4611 Current page:1 Page size:100 Pages:47 Console Output: End */ Alarm alarm = alarmsPager.Items.ElementAt(0); Console.WriteLine(alarm); /* Console Output: Start { \"Self\": \"https://win-21dj9jv9qh6/api/v3/alarms/e03d81f9-69de-48e8-92d7-81167df19f6c\", \"Id\": \"e03d81f9-69de-48e8-92d7-81167df19f6c\", \"ItemReference\": \"WIN-21DJ9JV9QH6:EECMI-NCE25-3\", \"Name\": \"EECMI-NCE25-3\", \"Message\": \"WIN-21DJ9JV9QH6:EECMI-NCE25-3 is offline\", \"IsAckRequired\": true, \"TypeUrl\": null, \"Type\": \"alarmValueEnumSet.avOffline\", \"Priority\": 106, \"TriggerValue\": { \"Value\": \"\", \"UnitsUrl\": null, \"Units\": \"unitEnumSet.noUnits\" }, \"CreationTime\": \"2020-06-17T11:22:30Z\", \"IsAcknowledged\": false, \"IsDiscarded\": false, \"CategoryUrl\": null, \"Category\": \"objectCategoryEnumSet.systemCategory\", \"ObjectUrl\": \"https://win-21dj9jv9qh6/api/v3/objects/e03d81f9-69de-48e8-92d7-81167df19f6c\", \"AnnotationsUrl\": \"https://win-21dj9jv9qh6/api/v3/alarms/e03d81f9-69de-48e8-92d7-81167df19f6c/annotations\" } Console Output: End */ Get Single Alarm To get a specific alarm of an Metasys Object (e.g. Point, Network Device etc...) you can use the method Alarms.FindById. This method requires the identified of the alarm and returns the associated 'Alarm' object. var alarmId=\"6c6e18b8-015f-572a-814c-1e5d66142850\"; Alarm singleAlarm = client.Alarms.FindById(alarmId); Get Alarms for an Object To retrieve the alarms of a specified object instance use the method Alarms.GetForObject. This method returns a 'PagedResult' with a list of 'Alarm' objects and expects an object Id and an 'AlarmFilter' object to filter the response. AlarmFilter alarmFilter = new AlarmFilter{}; var objectId=\"f5fe6054-d0b0-55b6-b03f-d4554f80d8e6\"; var objectAlarms = client.Alarms.GetForObject(objectId, alarmFilter); Get Alarms for a Network Device To retrieve a collection of alarms for the specified network device you can use the method Alarms.GetForNetworkDevice. This method returns a 'PagedResult' with a list of 'Alarm' objects and expects a network device Id and an 'AlarmFilter' object to filter the response. var networkDeviceId=\"2aefbd18-9088-54ee-b6ef-6d9312da3c33\"; var networkDevicesAlarms = client.Alarms.GetForNetworkDevice(networkDeviceId, alarmFilter); Get Alarm Annotations To retrieves the collection of annotations available for the specified alarm you can use the method Alarms.GetAnnotations. This method returns a collection of AlarmAnnotation objects and expect an alarm Id as parameter. IEnumerable<AlarmAnnotation> annotations = client.Alarms.GetAnnotations(alarm.Id); AlarmAnnotation firstAnnotation = annotations.FirstOrDefault(); Console.WriteLine(firstAnnotation); /* { \"AlarmUrl\": \"https://win-ervotujej94/api/v2/alarms/f0f64d5c-b70e-8754-836c-1ac99182f4e4\", \"Text\": \"Test Annotation 00\", \"User\": \"metasyssysagent\", \"CreationTime\": \"2020-05-27T06:21:31Z\", \"Action\": \"none\" } */ Acknowledge an Alarm Available since API v4 To allow for acknowledging an alarm you can use the method Alarms.Acknowlege. This method expects an alarm Id and optionally you can also add an annotation. Discard an Alarm Available since API v4 To allow for discarding an alarm you can use the method Alarms.Discard. This method expects an alarm Id and optionally you can also add an annotation. Audits All services about audits are provided by Audits local instance of MetasysClient. Get Audits Deprecated from API v4 on To get all available audits you can use the method Audits.Get. This method will return a 'PagedResult' with a list of 'Audit' objects. This accepts an 'AuditFilter' object to filter the response. In the Audit filter you can specify the values of OriginApplications or ActionTypes using values of dedicated enumeration sets concatenated by a '|' character. AuditFilter auditFilter = new AuditFilter { StartTime = new DateTime(2020, 5, 20), EndTime = new DateTime(2020, 6, 3), OriginApplications = OriginApplicationsEnum.SystemSecurity | OriginApplicationsEnum.AuditTrails, ActionTypes = ActionTypeEnum.Subsystem | ActionTypeEnum.Command }; PagedResult<Audit> auditsPager = client.Audits.Get(auditFilter); // Prints the number of records fetched and paging information Console.WriteLine(\"Total:\" + auditsPager.Total); Console.WriteLine(\"Current page:\" + auditsPager.CurrentPage); Console.WriteLine(\"Page size:\" + auditsPager.PageSize); Console.WriteLine(\"Pages:\" + auditsPager.PageCount); /* Total:323 Current page:1 Page size:100 Pages:4 */ Audit audit = auditsPager.Items.FirstOrDefault(); Console.WriteLine(audit); /* { \"Id\": \"8e3b3738-2f5f-494d-bde1-fac15da28c86\", \"CreationTime\": \"2020-06-23T16:45:54.697Z\", \"ActionTypeUrl\": null, \"ActionType\": \"auditActionTypeEnumSet.subsystemAuditActionType\", \"Discarded\": false, \"StatusUrl\": null, \"Status\": null, \"PreData\": null, \"PostData\": \"::1\", \"Parameters\": \"[]\", \"ErrorString\": null, \"User\": \"testuser\", \"Signature\": null, \"ObjectUrl\": \"https://win-21dj9jv9qh6/api/v3/objects/1949c631-7823-5230-b951-aae3f8c9d64a\", \"AnnotationsUrl\": null, \"Legacy\": { \"FullyQualifiedItemReference\": \"WIN-21DJ9JV9QH6:WIN-21DJ9JV9QH6\", \"ItemName\": \"EECMI-ADS11\", \"ClassLevel\": \"auditClassesEnumSet.userActionAuditClass\", \"OriginApplication\": \"auditOriginAppEnumSet.systemSecurityAuditOriginApp\", \"Description\": \"auditTrailStringsEnumSet.atstrSecurityUserLoginSuccessful\" }, \"Self\": \"https://win-21dj9jv9qh6/api/v3/audits/8e3b3738-2f5f-494d-bde1-fac15da28c86\" } */ Get Single Audit To get a single audit you can use the method Audits.FindById which returns an Audit object with all the details given the Guid. Get Audits for an Object To get the audits of a specific Object you can use the method Audits.GetForObject. The Guid of the parent object is required as parameter. AuditFilter auditFilter = new AuditFilter{}; var objectId=\"17ac1932-18d8-518c-8012-420c77bea86b\"; var objectAudits = client.Audits.GetForObject(objectId, auditFilter); Get Audit Annotations To get the annotations of an audit you can use the method Audits.GetAnnotations. It required the Guid of the audit and returns a collection of 'AuditAnnotation' objects. IEnumerable<AuditAnnotation> annotations = client.Audits.GetAnnotations(audit.Id); AuditAnnotation firstAnnotation = annotations.FirstOrDefault(); Console.WriteLine(firstAnnotation); /* { \"auditUrl\": \"https://win-ervotujej94/api/v2/audits/40aff6ec-ecb2-4b65-a504-0ac659756956\", \"creationTime\": \"2020-06-05T15:58:40.407Z\", \"user\": \"MetasysSysAgent\", \"text\": \"TEST AUDIT ANNOTATION 02\", \"signature\": null, \"action\": \"none\" } */ Discard an Audit Available since API v3 To allow for discarding an audit you can use the method Audits.Discard. This method expects an audit Id and optionally you can also add an annotation. Guid auditId = new Guid(\"9cf1c11d-a8cc-48e6-9e4c-f02af26e8fdf\"); string annotationText = \"Reason why the audit has been discarded\"; client.Audits.Discard(auditId, annotationText); Discard Multiple Audits Available since API v3 To discard multiple Audits you can use the method Audits.DiscardMultiple. It takes a list of 'BatchRequestParam' objects (specifing the list of Audits Guid and annotations) and it returns a list of 'Result' objects. var requests = new List<BatchRequestParam>(); BatchRequestParam request1 = new BatchRequestParam { ObjectId = new Guid(\"e0fb025a-d8a2-4258-91ea-c4026c1620d1\"), Resource = \"THIS IS THE FIRST DISCARD ANNOTATION\" }; requests.Add(request1); BatchRequestParam request2 = new BatchRequestParam { ObjectId = new Guid(\"5ff1341e-dbf1-4eaf-b9a1-987f51dabefa\"), Resource = \"THIS IS THE SECOND DISCARD ANNOTATION\" }; requests.Add(request2); IEnumerable<Result> results = client.Audits.DiscardMultiple(requests); Result resultItem = results.ElementAt(0); Console.WriteLine(resultItem); /* { \"Id\": \"e0fb025a-d8a2-4258-91ea-c4026c1620d1\", \"Status\": 204, \"Annotation\": \"THIS IS THE FIRST DISCARD ANNOTATION\" } */ Add Audit Annotation Available since API v3 To add an Annotation to an Audit you can use the method Audits.AddAnnotation. It takes the Guid of the Audit and the text of the annotation you want to add. It doesn't return a value. Guid auditId = new Guid(\"9cf1c11d-a8cc-48e6-9e4c-f02af26e8fdf\"); string annotationText = \"This is the text of the annotation\"; client.Audits.AddAnnotation(auditId, annotationText); Add Multiple Audit Annotations Available since API v3 To add multiple Annotations to an Audit you can use the method Audits.AddAnnotationMultiple. It takes a list of 'BatchRequestParam' objects (specifing the list of Audits Guid and annotations) and it returns a list of 'Result' objects. var requests = new List<BatchRequestParam>(); BatchRequestParam request1 = new BatchRequestParam { ObjectId = new Guid(\"e0fb025a-d8a2-4258-91ea-c4026c1620d1\"), Resource = \"THIS IS THE FIRST AUDIT ANNOTATION\" }; requests.Add(request1); BatchRequestParam request2 = new BatchRequestParam { ObjectId = new Guid(\"5ff1341e-dbf1-4eaf-b9a1-987f51dabefa\"), Resource = \"THIS IS THE SECOND AUDIT ANNOTATION\" }; requests.Add(request2); IEnumerable<Result> results = client.Audits.AddAnnotationMultiple(requests); Result resultItem = results.ElementAt(0); Console.WriteLine(resultItem); /* { \"Id\": \"e0fb025a-d8a2-4258-91ea-c4026c1620d1\", \"Status\": 201, \"Annotation\": \"THIS IS THE FIRST AUDIT ANNOTATION\" } /* */ Trends All services about trends are provided by Trends local instance of MetasysClient. Get Object Trended Attributes To get the trended attributes of a specified Metasys object you can use the method Trends.GetTrendedAttributes. This method requires the object Id (Guid) as parameter and it returns a list of 'MetasysAttribute' objects. Guid trendedObjectId = client.GetObjectIdentifier(\"WIN-21DJ9JV9QH6:EECMI-NCE25-2/FCB.10FEC11 - V6 Unit.E4 Network Outdoor Temperature\"); // Get attributes where trend extension is configured List<MetasysAttribute> trendedAttributes = client.Trends.GetTrendedAttributes(trendedObjectId); Get Samples To get the samples related the a trended attribute of an object you can use the method Trends.GetSamples. This method requires the object Id (Guid), the attribute Id (numeric or enumerated value) and a 'TimeFilter' object. It returns a 'PagedResult' list of 'Sample' objects. int attributeId = trendedAttributes[0].Id; TimeFilter timeFilter = new TimeFilter { StartTime = new DateTime(2020, 6, 5), EndTime = new DateTime(2020, 6, 6) }; PagedResult<Sample> samplesPager = client.Trends.GetSamples(trendedObjectId, attributeId, timeFilter); // Prints the number of records fetched and paging information Console.WriteLine(\"Total:\" + samplesPager.Total); Console.WriteLine(\"Current page:\" + samplesPager.CurrentPage); Console.WriteLine(\"Page size:\" + samplesPager.PageSize); Console.WriteLine(\"Pages:\" + samplesPager.PageCount); /* Total:145 Current page:1 Page size:100 Pages:2 */ Sample firstSample = samplesPager.Items.FirstOrDefault(); Console.WriteLine(firstSample); /* { \"Value\": 82.0, \"Unit\": \"deg F\", \"Timestamp\": \"2020-05-12T05:00:00Z\", \"IsReliable\": true } */ Note that the object must be properly configured with trended attributes and samples are sent to the ADS/ADX. If you try to retrieve values from an object that has no valid trended attributes a MetasysHttpNotFoundException is raised. Get Network Device Trended Attributes Available since API v3 To the trended attributes of a specified network device you can use the method Trends.GetNetDevTrendedAttributes. This method requires the network device Id (Guid) as parameter and it returns a list of 'MetasysAttribute' objects. Get Network Device Samples Available since API v3 To get the samples related the a trended attribute of a network device you can use the method Trends.GetNetDevSamples. This method requires the object Id (Guid), the attribute Id (numeric or enumerated value) and a 'TimeFilter' object. It returns a 'PagedResult' list of 'Sample' objects. Enumerations All services about enumerations are provided by Enumerations local instance of MetasysClient. Get Enumerations Available since API v4 To get all the available enumeration sets you can use the method Enumerations.Get. This method returns a list of 'MetasysEnumeration' objects. Get Enumeration Values Available since API v4 To get all the values of an enumeration set you can use the method Enumerations.GetValues. This method requires the name (identifier) of the enumeration and it returns a list of 'MetasysEnumValue' objects. Create a Custom Enumeration Available since API v4 To create a new custom enumeration set you can use the method Enumerations.Create. This method requires the name of the new custom enumeration and the list of values will be associated to the new set. It does not return values. Edit a Custom Enumeration Available since API v4 To modify the name and/or the values of an existing custom enumeration set you can use the method Enumerations.Edit. This method requires the identifier of the existing custom enumeration and the new list of values to be associated. It does not return values. Note this method cannot be used to add/remove values (it can only modify them) Replace a Custom Enumeration Available since API v4 To replace the whole definition of an existing custom enumeration set you can use the method Enumerations.Replace. This method requires the identifier of the existing custom enumeration and the new list of values to be associated. It does not return values. Note you can not replace a two-state enumeration with a multiple-state enumeration. Nor can you replace a multiple-state enumeration with a two-state enumeration. Delete a Custom Enumeration Available since API v4 To delete an existing custom enumeration set you can use the method Enumerations.Delete. This method requires the identifier of the existing custom enumeration and it does not return values. Note this method can only delete custom enumerations. Streams All services about streams are provided by Streams local instance of MetasysClient. Reading Object PresentValue COV Available since API v4 To define a stream in order to read the presentValue (COV) of a single or multiple objects use the method Streams.StartReadingCOV. This method requires the object Id (in case of single value) or a list of Ids (in case of multiple objects). To retrieve the value(s) updated by the stream use the method Streams.GetCOV or Streams.GetCOVList (in case of multiple objects). To stop reading (and updating) the values use the method Streams.StopReadingCOV. The Streams local instance also provides the event Streams.COVValueChanged that is fired when a new value has changed and red by the stream. Collecting Alarm Events Available since API v4 To define a stream in order to collect a list of alarm events use the method Streams.StartCollectingAlarms. To retrieve the list of the alarms collected from the stream use the method Streams.GetAlarmEvents. This method requires, as parameter, the max length of the list of alarms (by default the value is 100). To stop collecting alarm events use the method Streams.StopCollectingAlarms. The Streams local instance also provides the event Streams.AlarmOccurred that is fired when a new alarm has occurred and reported by the stream. Collecting Audit Events Available since API v4 To define a stream in order to collect a list of audit events use the method Streams.StartCollectingAudits. To retrieve the list of the audits collected from the stream use the method Streams.GetAuditEvents. This method requires, as parameter, the max length of the list of audits (by default the value is 100). To stop collecting audit events use the method Streams.StopCollectingAudits. The Streams local instance also provides the event Streams.AuditOccurred that is fired when a new audit has occurred and reported by the stream. Keep the Stream Alive Available since API v4 Normally all the methods that define a new stream also keep the stream alive despite the duration of the access token. In case you want to force it then use the method Streams.KeepAlive. 'Ad-Hoc' call SendAsync Send an HTTP request as an asynchronous operation. This method currently only supports 1 value per header rather than multiple. This method requires as mandatory value the parameter request that specifies The HTTP request message to send. Also, as optional parameters, it is possible to enter a value for completionOption that specifies when the operation should complete (as soon as a response is available or after reading the whole response content) as well as a value for cancellationToken that specifies the cancellation token to cancel operation. Activities All services about activities are provided by Activities local instance of MetasysClient. Get Activities To get all available alarms or audits (now they are known as 'activities') you can use the method Activities.Get. This method will return a 'PagedResult' with a list of 'Activity' objects. This accepts an 'ActivityFilter' object to filter the response and specify if the activity is related to Alarms or Audits. In the Activity filter you can specify parameters as: ActivityType: limit the activities returned to a specific type. Possible values: 'alarm', 'audit'. StartTime: earliest start time. EndTime: latest end time. IncludeDiscarded: the flag to include discarded activity. Sort: The criteria to use when sorting results. Equipment: Filter by list of equipment identifiers. Object: Filter by list of object identifiers. Space: Filter by list of space identifiers. PriorityRange: The inclusive priority range, from 0 to 255, of the alarm. Type: Limits the alarms returned to specified types. IncludeAcknowledged: Determines whether acknowledged alarms will be included in the results. IncludeAcknowledgementRequired: Determines whether activities which can be acknowledged are included in the results. Default = true. IncludeAcknowledgementNotRequired: Determines whether activities which can not be acknowledged are included in the results. Default: true. Category: The authorization category of the requested activities. OriginApplication: The origin application property indicates which application in Metasys generated the audit message. ClassLevel: The class level of an audit indicates the class or family the audit belongs to. ActionType: The action type property indicates the user or system action performed. User: The user property indicates which user initiated the action being audited. Multiple Actions This method Activities.ActionMultiple is useful to perform batch actions as discard/acknowledge an alarm/audit given a list of requests containing the info necessary to perform the actions. It takes a list of 'BatchRequestParam' objects (specifing the list of Audit or Alarm Guids and annotations) and it returns a list of 'Result' objects. Usage (COM) This section demonstrates how to use the LegacyMetasysClient to interact with your Metasys server from a VBA application. Download the Command Line sample project here and finally the Excel App is available at this link. Creating a Client To create a new client and connect to a Metasys server with the default settings use the ComMetasysClientFactory: Dim clientFactory As New ComMetasysClientFactory Dim client As LegacyMetasysClient Set client = clientFactory.GetLegacyClient(\"host\") There are three optional parameters when creating a new client: ignoreCertificateErrors: If your server does not have a valid certificate the LegacyMetasysClient will not behave as expected and will likely block the connection. Setting the ignoreCertificateErrors = true will ignore this error and make an insecure connection with the server. To avoid this problem ensure the Metasys server has a valid certificate. WARNING: You should not ignore certificate errors on a production site. Doing so puts your server at risk of a man-in-the-middle attack. apiVersion: your server must run at least Metasys v10.1 or later otherwise this SDK cannot be used. The version parameter takes in an ApiVersion string value that defaults to the most current release of Metasys. For Metasys 10.1 the api version is V2. cultureInfo: To set the language for localization specify the target culture with the ISO Language Code string. The default culture is en-US. logClientErrors: Set this flag to false to disable logging of client errors. By default the library logs any communication error with the Metasys Server in this path: \"C:\\ProgramData\\Johnson Controls\\Metasys Services\\Logs\". Example: the following code shows how to create a client that ignores certificate errors for a v12 Metasys server with Italian translations of values: Set client = clientFactory.GetLegacyClient(\"host\", true, \"v4\", \"it-IT\") In some cases you may want to enrich logs with more specific messages to your application. Typically, you disable internal library logging and catch Metasys Exceptions to be handled in your own logging framework or Log4Net configuration provided by the library. The file log4Net.config allows you to customize settings such as the file path, size, append mode, etc. To create a client that does not log errors use: Set client = clientFactory.GetLegacyClient(\"host\", true, \"v4\", \"it-IT\", false) Login and Access Tokens After creating the client, to login use the method TryLogin. this method requires a username and password parameters. To login using the Windows Credential Manager use the method TryLoginWithCredMan that requires, as 'target' parameter, the name of the credential defined in Windows. Notice: when developing an application that uses a system account always logged without user input, the preferred way to login is to store the username and password in the Credential Manager vault. Dim token As IComAccessToken 'Login passing username and password Set token = client.TryLogin(\"user\", \"password\") 'Login using username/password from Credential Manager vault Set token = client.TryLogin(\"vault-target\") Metasys Objects Get Object Id In order to use most of the methods in LegacyMetasysClient the id of the target object must be known. To retrieve the identifier of an object use the method GetObjectIdentifier. This method requires the Fully Qualified Reference (FQR) of the object and returns the id as a string (in the form of a Guid). Dim id As String id = client.GetObjectIdentifier(\"siteName:naeName/Folder1.AV1\") Get a Property In order to get a property you must know the Guid of the target object and then you can use the method ReadProperty. An object called \"ComVariant\" is returned when getting a property from an object. Dim result As ComVariant Set result = client.ReadProperty(id, \"presentValue\") Dim stringValue as String stringValue = result.StringValue Dim numericValue as Double numericValue = result.NumericValue Dim booleanValue as Boolean booleanValue = result.BooleanValue To get multiple properties from multiple objects in one action use the method ReadPropertyMultiple. This can be very useful if the objects all are of the same type or have the same target properties. Dim ids() As String ids = Split(\"id1,id2\", \",\") Dim attributes() As String ids = Split(\"name,description\", \",\") Dim results() As Object results = client.ReadPropertyMultiple(ids, attributes) Dim id1 As IComVariantMultiple Set id1 = results(0) Dim variants() As Object variants=id1.Variants Write a Property In order to write a property you must have the Guid of the object and know the attribute name and type and then you have to use the method WriteProperty. Dim id As String id = client.GetObjectIdentifier(\"siteName:naeName/Folder1.AV1\") client.WriteProperty id, \"description\", \"This is an AV.\" To change the same attribute values of many objects use the method WritePropertyMultiple. Dim ids() As String ids = Split(\"id1,id2\", \",\") Dim attributes() As String attributes = Split(\"name,description\", \",\") Dim attributeValues() As String attributeValues = Split(\"AV,This is an AV\", \",\") client.WritePropertyMultiple ids, attributes, attributeValues Get and Send Commands To get all available commands on an object use the method GetCommands. This method requires the identifier of the object an returns a list of 'ComCommand' objects. When sending a command the 'ComCommand.CommandId' attribute is used as parameter. When sending a command there may or may not be a single value or list of values that needs to be sent with the command. The Command.Items property will list all of these values as Items which contains the Title and Type of the value to change. If the type of an Item is \"oneOf\" this indicates the values is an enumeration and the possible values will be contained in the EnumerationValues list. Keep in mind the values to be sent in the command is the TitleEnumerationKey not the Title. The Title is the user friendly translated value that describes the enumeration. To send the command use the method SendCommand as showed in the following sample: Dim parameters() As String parameters = Split(\"offonEnumSet.0,\", \",\") client.SendCommand id, \"OperatorOverride\", parameters Get Children To get the child objects of an object use the method GetObjects. This takes the identifier of the parent object and an optional number of levels to retrieve. The default is 1 level or just the immediate children of the object. Depending on the number of objects on your server this method can take quite a long time to complete. Dim devices() As Object devices = client.GetObjects(id) Dim device As IComMetasysObject Set device = devices(0) Dim children() As Object children=device.children Network-Devices Get Network Device Types To get all of the available types on your server use the method GetNetworkDeviceTypes which returns a list of 'ComMetasysObjectType' objects. Dim devTypes() As Object devTypes = client.GetNetworkDeviceTypes() Get Network Devices To get all the available network devices use the method GetNetworkDevices which returns a list of 'ComMetasysObject' objects. This accepts an optional type number as a string to filter the response. Dim devices() As Object devices = client.GetNetworkDevices() Dim device As IComMetasysObject Set device = devices(0) Dim itemReference as String itemReference=device.itemReference Get Single Network Device To get a single network device use the method GetSingleNetworkDevice which returns a 'ComMetasysObject' object corresponding to the network device Id passed as parameter. Get Network Device Children To retrieves the collection of network devices that are children of the specified network device use the method GetNetworkDevicesChildren which return a list of 'ComMetasysObject' objects corresponding to the network device Id passed as parameter. Get Network Devices Hosting an Equipment To retrieve the collection of network devices that host the specified equipment instance use the method GetNetworkDevicesHostingAnEquipment which return a list of 'ComMetasysObject' objects corresponding to the equipment Id passed as parameter. Get Network Devices Serving a Space To retrieve the collection of network devices that are serving the specified space use the method GetNetworkDevicesServingASpace which return a list of 'ComMetasysObject' objects corresponding to the space Id passed as parameter. Equipments Get Equipments To retrieves all the equipments use the method GetEquipment. This method returns a list of 'ComMetasysObject' objects and doesn't require any parameter. Dim equipment() As Object equipment = client.GetEquipment() Dim e As IComMetasysObject Set e = equipment(0) Get a Single Equipment To get a single equipment instance use the method GetSingleEquipment. This method returns the 'ComMetasysObject' object related to the equipment Id specified as parameter. Get Equipment Served by an Equipment Instance To retrieve the equipments served by the specified equipment instance you can use the method GetEquipmentsServedByEquipment. This method returns a list of 'ComMetasysObject' objects and expects the equipment instance Id. Get Equipments Serving a Space To retrieve the equipments serving a given space use the method GetEquipmentsServingASpace (method GetSpaceEquipment is deprecated). This method expects the space identifier as parameter and returns a list of 'ComMetasysObject' objects. Get Equipment Points To get all the points of an equipment use the method GetEquipmentPoints. This method requires the equipment identifier as parameter and returns a list of 'ComMetasysPoint' objects. Get Equipments Hosted by a Network Device To retrieve the equipments hosted by the specified network device instance or its children use the method GetEquipmentsHostedByNetworkDevice. This method requires the netowrk device identifier as parmater and returns a list of 'ComMetasysObject' objects. Note: a network device is considered to host an equipment if the equipment defines points that map to an attribute of any object contained on the network device. Get Equipments Serving an Equipment Instance To retrieve the equipments that serve a specified equipment instance use the method GetEquipmentsServingAnEquipment. This method requires the equipment instance identifier and returns a list of 'ComMetasysObject' objects. Spaces Get Space Types To get all the space types use the method GetSpaceTypes. This method will return a list of 'ComMetasysObjectType' objects. Dim spaceTypes() As Object spaceTypes = client.GetSpaceTypes() Dim spaceType As IComMetasysObjectType Set spaceType = spaceTypes(0) Get Spaces To get all available spaces use the method GetSpaces. This method will return a list of 'ComMetasysObject' objects. This accepts an optional type as enum to filter the response. Dim spaceTypes() As Object spaceTypes = client.GetSpaceTypes() Dim spaceType As IComMetasysObjectType Set spaceType = spaceTypes(0) Dim spaces() As Object spaces = client.GetSpaces(spaceType.Id) Dim space As IComMetasysObject Set space = spaces(0) Get Space Children To get the spaces children of a specific space instance use the method GetSpaceChildren. This methods requires the space instance identifier as parameter and returns a list of 'ComMetasysObject' objects. Get a Single Space To get a single space object use the method GetSingleSpace. This method returns the 'ComMetasysObject' related to the space Id specified as parameter. Get Spaces Served by an Equipment To Retrieve the collection of spaces served by the specified equipment instance you can use the method GetSpacesServedByEquipment. This method returns a list of 'ComMetasysObject' objects and expect the equipment Id as parameter. Get Spaces Served by a Network Device To Retrieve the collection of spaces served by the specified network device instance you can use the method Spaces.GetServedByNetworkDevice. This method returns a list of MetasysObjects and expect the network device Id as parameter. Alarms Get Alarms To get all available alarms use the method GetAlarms. This method returns a 'PagedResult' with a list of 'ComAlarm' objects and expects an 'AlarmFilter' object to filter the response. 'Prepare Alarm filter Dim filter As New ComAlarmFilter filter.StartTime = \"2020-01-10T08:10:20.243Z\" filter.EndTime = \"2020-01-10T09:10:20.243Z\" filter.ExcludeAcknowledged=true Dim alarmsPager As ComPagedResult Set alarmsPager = client.GetAlarms(objId, filter) 'Iterate paged results Dim alarm As ComProvideAlarmItem Dim alarms() As Object alarms = alarmsPager.Items Set alarm = alarms(0) Dim message as String message = alarm.message 'Read paging properties Dim pages as integer pages=alarmsPager.PageCount Get Single Alarm To get a specific alarm of an Metasys Object (e.g. Point, Network Device etc...) use the method GetSingleAlarm. This method requires the identified of the alarm and returns the associated 'ComAlarm' object. Get Alarms for an Object To retrieve the alarms of a specified object instance use the method GetAlarmsForObject. This method returns a 'PagedResult' with a list of 'ComAlarm' objects and expects an object Id and an 'AlarmFilter' object to filter the response. Set objectAlarmsPager = client.GetAlarmsForAnObject(objId, filter) Dim objectAlarms() As Object ReDim objectAlarms(objectAlarmsPager.Items) objectAlarms = objectAlarmsPager.Items Get Alarms for a Network Device To retrieve a collection of alarms for the specified network device you can use the method GetAlarmsForNetworkDevice. This method returns a 'PagedResult' with a list of 'ComAlarm' objects and expects a network device Id and an 'AlarmFilter' object to filter the response. Set deviceAlarmsPager = client.GetAlarmsForNetworkDevice(networkDeviceId, filter) Dim deviceAlarms() As Object ReDim deviceAlarms(deviceAlarmsPager.Items) deviceAlarms = deviceAlarmsPager.Items Get Alarm Annotations To retrieves the collection of annotations available for the specified alarm you can use the method GetAlarmAnnotations. This method returns a collection of AlarmAnnotation objects and expect an alarm Id as parameter. Dim alarmId As String alarmId = \"6c999f43-6007-5137-b6d3-c30b93fb70ec\" Dim result() As Object result = client.GetAlarmAnnotations(alarmId) Acknowledge an Alarm Available since API v4 To allow for acknowledging an alarm you can use the method AcknowledgeAlarm. This method expects an alarm Id and optionally you can also add an annotation. Discard an Alarm Available since API v4 To allow for discarding an alarm you can use the method DiscardAlarm. This method expects an alarm Id and optionally you can also add an annotation. Audits Get Audits To get all available audits you can use the method GetAudits. This method will return a 'ComPagedResult' with a list of 'ComAudit' objects. This accepts an 'ComAuditFilter' object to filter the response. In the Audit filter you can specify the values of OriginApplications or ActionTypes using values of dedicated enumeration sets concatenated by a '|' character. 'Prepare Alarm filter Dim filter As New ComAuditFilter filter.StartTime = \"2020-01-10T08:10:20.243Z\" filter.EndTime = \"2020-01-10T09:10:20.243Z\" filter.OriginApplications=\"1,2\" filter.ActionTypes=\"0,1\" Dim auditsPager As ComPagedResult Set auditsPager = client.GetAudits(filter) 'Iterate paged results Dim audit As ComProvideAuditItem Dim audits() As Object audits = auditsPager.Items Set audit = audits(0) Dim user as String user = audit.user 'Read paging properties Dim pages as integer pages=auditsPager.PageCount Get Single Audit To get a single audit you can use the method GetSingleAudit which returns an 'ComAudit' object with all the details given the Guid. Get Audits for an Object To get the audits of a specific Object you can use the method GetAuditsForAnObject. The Guid of the parent object is required as parameter. Set objectAuditsPager = client.GetAuditsForAnObject(objId, filter) Dim objectAudits() As Object ReDim objectAudits(objectAuditsPager.Items) objectAudits = objectAuditsPager.Items Get Audit Annotations To get the annotations of an audit you can use the method GetAuditAnnotations. It required the Guid of the audit and returns a collection of 'AuditAnnotation' objects. Dim auditId As String auditId = \"6c999f43-6007-5137-b6d3-c30b93fb70ec\" Dim result() As Object result = client.GetAuditAnnotations(auditId) Discard an Audit Available since API v3 To allow for discarding an audit you can use the method DiscardAudit. This method expects an audit Id and optionally you can also add an annotation. Discard Multiple Audits Available since API v3 To discard multiple Audits you can use the method DiscardAuditMultiple. it takes an array of strings as parameter and returns an array of strings as well. Each string of the array used as parameter must contains the audit ID and the text of the discard annotation separated by the character | (vertical bar). Dim auditId1 As String auditId1 = \"1b3b3127-a703-42b7-bb9a-7527331e329d\" Dim auditId2 As String auditId2 = \"e3b6cbcf-cf05-43ed-b845-7321c8b86c38\" Dim annotation1 as String annotation1 = \"DISCARD ANNOTATION AUDIT #1\" Dim annotation2 as String annotation2 = \"DISCARD ANNOTATION AUDIT #2\" Dim requestParams(1) As String requestParams(0) = auditId1 & \"|\" & annotation1 requestParams(1) = auditId2 & \"|\" & annotation2 Dim result() As String result = client.DiscardAuditMultiple(auditId) Add Audit Annotation Available since API v3 To add an Annotation to an Audit you can use the method AddAuditAnnotation. It takes the Guid of the Audit and the text of the annotation you want to add. It doesn't return a value. Add Multiple Audit Annotations Available since API v3 To add multiple Annotations to an Audit you can use the method Audits.AddAnnotationMultiple. it takes an array of strings as parameter and returns an array of strings as well. Each string of the array used as parameter must contains the audit ID and the text of the annotation separated by the character | (vertical bar). Dim auditId As String auditId = \"6c999f43-6007-5137-b6d3-c30b93fb70ec\" Dim annotation1 as String annotation1 = \"TEXT OF ANNOTATION #1\" Dim annotation2 as String annotation2 = \"TEXT OF ANNOTATION #2\" Dim requestParams(1) As String requestParams(0) = auditId & \"|\" & annotation1 requestParams(1) = auditId & \"|\" & annotation2 Dim result() As String result = client.AddAuditAnnotationMultiple(auditId) Trends Get Object Trended Attributes To get the trended attributes of a specified Metasys object use the method GetTrendedAttributes. This method requires the object Id as parameter and it returns a list of 'ComAttribute' objects. 'Get Trended attributes Dim attrs() As ComAttribute attrs = client.GetTrendedAttributes(objId) Get Samples To get the samples related the a trended attribute of an object you can use the method GetSamples. This method requires the object Id (Guid), the attribute Id (numeric or enumerated value) and a 'ComTimeFilter' object. It returns a 'ComPagedResult' list of 'ComSample' objects. Dim attr As ComAttribute Set attr = attrs(0) Dim attrId As Integer attrId = attr.id 'Prepare Time filter Dim filter As New ComTimeFilter filter.StartTime = \"2020-01-10T08:10:20.243Z\" filter.EndTime = \"2020-01-10T09:10:20.243Z\" Dim samplesPager As ComPagedResult Set samplesPager = client.GetSamples(objId, attrId, filter) 'Iterate paged results Dim sample As ComSample Dim samples() As Object samples = samplesPager.Items Set sample = samples(0) Dim value as String value = sample.Value 'Read paging properties Dim pages as integer pages=samplesPager.PageCount Dim SamplesCount as integer samplesCount=samplesPager.Total Note that the object must be properly configured with trended attributes and samples are sent to the ADS/ADX. If you try to retrieve values from an object that has no valid trended attributes a MetasysHttpNotFoundException is raised. Get Network Device Trended Attributes Available since API v3 To the trended attributes of a specified network device you can use the method GetNetDevTrendedAttributes. This method requires the network device Id as parameter and it returns a list of 'ComAttribute' objects. Get Network Device Samples Available since API v3 To get the samples related the a trended attribute of a network device you can use the method GetNetDevSamples. This method requires the object Id (Guid), the attribute Id (numeric or enumerated value) and a 'ComTimeFilter' object. It returns a 'ComPagedResult' list of 'ComSample' objects. Enumerations Get Enumerations Available since API v4 To get all the available enumeration sets you can use the method GetEnumerations. This method returns a list of 'ComMetasysEnumeration' objects. Get Enumeration Values Available since API v4 To get all the values of an enumeration set you can use the method GetEnumerationValues. This method requires the name (identifier) of the enumeration and it returns a list of 'ComMetasysEnumValue' objects. Create a Custom Enumeration Available since API v4 To create a new custom enumeration set you can use the method CreateCustomEnumeration. This method requires the name of the new custom enumeration and the list of values will be associated to the new set. It does not return values. Edit a Custom Enumeration Available since API v4 To modify the name and/or the values of an existing custom enumeration set you can use the method EditCustomEnumeration. This method requires the identifier of the existing custom enumeration and the new list of values to be associated. It does not return values. Note this method cannot be used to add/remove values (it can only modify them) Replace a Custom Enumeration Available since API v4 To replace the whole definition of an existing custom enumeration set you can use the method ReplaceCustomEnumeration. This method requires the identifier of the existing custom enumeration and the new list of values to be associated. It does not return values. Note you can not replace a two-state enumeration with a multiple-state enumeration. Nor can you replace a multiple-state enumeration with a two-state enumeration. Delete a Custom Enumeration Available since API v4 To delete an existing custom enumeration set you can use the method DeleteCustomEnumeration. This method requires the identifier of the existing custom enumeration and it does not return values. Note this method can only delete custom enumerations. Streams Reading Object PresentValue COV Available since API v4 To define a stream in order to read the presentValue (COV) of a single or multiple objects use the method StartReadingStreamCOV. This method requires the object Id (in case of single value) or an arrary of Ids (in case of multiple objects). To retrieve the value(s) updated by the stream use the method GetStreamCOV or GetStreamCOVList (in case of multiple objects). To retrieve the array of 'Request Ids' use the method GetStreamRequestIds To stop reading (and updating) the values use the method StopReadingStreamCOV. The event StreamCOVValueChanged is fired when a new value has changed and red by the stream. Collecting Alarm Events Available since API v4 To define a stream in order to collect a list of alarm events use the method StartCollectingStreamAlarms. To retrieve the list of the alarms collected from the stream use the method GetAlarmStreamEvents. This method requires, as parameter, the max length of the list of alarms (by default the value is 100). To stop collecting alarm events use the method StopCollectingStreamAlarms. The event OnStreamAlarmOccurred is fired when a new alarm has occurred and reported by the stream. Collecting Audit Events Available since API v4 To define a stream in order to collect a list of audit events use the method StartCollectingStreamAudits. To retrieve the list of the audits collected from the stream use the method GetAuditStreamEvents. This method requires, as parameter, the max length of the list of audits (by default the value is 100). To stop collecting audit events use the method StopCollectingStreamAudits. The event OnStreamAuditOccurred is fired when a new audit has occurred and reported by the stream. Keep the Stream Alive Available since API v4 Normally all the methods that define a new stream also keep the stream alive despite the duration of the access token. In case you want to force it then use the method KeepStreamAlive. License See LICENSE. Contributing See CONTRIBUTING. Additional Information Supported Localization Languages en-US cs-CZ de-DE es-ES fr-FR hu-HU it-IT ja-JP ko-KR nb-NO nl-NL pl-PL pt-BR ru-RU sv-SE tr-TR zh-CN zh-Hans-CN zh-Hant-TW zh-TW Customizing Windows IIS for Metasys API To get further information about customizing Windows IIS for Metasys API click here"
  },
  "api/JohnsonControls.Metasys.BasicServices.AccessToken.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.AccessToken.html",
    "title": "Class AccessToken | Metasys Services",
    "keywords": "Class AccessToken Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll The session access token and expiration in UTC time along with related host information. public class AccessToken Inheritance object AccessToken Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AccessToken(string, string, string, DateTime) Initialize an AccessToken Object with all required information. public AccessToken(string issuer, string issuedTo, string token, DateTime expires) Parameters issuer string issuedTo string token string expires DateTime Properties Expires Expiration date in UTC time. public DateTime Expires { get; } Property Value DateTime IssuedTo The Metasys Username that requested the Access Token. public string IssuedTo { get; } Property Value string Issuer The Metasys Authorization provider hostname that issued the Access Token. public string Issuer { get; } Property Value string Token The session access token for bearer authentication. public string Token { get; } Property Value string String in the format \"Bearer ...\" Methods Equals(object) Returns a value indicating whither this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() Return a pretty JSON string of the current object. public override string ToString() Returns string"
  },
  "api/JohnsonControls.Metasys.BasicServices.ActionTypeEnum.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.ActionTypeEnum.html",
    "title": "Enum ActionTypeEnum | Metasys Services",
    "keywords": "Enum ActionTypeEnum Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Enumeration of possible Action Type for an Audit. [Flags] public enum ActionTypeEnum Fields Command = 2 Action: Command Create = 4 Action: Create Delete = 8 Action: Delete Error = 16 Action: Error Subsystem = 32 Action: Subsystem Write = 1 Action: Write Remarks The actual values sent to the server are specified in the description."
  },
  "api/JohnsonControls.Metasys.BasicServices.Activity.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.Activity.html",
    "title": "Class Activity | Metasys Services",
    "keywords": "Class Activity Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Provides Activity Item public class Activity Inheritance object Activity Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks This is available since Metasys API v5. Properties ActivityManagementStatus Activity Management Status [JsonProperty(Required = Required.Always)] public string ActivityManagementStatus { get; set; } Property Value string Alarm Alarm object (in case the activityType = alarm) public ActivityAlarm Alarm { get; set; } Property Value ActivityAlarm Audit Audit object (in case the activityType = audit) public ActivityAudit Audit { get; set; } Property Value ActivityAudit CreationTime Activity creation time public string CreationTime { get; set; } Property Value string DiscardedTime Discarded Time public string DiscardedTime { get; set; } Property Value string Equipment Equipment public string[] Equipment { get; set; } Property Value string[] Id Activity Unique Identifier (GUID) [JsonProperty(Required = Required.Always)] public Guid Id { get; set; } Property Value Guid ItemReference Item fully qualified reference [JsonProperty(Required = Required.Always)] public string ItemReference { get; set; } Property Value string ObjectId Object Unique Identifier (GUID) public Guid ObjectId { get; set; } Property Value Guid ObjectName Object Name [JsonProperty(Required = Required.Always)] public string ObjectName { get; set; } Property Value string Spaces Spaces public string[] Spaces { get; set; } Property Value string[] Methods Equals(object) Returns a value indicating whether this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() Return a pretty JSON string of the current object. public override string ToString() Returns string"
  },
  "api/JohnsonControls.Metasys.BasicServices.ActivityAlarm.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.ActivityAlarm.html",
    "title": "Class ActivityAlarm | Metasys Services",
    "keywords": "Class ActivityAlarm Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Provides ActivityAlarm Item public class ActivityAlarm Inheritance object ActivityAlarm Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks This is available since Metasys API v5. Properties AnnotationCount Alarm Annotation Count public int AnnotationCount { get; set; } Property Value int AnnotationsUrl Link to annotations public string AnnotationsUrl { get; set; } Property Value string Category Fully qualified enumeration for Alarm Category. public string Category { get; set; } Property Value string Description Alarm description public string Description { get; set; } Property Value string IsAckRequired Is acknowledge required for alarm public bool IsAckRequired { get; set; } Property Value bool Message Alarm message public string Message { get; set; } Property Value string Priority Alarm priority public int Priority { get; set; } Property Value int Self URI that points back to this resource public string Self { get; set; } Property Value string TriggerValue Alarm trigger value details public TriggerValue TriggerValue { get; set; } Property Value TriggerValue Type Fully qualified enumeration for Alarm Type. public string Type { get; set; } Property Value string Methods Equals(object) Returns a value indicating whether this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() Return a pretty JSON string of the current object. public override string ToString() Returns string"
  },
  "api/JohnsonControls.Metasys.BasicServices.ActivityAudit.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.ActivityAudit.html",
    "title": "Class ActivityAudit | Metasys Services",
    "keywords": "Class ActivityAudit Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Provides ActivityAudit Item public class ActivityAudit Inheritance object ActivityAudit Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks This is available since Metasys API v5. Properties ActionType Fully qualified enumeration for Action Type. public string ActionType { get; set; } Property Value string AnnotationCount Audit Annotation Count public int AnnotationCount { get; set; } Property Value int AnnotationsUrl Link to annotations. public string AnnotationsUrl { get; set; } Property Value string ClassLevel Fully qualified enumeration for Class Level. public string ClassLevel { get; set; } Property Value string Description Fully qualified enumeration for Audit Description. public string Description { get; set; } Property Value string ErrorString The error that may have occurred during an audit. public string ErrorString { get; set; } Property Value string OriginApplication Fully qualified enumeration for Origin Application. public string OriginApplication { get; set; } Property Value string Parameters Parameters for the Audit. public dynamic Parameters { get; set; } Property Value dynamic PostData Data value after the Audit. public dynamic PostData { get; set; } Property Value dynamic PreData Data value prior to the Audit. public dynamic PreData { get; set; } Property Value dynamic Signature The user who created this audit. public dynamic Signature { get; set; } Property Value dynamic Status Fully qualified enumeration for Status. public string Status { get; set; } Property Value string User The userName of the user that initiated the audit. public string User { get; set; } Property Value string Methods Equals(object) Returns a value indicating whether this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() Return a pretty JSON string of the current object. public override string ToString() Returns string"
  },
  "api/JohnsonControls.Metasys.BasicServices.ActivityFilter.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.ActivityFilter.html",
    "title": "Class ActivityFilter | Metasys Services",
    "keywords": "Class ActivityFilter Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Filters to get activity items. public class ActivityFilter Inheritance object ActivityFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ActionType The action type property indicates the user or system action performed. public string[] ActionType { get; set; } Property Value string[] Remarks Possible values from 'auditActionTypeEnumSet' Metasys enum set. Example: 'auditActionTypeEnumSet.writeAuditActionType'. ActivityType Limit the activities returned to a specific type. public string ActivityType { get; set; } Property Value string Remarks Possible values: 'alarm', 'audit'. Category The authorization category of the requested activities. public string[] Category { get; set; } Property Value string[] Remarks Possible values from 'objectCategoryEnumSet' Metasys enum set. Example: 'objectCategoryEnumSet.hvacCategory'. ClassLevel The class level of an audit indicates the class or family the audit belongs to. public string[] ClassLevel { get; set; } Property Value string[] Remarks Possible values from 'auditClassesEnumSet' Metasys enum set. Example: 'auditClassesEnumSet.userActionAuditClass'. EndTime Latest end time. public DateTime? EndTime { get; set; } Property Value DateTime? Equipment Filter by list of equipment identifiers. public string[] Equipment { get; set; } Property Value string[] IncludeAcknowledged Determines whether acknowledged alarms will be included in the results. Default: (missing). public bool? IncludeAcknowledged { get; set; } Property Value bool? IncludeAcknowledgementNotRequired Determines whether activities which can not be acknowledged are included in the results. Default: true. public bool? IncludeAcknowledgementNotRequired { get; set; } Property Value bool? Remarks This property can to be used only in case ActivityType = 'alarm'. IncludeAcknowledgementRequired Determines whether activities which can be acknowledged are included in the results. Default: true. public bool? IncludeAcknowledgementRequired { get; set; } Property Value bool? Remarks This property can to be used only in case ActivityType = 'alarm'. IncludeDiscarded The flag to include discarded activity. public bool? IncludeDiscarded { get; set; } Property Value bool? Object Filter by list of object identifiers. public string[] Object { get; set; } Property Value string[] OriginApplication The origin application property indicates which application in Metasys generated the audit message. public string[] OriginApplication { get; set; } Property Value string[] Remarks Possible values from 'auditOriginAppEnumSet' Metasys enum set. Example: 'auditOriginAppEnumSet.deviceManagerAuditOriginApp'. PriorityRange The inclusive priority range, from 0 to 255, of the alarm. public string PriorityRange { get; set; } Property Value string Sort The criteria to use when sorting results. public string Sort { get; set; } Property Value string Remarks Possible values: 'creationTime', '-creationTime', 'priority', '-priority'. Default: 'creationTime' Space Filter by list of space identifiers. public string[] Space { get; set; } Property Value string[] StartTime Earliest start time. public DateTime? StartTime { get; set; } Property Value DateTime? Type Limits the alarms returned to specified types. public string[] Type { get; set; } Property Value string[] Remarks Possible values from 'alarmValueEnumSet' Metasys enum set. Example: 'alarmValueEnumSet.avHighLimit'. User The user property indicates which user initiated the action being audited. public string[] User { get; set; } Property Value string[] Remarks Example of values: 'metasysuser'."
  },
  "api/JohnsonControls.Metasys.BasicServices.ActivityManagementStatusEnum.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.ActivityManagementStatusEnum.html",
    "title": "Enum ActivityManagementStatusEnum | Metasys Services",
    "keywords": "Enum ActivityManagementStatusEnum Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Enumeration of possible values for editing an Alarm. public enum ActivityManagementStatusEnum Fields acknowledged = 0 Acknowledged Alarm discarded = 1 Discared Alarm"
  },
  "api/JohnsonControls.Metasys.BasicServices.Alarm.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.Alarm.html",
    "title": "Class Alarm | Metasys Services",
    "keywords": "Class Alarm Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Provides alarm Item public class Alarm Inheritance object Alarm Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties ActivityManagementStatus Activity Management Status public string ActivityManagementStatus { get; set; } Property Value string Remarks This is available since Metasys API v4. AnnotationsUrl Link to annotations public string AnnotationsUrl { get; set; } Property Value string Category Fully qualified enumeration for Alarm Category. public string Category { get; set; } Property Value string Remarks This is available since Metasys API v3. CategoryUrl Alarm Category route public string CategoryUrl { get; set; } Property Value string Remarks This is available only with Metasys API v2 and v1. CreationTime Alarm creation time public string CreationTime { get; set; } Property Value string Description Alarm description public string Description { get; set; } Property Value string Remarks This is available since Metasys API v4. DiscardedTime Discarded Time public string DiscardedTime { get; set; } Property Value string Remarks This is available since Metasys API v4. Id Alarm Unique Identifier (GUID) [JsonProperty(Required = Required.Always)] public Guid Id { get; set; } Property Value Guid IsAckRequired Is acknowledge required for alarm public bool IsAckRequired { get; set; } Property Value bool IsAcknowledged Is alarm already acknowledged public bool IsAcknowledged { get; set; } Property Value bool Remarks This is not anymore available since Metasys API v4. IsDiscarded Is alarm already discarded public bool IsDiscarded { get; set; } Property Value bool Remarks This is not anymore available since Metasys API v4. ItemReference Item fully qualified reference [JsonProperty(Required = Required.Always)] public string ItemReference { get; set; } Property Value string Message Alarm message public string Message { get; set; } Property Value string Name Item name [JsonProperty(Required = Required.Always)] public string Name { get; set; } Property Value string ObjectUrl Link to Point public string ObjectUrl { get; set; } Property Value string Priority Alarm priority public int Priority { get; set; } Property Value int Self URI that points back to this resource public string Self { get; set; } Property Value string TriggerValue Alarm trigger value details public TriggerValue TriggerValue { get; set; } Property Value TriggerValue Type Fully qualified enumeration for Alarm Type. public string Type { get; set; } Property Value string Remarks This is available since Metasys API v3. TypeUrl Alarm type route public string TypeUrl { get; set; } Property Value string Remarks This is available only with Metasys API v2 and v1. Methods Equals(object) Returns a value indicating whether this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() Return a pretty JSON string of the current object. public override string ToString() Returns string"
  },
  "api/JohnsonControls.Metasys.BasicServices.AlarmAnnotation.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.AlarmAnnotation.html",
    "title": "Class AlarmAnnotation | Metasys Services",
    "keywords": "Class AlarmAnnotation Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Annotaion for an alarm. public class AlarmAnnotation : MetasysAnnotation Inheritance object MetasysAnnotation AlarmAnnotation Inherited Members MetasysAnnotation.Text MetasysAnnotation.User MetasysAnnotation.CreationTime MetasysAnnotation.Action object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties AlarmUrl URL of the audit related to the annotation. public string AlarmUrl { get; set; } Property Value string Methods Equals(object) Returns a value indicating whether this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() Return a pretty JSON string of the current object. public override string ToString() Returns string"
  },
  "api/JohnsonControls.Metasys.BasicServices.AlarmFilter.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.AlarmFilter.html",
    "title": "Class AlarmFilter | Metasys Services",
    "keywords": "Class AlarmFilter Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Filters to get alarms when using API v2 or v3. public class AlarmFilter : TimeFilter Inheritance object BasicFilter TimeFilter AlarmFilter Inherited Members TimeFilter.StartTime TimeFilter.EndTime BasicFilter.Page BasicFilter.PageSize BasicFilter.Sort object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Attribute The attribute of the requested alarms. This is considered when using API v2 and v3 public int? Attribute { get; set; } Property Value int? Category The system category of the requested alarms. public int? Category { get; set; } Property Value int? ExcludeAcknowledged The flag to exclude acknowledged alarms. Default: false. This is considered when using API v2 and v3 public bool? ExcludeAcknowledged { get; set; } Property Value bool? ExcludeDiscarded The flag to exclude discarded alarms. Default: false. This is considered when using API v2 and v3 public bool? ExcludeDiscarded { get; set; } Property Value bool? ExcludePending The flag to exclude pending alarms. Default: false. This is considered when using API v2 and v3 public bool? ExcludePending { get; set; } Property Value bool? PriorityRange The inclusive priority range, from 0 to 255, of the alarm. public string PriorityRange { get; set; } Property Value string Type The type of the requested alarms. public int? Type { get; set; } Property Value int?"
  },
  "api/JohnsonControls.Metasys.BasicServices.AlarmFilterV4Plus.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.AlarmFilterV4Plus.html",
    "title": "Class AlarmFilterV4Plus | Metasys Services",
    "keywords": "Class AlarmFilterV4Plus Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Filters to get activity items from API v4 on. public class AlarmFilterV4Plus : TimeFilter Inheritance object BasicFilter TimeFilter AlarmFilterV4Plus Inherited Members TimeFilter.StartTime TimeFilter.EndTime BasicFilter.Page BasicFilter.PageSize BasicFilter.Sort object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Category The authorization category of the requested alarms. public string[] Category { get; set; } Property Value string[] Remarks Possible values from 'objectCategoryEnumSet' Metasys enum set. Example: 'objectCategoryEnumSet.hvacCategory'. Equipment Filter by list of equipment identifiers. public string[] Equipment { get; set; } Property Value string[] IncludeAcknowledged Determines whether acknowledged alarms will be included in the results. Default: (missing). public bool? IncludeAcknowledged { get; set; } Property Value bool? IncludeAcknowledgementNotRequired Determines whether activities which can not be acknowledged are included in the results. Default: true. public bool? IncludeAcknowledgementNotRequired { get; set; } Property Value bool? IncludeAcknowledgementRequired Determines whether activities which can be acknowledged are included in the results. Default: true. public bool? IncludeAcknowledgementRequired { get; set; } Property Value bool? IncludeDiscarded The flag to include discarded alarms. Default: (missing). public bool? IncludeDiscarded { get; set; } Property Value bool? Object Filter by list of object identifiers. public string[] Object { get; set; } Property Value string[] PriorityRange The inclusive priority range, from 0 to 255, of the alarm. public string PriorityRange { get; set; } Property Value string Space Filter by list of space identifiers. public string[] Space { get; set; } Property Value string[] Type Limits the alarms returned to specified types. public string[] Type { get; set; } Property Value string[] Remarks Possible values from 'alarmValueEnumSet' Metasys enum set. Example: 'alarmValueEnumSet.avHighLimit'."
  },
  "api/JohnsonControls.Metasys.BasicServices.AlarmServiceProvider.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.AlarmServiceProvider.html",
    "title": "Class AlarmServiceProvider | Metasys Services",
    "keywords": "Class AlarmServiceProvider Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Provide alarm item for the endpoints of the Metasys Alarm API. public sealed class AlarmServiceProvider : BasicServiceProvider, IAlarmsService, IBasicService Inheritance object ObjectUtil BasicServiceProvider AlarmServiceProvider Implements IAlarmsService IBasicService Inherited Members BasicServiceProvider.Version BasicServiceProvider.MinVersionSupported BasicServiceProvider.MaxVersionSupported BasicServiceProvider.Culture BasicServiceProvider.LogClientErrors BasicServiceProvider.GetResourceTypesAsync(string, string) BasicServiceProvider.GetObjectTypeEnumeration(string) BasicServiceProvider.Localize(string, CultureInfo) BasicServiceProvider.ToDictionary(object) ObjectUtil.GetJTokenValue(JToken, string) ObjectUtil.GetJTokenDate(JToken, string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors AlarmServiceProvider(IFlurlClient, ApiVersion, bool) Initializes a new instance of AlarmServiceProvider with supplied data. public AlarmServiceProvider(IFlurlClient client, ApiVersion version, bool logClientErrors = true) Parameters client IFlurlClient The FlurlClient to get response from URL. version ApiVersion The server's Api version. logClientErrors bool Set this flag to false to disable logging of client errors. Methods Acknowledge(Guid, string) Set an Alarm as 'acknowledged' public void Acknowledge(Guid alarmId, string annotationText = null) Parameters alarmId Guid The identifier of the alarm. annotationText string Annotation Text (optional). AcknowledgeAsync(Guid, string) Set an Alarm as 'acknowledged' public Task AcknowledgeAsync(Guid alarmId, string annotationText = null) Parameters alarmId Guid The identifier of the alarm. annotationText string Annotation Text (optional). Returns Task Discard(Guid, string) Set an Alarm as 'discarded' public void Discard(Guid alarmId, string annotationText = null) Parameters alarmId Guid The identifier of the alarm. annotationText string Annotation Text (optional). DiscardAsync(Guid, string) Set an Alarm as 'discarded' public Task DiscardAsync(Guid alarmId, string annotationText = null) Parameters alarmId Guid The identifier of the alarm. annotationText string Annotation Text (optional). Returns Task FindById(Guid) Retrieves the specified alarm. public Alarm FindById(Guid alarmId) Parameters alarmId Guid The identifier of the alarm. Returns Alarm The specified alarm details. FindByIdAsync(Guid) Retrieves the specified alarm. public Task<Alarm> FindByIdAsync(Guid alarmId) Parameters alarmId Guid The identifier of the alarm. Returns Task<Alarm> The specified alarm details. Get(AlarmFilter) Retrieves a collection of alarms using API v2 or v3. public PagedResult<Alarm> Get(AlarmFilter alarmFilter) Parameters alarmFilter AlarmFilter The alarm model to filter alarms. Returns PagedResult<Alarm> The list of alarms with details. Get(AlarmFilterV4Plus) Retrieves a collection of alarms from API v4 on. public PagedResult<Alarm> Get(AlarmFilterV4Plus alarmFilter) Parameters alarmFilter AlarmFilterV4Plus The alarm model to filter alarms. Returns PagedResult<Alarm> The list of alarms with details. GetAnnotations(Guid) Retrieve a collection of Alarm Annotations. public IEnumerable<AlarmAnnotation> GetAnnotations(Guid alarmId) Parameters alarmId Guid Returns IEnumerable<AlarmAnnotation> GetAnnotationsAsync(Guid) Retrieve a collection of Alarm Annotations. public Task<IEnumerable<AlarmAnnotation>> GetAnnotationsAsync(Guid alarmId) Parameters alarmId Guid Returns Task<IEnumerable<AlarmAnnotation>> GetAsync(AlarmFilter) Retrieves a collection of alarms using API v2 or v3. public Task<PagedResult<Alarm>> GetAsync(AlarmFilter alarmFilter) Parameters alarmFilter AlarmFilter The alarm model to filter alarms. Returns Task<PagedResult<Alarm>> The list of alarms with details. GetAsync(AlarmFilterV4Plus) Retrieves a collection of alarms from API v4 on. public Task<PagedResult<Alarm>> GetAsync(AlarmFilterV4Plus alarmFilter) Parameters alarmFilter AlarmFilterV4Plus The alarm model to filter alarms. Returns Task<PagedResult<Alarm>> The list of alarms with details. GetForNetworkDevice(ObjectId, AlarmFilter) Retrieves a collection of alarms for the specified object. public PagedResult<Alarm> GetForNetworkDevice(ObjectId networkDeviceId, AlarmFilter alarmFilter) Parameters networkDeviceId ObjectId The identifier of the network device. alarmFilter AlarmFilter The filter to be applied to alarms list. Returns PagedResult<Alarm> The list of alarms with details. GetForNetworkDeviceAsync(ObjectId, AlarmFilter) Retrieves a collection of alarms for the specified object. public Task<PagedResult<Alarm>> GetForNetworkDeviceAsync(ObjectId networkDeviceId, AlarmFilter alarmFilter) Parameters networkDeviceId ObjectId The identifier of the network device. alarmFilter AlarmFilter The filter to be applied to alarms list. Returns Task<PagedResult<Alarm>> The list of alarms with details. GetForObject(ObjectId, AlarmFilter) Retrieves a collection of alarms for the specified object. public PagedResult<Alarm> GetForObject(ObjectId objectId, AlarmFilter alarmFilter) Parameters objectId ObjectId The identifier of the object. alarmFilter AlarmFilter The filter to be applied to alarms list. Returns PagedResult<Alarm> The list of alarms with details. GetForObjectAsync(ObjectId, AlarmFilter) Retrieves a collection of alarms for the specified object. public Task<PagedResult<Alarm>> GetForObjectAsync(ObjectId objectId, AlarmFilter alarmFilter) Parameters objectId ObjectId The identifier of the object. alarmFilter AlarmFilter The filter to be applied to alarms list. Returns Task<PagedResult<Alarm>> The list of alarms with details."
  },
  "api/JohnsonControls.Metasys.BasicServices.ApiVersion.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.ApiVersion.html",
    "title": "Enum ApiVersion | Metasys Services",
    "keywords": "Enum ApiVersion Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll The supported Metasys server Api versions. public enum ApiVersion Fields v2 = 0 Metasys 10.1 v3 = 1 Metasys 11.0 v4 = 2 Metasys 12.0 v5 = 3 Metasys 13.0 Remarks Metasys 10.0 is not supported by this software development kit. To utilize this sdk please upgrade your Metasys server to the latest release."
  },
  "api/JohnsonControls.Metasys.BasicServices.AttributeEnumSet.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.AttributeEnumSet.html",
    "title": "Enum AttributeEnumSet | Metasys Services",
    "keywords": "Enum AttributeEnumSet Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Enumeration of possible Attributes (typically for Trended Samples). public enum AttributeEnumSet Fields ackRequired = 1 Ack Required ackedTransitions = 0 Acked Transitions alarmState = 1006 Alarm State alarmValue = 6 Alarm Value bacnetDeadband = 25 BACnet Deadband bacnetExposed = 3807 BACnet Exposed bacnetObjectType = 79 Object Type connectedStatus = 1243 Connected Status connectedToInternalApplication = 6081 Connected to Internal Application cosCount = 15 COS Count covIncrement = 22 COV Increment cpuUsage = 2583 CPU Usage currentCommandPriority = 431 Current Command Priority defaultValue = 3113 Default Value direction = 746 Direction displayPrecision = 661 Display Precision dobjectCategory = 908 Authorization Category elapsedActiveTime = 33 Elapsed Active Time enabled = 673 Enabled estimatedFlashAvailable = 2395 Estimated Flash Available eventDetectionEnable = 353 Event Detection Enable eventState = 36 Event State executionPriority = 2197 Execution Priority failsoft = 2567 Failsoft failsoftCurrentlyActive = 6088 Failsoft Currently Active highLimit = 45 High Limit intrinsicAlarmDisabled = 4305 Intrinsic Alarming Disabled lastIdleSample = 30082 Last Idle Sample lowLimit = 59 Low Limit maxPresValue = 65 Max Value memoryUsage = 2581 Memory Usage minOffTime = 66 Min Off Time minOnTime = 67 Min On Time minPresValue = 69 Min Value notificationClass = 17 Notification Class notifyType = 72 Notify Type numberOfStates = 74 Number Of States outOfService = 81 Out Of Service presentValue = 85 Present Value presentValueWritable = 6080 Present Value Writable priorityForWritingToConnected = 6093 Priority For Writing to Connected Object prioritySupported = 6083 Priority Supported referencedReliability = 6085 Referenced Reliability referencedValue = 6084 Referenced Value referencedValueCosCount = 6086 Referenced Value COS Count reliability = 103 Reliability relinquishDefault = 104 Relinquish Default stateText = 110 State Text status = 512 Status timeDelay = 113 Time Delay units = 117 Units useCovMinSendTime = 3930 Use COV Min Send Time"
  },
  "api/JohnsonControls.Metasys.BasicServices.Audit.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.Audit.html",
    "title": "Class Audit | Metasys Services",
    "keywords": "Class Audit Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Provides audit Item public class Audit Inheritance object Audit Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties ActionType Fully qualified enumeration for Action Type. public string ActionType { get; set; } Property Value string Remarks This is available since Metasys API v3. ActionTypeUrl The action performed that initiated the audit. https://{hostname}/api/v2/enumSets/577/members for possible values. public string ActionTypeUrl { get; set; } Property Value string Remarks This is available only on Metasys API v2 and v1. AnnotationsUrl Link to annotations. public string AnnotationsUrl { get; set; } Property Value string CreationTime The dateTime representing the creation time when this audit message was created. [JsonProperty(Required = Required.Always)] public string CreationTime { get; set; } Property Value string Description To get description value for v4 public string Description { get; set; } Property Value string Discarded Indicates if the audit has been discarded. public bool Discarded { get; set; } Property Value bool ErrorString The error that may have occurred during an audit. public string ErrorString { get; set; } Property Value string Id The identifier of the audit(GUID). [JsonProperty(Required = Required.Always)] public Guid Id { get; set; } Property Value Guid Legacy Metasys specific data. public dynamic Legacy { get; set; } Property Value dynamic ObjectUrl A link to the object on which the activity was generated. [JsonProperty(Required = Required.Default)] public string ObjectUrl { get; set; } Property Value string Parameters Parameters for the Audit. public dynamic Parameters { get; set; } Property Value dynamic PostData Data value after the Audit. public dynamic PostData { get; set; } Property Value dynamic PreData Data value prior to the Audit. public dynamic PreData { get; set; } Property Value dynamic Self URI that points back to this resource public string Self { get; set; } Property Value string Signature The user who created this audit. public dynamic Signature { get; set; } Property Value dynamic Status Fully qualified enumeration for Status. public string Status { get; set; } Property Value string Remarks This is available since Metasys API v3. StatusUrl Enumeration representing status. https://{hostname}/api/v2/enumSets/516/members for possible values public string StatusUrl { get; set; } Property Value string User The userName of the user that initiated the audit. public string User { get; set; } Property Value string Methods Equals(object) Returns a value indicating whether this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() Return a pretty JSON string of the current object. public override string ToString() Returns string"
  },
  "api/JohnsonControls.Metasys.BasicServices.AuditAnnotation.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.AuditAnnotation.html",
    "title": "Class AuditAnnotation | Metasys Services",
    "keywords": "Class AuditAnnotation Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Annotation for an audit. public class AuditAnnotation : MetasysAnnotation Inheritance object MetasysAnnotation AuditAnnotation Inherited Members MetasysAnnotation.Text MetasysAnnotation.User MetasysAnnotation.CreationTime MetasysAnnotation.Action object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties AuditUrl URL of the audit related to the annotation. public string AuditUrl { get; set; } Property Value string Signature Signature of the annotation. public string Signature { get; set; } Property Value string Methods Equals(object) Returns a value indicating whether this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() Return a pretty JSON string of the current object. public override string ToString() Returns string"
  },
  "api/JohnsonControls.Metasys.BasicServices.AuditData.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.AuditData.html",
    "title": "Class AuditData | Metasys Services",
    "keywords": "Class AuditData Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll AuditData is a structure that holds information about Audit Information. public class AuditData Inheritance object AuditData Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Precision Route to the endpoint for the current precision enumset. public string Precision { get; set; } Property Value string Remarks This is available since Metasys API v3. Type Audit type route public string Type { get; set; } Property Value string Remarks This is available since Metasys API v3. Unit Route to the endpoint for the current unit enumset. public string Unit { get; set; } Property Value string Remarks This is available since Metasys API v3. Value Value public string Value { get; set; } Property Value string Methods Equals(object) Returns a value indicating whether this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/JohnsonControls.Metasys.BasicServices.AuditFilter.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.AuditFilter.html",
    "title": "Class AuditFilter | Metasys Services",
    "keywords": "Class AuditFilter Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Filters to get audits public class AuditFilter : TimeFilter Inheritance object BasicFilter TimeFilter AuditFilter Inherited Members TimeFilter.StartTime TimeFilter.EndTime BasicFilter.Page BasicFilter.PageSize BasicFilter.Sort object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ActionTypes Filter by comma-separated list of the action types. See /enumSets/578/members for possible values. Example: 1,2. public ActionTypeEnum ActionTypes { get; set; } Property Value ActionTypeEnum ClassLevels Added to call into API v4. public string ClassLevels { get; set; } Property Value string ClassesLevels Filter by comma-separated list of class levels. See /enumSets/578/members for possible values. Example: 1,2. public ClassLevelsEnum ClassesLevels { get; set; } Property Value ClassLevelsEnum ExcludeDiscarded Determines whether discarded audits will be excluded from results. Default is false (discarded audits will not be excluded). public bool? ExcludeDiscarded { get; set; } Property Value bool? OriginApplications Filter by comma-separated list of origin applications. See /enumSets/578/members for possible values. Example: 1,2. public OriginApplicationsEnum OriginApplications { get; set; } Property Value OriginApplicationsEnum"
  },
  "api/JohnsonControls.Metasys.BasicServices.AuditServiceProvider.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.AuditServiceProvider.html",
    "title": "Class AuditServiceProvider | Metasys Services",
    "keywords": "Class AuditServiceProvider Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Provide audit item for the endpoints of the Metasys Audit API. public sealed class AuditServiceProvider : BasicServiceProvider, IAuditService, IBasicService Inheritance object ObjectUtil BasicServiceProvider AuditServiceProvider Implements IAuditService IBasicService Inherited Members BasicServiceProvider.Version BasicServiceProvider.MinVersionSupported BasicServiceProvider.MaxVersionSupported BasicServiceProvider.Culture BasicServiceProvider.LogClientErrors BasicServiceProvider.GetResourceTypesAsync(string, string) BasicServiceProvider.GetObjectTypeEnumeration(string) BasicServiceProvider.Localize(string, CultureInfo) BasicServiceProvider.ToDictionary(object) ObjectUtil.GetJTokenValue(JToken, string) ObjectUtil.GetJTokenDate(JToken, string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors AuditServiceProvider(IFlurlClient, ApiVersion, bool) Initializes a new instance of AuditServiceProvider with supplied data. public AuditServiceProvider(IFlurlClient client, ApiVersion version, bool logClientErrors = true) Parameters client IFlurlClient The FlurlClient to get response from URL. version ApiVersion The server's Api version. logClientErrors bool Set this flag to false to disable logging of client errors. Methods AddAnnotation(Guid, string) Add an Annotation to the specified Audit. public void AddAnnotation(Guid id, string text) Parameters id Guid The identifier of the Audit. text string The text of the Annotation. Exceptions MetasysUnsupportedApiVersion AddAnnotationAsync(Guid, string) Add an Annotation to the specified Audit. public Task AddAnnotationAsync(Guid id, string text) Parameters id Guid The identifier of the Audit. text string The text of the Annotation. Returns Task Exceptions MetasysUnsupportedApiVersion AddAnnotationMultiple(IEnumerable<BatchRequestParam>) Add many Annotations given a list of requests containing the Id of the Audits and the text of the Annotations. public IEnumerable<Result> AddAnnotationMultiple(IEnumerable<BatchRequestParam> requests) Parameters requests IEnumerable<BatchRequestParam> List of BatchRequestParam to specify the id of the audits and the text of the annotations to add. Returns IEnumerable<Result> A list of BatchRequestParam with all the specified attributes. AddAnnotationMultipleAsync(IEnumerable<BatchRequestParam>) Add many Annotations given a list of requests containing the Id of the Audits and the text of the Annotations. public Task<IEnumerable<Result>> AddAnnotationMultipleAsync(IEnumerable<BatchRequestParam> requests) Parameters requests IEnumerable<BatchRequestParam> List of BatchRequestParam to specify the id of the audits and the text of the annotations to add. Returns Task<IEnumerable<Result>> A list of BatchRequestParam with all the specified attributes. Discard(Guid, string) Discard an Audit. public void Discard(Guid id, string annotationText) Parameters id Guid The identifier of the Audit. annotationText string Text of the annotation to report the reason of the discard. Exceptions MetasysUnsupportedApiVersion DiscardAsync(Guid, string) Discard an Audit. public Task DiscardAsync(Guid id, string annotationText) Parameters id Guid The identifier of the Audit. annotationText string Text of the annotation to report the reason of the discard. Returns Task Exceptions MetasysUnsupportedApiVersion DiscardMultiple(IEnumerable<BatchRequestParam>) Discard many Audit given a list of requests containing the Id of the Audits and the text for the Annotations. public IEnumerable<Result> DiscardMultiple(IEnumerable<BatchRequestParam> requests) Parameters requests IEnumerable<BatchRequestParam> List of BatchRequestParam to specify the id of the audits and the text of the annotations to discard. Returns IEnumerable<Result> A list of BatchRequestParam with all the specified attributes. DiscardMultipleAsync(IEnumerable<BatchRequestParam>) Discard many Audit given a list of requests containing the Id of the Audits and the text for the Annotations. public Task<IEnumerable<Result>> DiscardMultipleAsync(IEnumerable<BatchRequestParam> requests) Parameters requests IEnumerable<BatchRequestParam> List of BatchRequestParam to specify the id of the audits and the text of the annotations to discard. Returns Task<IEnumerable<Result>> A list of BatchRequestParam with all the specified attributes. FindById(Guid) Retrieves the specified audit. public Audit FindById(Guid auditId) Parameters auditId Guid The identifier of the audit. Returns Audit The specified audit details. FindByIdAsync(Guid) Retrieves the specified audit. public Task<Audit> FindByIdAsync(Guid auditId) Parameters auditId Guid The identifier of the audit. Returns Task<Audit> The specified audit details. Get(AuditFilter) Retrieves a collection of audits. public PagedResult<Audit> Get(AuditFilter auditFilter) Parameters auditFilter AuditFilter The audit model to filter audits. Returns PagedResult<Audit> The list of audits with details. GetAnnotations(Guid) Retrieve a collection of Audit Annotations. public IEnumerable<AuditAnnotation> GetAnnotations(Guid auditId) Parameters auditId Guid Returns IEnumerable<AuditAnnotation> GetAnnotationsAsync(Guid) Retrieve a collection of Audit Annotations. public Task<IEnumerable<AuditAnnotation>> GetAnnotationsAsync(Guid auditId) Parameters auditId Guid Returns Task<IEnumerable<AuditAnnotation>> GetAsync(AuditFilter) Retrieves a collection of audits. public Task<PagedResult<Audit>> GetAsync(AuditFilter auditFilter) Parameters auditFilter AuditFilter The audit model to filter audits. Returns Task<PagedResult<Audit>> The list of audits with details. GetForObject(ObjectId, AuditFilter) Retrieves a collection of audits for the specified object. public PagedResult<Audit> GetForObject(ObjectId objectId, AuditFilter auditFilter) Parameters objectId ObjectId The identifier of the object. auditFilter AuditFilter The filter to be applied to audit list. Returns PagedResult<Audit> The list of audit with details. GetForObjectAsync(ObjectId, AuditFilter) Retrieves a collection of audits for the specified object. public Task<PagedResult<Audit>> GetForObjectAsync(ObjectId objectId, AuditFilter auditFilter) Parameters objectId ObjectId The identifier of the object. auditFilter AuditFilter The filter to be applied to audit list. Returns Task<PagedResult<Audit>> The list of audit with details."
  },
  "api/JohnsonControls.Metasys.BasicServices.AuditSignature.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.AuditSignature.html",
    "title": "Class AuditSignature | Metasys Services",
    "keywords": "Class AuditSignature Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll DTO for the AuditSignature model. public class AuditSignature Inheritance object AuditSignature Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FullName Full name of the user who executed the action. public string FullName { get; set; } Property Value string Reason The reason written by the user. public string Reason { get; set; } Property Value string"
  },
  "api/JohnsonControls.Metasys.BasicServices.BasicFilter.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.BasicFilter.html",
    "title": "Class BasicFilter | Metasys Services",
    "keywords": "Class BasicFilter Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Basic filter for a general API request. public class BasicFilter Inheritance object BasicFilter Derived TimeFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Page The page number of items to return Default: 1. public int? Page { get; set; } Property Value int? PageSize The maximum number of items to return in the response. Valid range is 1-10,000. Default: 1000 public int? PageSize { get; set; } Property Value int? Sort The criteria to use when sorting results Accepted Values: itemReference, priority, creationTime public string Sort { get; set; } Property Value string"
  },
  "api/JohnsonControls.Metasys.BasicServices.BasicServiceProvider.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.BasicServiceProvider.html",
    "title": "Class BasicServiceProvider | Metasys Services",
    "keywords": "Class BasicServiceProvider Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Base abstract class to be extended on specific provider implementation. public abstract class BasicServiceProvider : ObjectUtil Inheritance object ObjectUtil BasicServiceProvider Derived AlarmServiceProvider AuditServiceProvider EnumerationServiceProvider EquipmentServiceProvider MetasysClient NetworkDeviceServiceProvider SpaceServiceProvider StreamServiceProvider TrendServiceProvider Inherited Members ObjectUtil.GetJTokenValue(JToken, string) ObjectUtil.GetJTokenDate(JToken, string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BasicServiceProvider(IFlurlClient, ApiVersion, bool) Constructor for dedicated services with Flurl client initialization already performed. public BasicServiceProvider(IFlurlClient client, ApiVersion version, bool logErrors = true) Parameters client IFlurlClient The Flurl client. version ApiVersion The server's Api version. logErrors bool Set this flag to false to disable logging of client errors. BasicServiceProvider(bool) Empty constructor. public BasicServiceProvider(bool logErrors = true) Parameters logErrors bool Set this flag to false to disable logging of client errors. Remarks Assume Client is initialized by extended class. Fields Client The http client. protected IFlurlClient Client Field Value IFlurlClient Log The log initiliazer. protected LogInitializer Log Field Value LogInitializer Properties Culture The current Culture Used for localization. public CultureInfo Culture { get; set; } Property Value CultureInfo LogClientErrors Set this flag to false to disable logging of client errors. public bool LogClientErrors { get; set; } Property Value bool MaxVersionSupported Max API version supported by this SDK. public ApiVersion MaxVersionSupported { get; } Property Value ApiVersion MinVersionSupported Min API version supported by this SDK. public ApiVersion MinVersionSupported { get; } Property Value ApiVersion Version public ApiVersion Version { get; set; } Property Value ApiVersion Methods CheckVersion(ApiVersion) Check if the selected API version is supported by the SDK protected void CheckVersion(ApiVersion version) Parameters version ApiVersion GetAllAvailablePagesAsync(string, Dictionary<string, string>, params string[]) Gets all items for the given resource asynchronously by requesting each available page. protected Task<List<JToken>> GetAllAvailablePagesAsync(string resource, Dictionary<string, string> parameters = null, params string[] pathSegments) Parameters resource string The main resource to read. parameters Dictionary<string, string> Query string parameters in Key Value format. pathSegments string[] Path segments to be used in combination with the main resource. Returns Task<List<JToken>> Exceptions MetasysHttpParsingException MetasysHttpTimeoutException MetasysHttpException MetasysHttpNotFoundException GetBatchRequestAsync(string, IEnumerable<ObjectId>, IEnumerable<string>, params string[]) Perform multiple requests (GET) to the Server with a single HTTP call asynchronously. protected Task<JToken> GetBatchRequestAsync(string endpoint, IEnumerable<ObjectId> ids, IEnumerable<string> resources, params string[] paths) Parameters endpoint string ids IEnumerable<ObjectId> resources IEnumerable<string> paths string[] Returns Task<JToken> GetEnumValues(string) protected IEnumerable<MetasysEnumValue> GetEnumValues(string enumerationKey) Parameters enumerationKey string Returns IEnumerable<MetasysEnumValue> GetEnumValuesAsync(string) protected Task<IEnumerable<MetasysEnumValue>> GetEnumValuesAsync(string enumerationKey) Parameters enumerationKey string Returns Task<IEnumerable<MetasysEnumValue>> GetObjectChildrenAsync(object, Dictionary<string, string>, int) Gets all child objects given a parent id asynchronously by requesting each available page. Level indicates how deep to retrieve objects. protected Task<List<TreeObject>> GetObjectChildrenAsync(object id, Dictionary<string, string> parameters = null, int levels = 1) Parameters id object The id of the object. parameters Dictionary<string, string> Query string parameters in Key/Value format. levels int The number of levels to retrieve children. Returns Task<List<TreeObject>> Remarks A level of 1 only retrieves immediate children of the parent object. Exceptions MetasysHttpException MetasysHttpParsingException GetObjectTypeEnumeration(string) public string GetObjectTypeEnumeration(string resource) Parameters resource string Returns string GetPagedResultsAsync<T>(string, Dictionary<string, string>, params object[]) Get typed items for the given resource asynchronously. protected Task<PagedResult<T>> GetPagedResultsAsync<T>(string resource, Dictionary<string, string> parameters, params object[] pathSegments) Parameters resource string The main resource to read. parameters Dictionary<string, string> Query string parameters in Key/Value format. pathSegments object[] Path segments to be used in combination with the main resource. Returns Task<PagedResult<T>> Type Parameters T Remarks Optionally accepts query string parameters and additional path segments. GetRequestAsync(string, Dictionary<string, string>, params object[]) Generic request for the given resource asynchronously. protected Task<JToken> GetRequestAsync(string resource, Dictionary<string, string> parameters = null, params object[] pathSegments) Parameters resource string The main resource to read. parameters Dictionary<string, string> Query string parameters in Key/Value format. pathSegments object[] Path segments to be used in combination with the main resource. Returns Task<JToken> Exceptions MetasysHttpParsingException MetasysHttpTimeoutException MetasysHttpException MetasysHttpNotFoundException GetResourceTypesAsync(string, string) Gets all resource types asynchronously. public Task<IEnumerable<MetasysObjectType>> GetResourceTypesAsync(string resource, string pathSegment) Parameters resource string pathSegment string Returns Task<IEnumerable<MetasysObjectType>> Exceptions MetasysHttpException MetasysHttpParsingException GetType(JToken) Gets the type from a token retrieved from a typeUrl protected MetasysObjectType GetType(JToken typeToken) Parameters typeToken JToken Returns MetasysObjectType Exceptions MetasysHttpException MetasysObjectTypeException GetType(int, string, string) Gets the type from the values of the paramenters protected MetasysObjectType GetType(int id, string description, string key) Parameters id int description string key string Returns MetasysObjectType Exceptions MetasysHttpException MetasysObjectTypeException GetWithFullUrl(string) Gets a resource given the full url asynchronously. protected Task<JToken> GetWithFullUrl(string url) Parameters url string Returns Task<JToken> Exceptions MetasysHttpException Localize(string, CultureInfo) public string Localize(string resource, CultureInfo cultureInfo = null) Parameters resource string cultureInfo CultureInfo Returns string ParseObjectIdentifier(JToken) Parses a JToken containing a string and returns the value as an ObjectId. protected ObjectId ParseObjectIdentifier(JToken token) Parameters token JToken Returns ObjectId The ObjectId contained in the token. Exceptions MetasysGuidException PatchBatchRequestAsync(string, IEnumerable<BatchRequestParam>) Perform multiple requests (PATCH) to the Server with a single HTTP call asynchronously. protected Task<JToken> PatchBatchRequestAsync(string endpoint, IEnumerable<BatchRequestParam> requests) Parameters endpoint string requests IEnumerable<BatchRequestParam> Returns Task<JToken> PostBatchRequestAsync(string, IEnumerable<BatchRequestParam>, params string[]) Perform multiple requests (POST) to the Server with a single HTTP call asynchronously. protected Task<JToken> PostBatchRequestAsync(string endpoint, IEnumerable<BatchRequestParam> requests, params string[] paths) Parameters endpoint string requests IEnumerable<BatchRequestParam> paths string[] Returns Task<JToken> PutBatchRequestAsync(string, IEnumerable<BatchRequestParam>, params string[]) Perform multiple requests (PUT or PATCH) to the Server with a single HTTP call asynchronously. protected Task<JToken> PutBatchRequestAsync(string endpoint, IEnumerable<BatchRequestParam> requests, params string[] paths) Parameters endpoint string requests IEnumerable<BatchRequestParam> paths string[] Returns Task<JToken> ThrowHttpException(FlurlHttpException) Throws a Metasys Exception from a Flurl.Http exception. protected void ThrowHttpException(FlurlHttpException e) Parameters e FlurlHttpException Exceptions MetasysHttpParsingException MetasysHttpTimeoutException MetasysHttpException MetasysHttpNotFoundException ToDictionary(object) Convert a generic object to a dictionary public static Dictionary<string, string> ToDictionary(object obj) Parameters obj object Returns Dictionary<string, string> ToMetasysObject(JToken, ApiVersion, MetasysObjectTypeEnum?) Return Metasys Object representation from a generic JSON object. protected MetasysObject ToMetasysObject(JToken item, ApiVersion version, MetasysObjectTypeEnum? objectType = null) Parameters item JToken version ApiVersion objectType MetasysObjectTypeEnum? Returns MetasysObject ToMetasysObject(IEnumerable<TreeObject>, ApiVersion, MetasysObjectTypeEnum?) Return Metasys Object representation from a generic JSON object tree. protected List<MetasysObject> ToMetasysObject(IEnumerable<TreeObject> objects, ApiVersion version, MetasysObjectTypeEnum? objectType = null) Parameters objects IEnumerable<TreeObject> version ApiVersion objectType MetasysObjectTypeEnum? Returns List<MetasysObject> ToMetasysObject(List<JToken>, ApiVersion, MetasysObjectTypeEnum?) Return Metasys Object representation from a generic JSON object List. protected List<MetasysObject> ToMetasysObject(List<JToken> items, ApiVersion version, MetasysObjectTypeEnum? type = null) Parameters items List<JToken> version ApiVersion type MetasysObjectTypeEnum? Returns List<MetasysObject> ToNetworkDevice(JToken, ApiVersion) Return Network Device representation from a generic JSON object. protected NetworkDevice ToNetworkDevice(JToken item, ApiVersion version) Parameters item JToken version ApiVersion Returns NetworkDevice ToNetworkDevice(List<JToken>, ApiVersion) Return Network Device representation from a generic JSON object List. protected List<NetworkDevice> ToNetworkDevice(List<JToken> items, ApiVersion version) Parameters items List<JToken> version ApiVersion Returns List<NetworkDevice>"
  },
  "api/JohnsonControls.Metasys.BasicServices.BatchRequest.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.BatchRequest.html",
    "title": "Class BatchRequest | Metasys Services",
    "keywords": "Class BatchRequest Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Body class for a Metasys server batch request. public class BatchRequest Inheritance object BatchRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Method Specify the type of the call, e.g. GET, POST etc... public string Method { get; set; } Property Value string Requests List of requests. public List<ObjectRequest> Requests { get; set; } Property Value List<ObjectRequest>"
  },
  "api/JohnsonControls.Metasys.BasicServices.BatchRequestParam.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.BatchRequestParam.html",
    "title": "Class BatchRequestParam | Metasys Services",
    "keywords": "Class BatchRequestParam Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Body class to pass list of parameters for Metasys server batch request. public class BatchRequestParam Inheritance object BatchRequestParam Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ActivityManagementStatus Activity Management Status. The possible values are: 'discarded' (for Alarms and Audits), 'acknowledged' (for Audits) public string ActivityManagementStatus { get; set; } Property Value string ActivityType Activity Type. The possible values are: 'alarm', 'audit' public string ActivityType { get; set; } Property Value string ObjectId Id to identify the object public ObjectId ObjectId { get; set; } Property Value ObjectId Resource String that could represent a text resource as, for instance, a text annotation public string Resource { get; set; } Property Value string"
  },
  "api/JohnsonControls.Metasys.BasicServices.ClassLevelsEnum.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.ClassLevelsEnum.html",
    "title": "Enum ClassLevelsEnum | Metasys Services",
    "keywords": "Enum ClassLevelsEnum Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Enumeration of possible Class Levels for an Audit. [Flags] public enum ClassLevelsEnum Fields Application = 4 Application type. CriticalSystemEvent = 2 Critical system event. Diagnostic = 16 Diagnostic NonCriticalSystemEvent = 8 Non_critical system event. UserAction = 1 User action on Audit. Remarks The actual values sent to the server are specified in the description."
  },
  "api/JohnsonControls.Metasys.BasicServices.Command.EnumerationItem.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.Command.EnumerationItem.html",
    "title": "Struct Command.EnumerationItem | Metasys Services",
    "keywords": "Struct Command.EnumerationItem Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll The value and translated title of an enumeration item. public struct Command.EnumerationItem Inherited Members ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Title The translated string of the enumeration value. public string Title Field Value string Translated title or default en-US value if not found. Properties TitleEnumerationKey The title enumeration key used when sending the command request. public readonly string TitleEnumerationKey { get; } Property Value string An enumeration key. Methods Equals(object) Returns a value indicating whither this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/JohnsonControls.Metasys.BasicServices.Command.Item.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.Command.Item.html",
    "title": "Struct Command.Item | Metasys Services",
    "keywords": "Struct Command.Item Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll A value that can be changed by a command. public struct Command.Item Inherited Members ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields EnumerationValues The possible enumeration values the Item can be. public IEnumerable<Command.EnumerationItem> EnumerationValues Field Value IEnumerable<Command.EnumerationItem> A list of EnumerationItems or null if not an enumeration. Maximum The maximum value the number can be if a number. public double? Maximum Field Value double? The maximum value of the number or 1 if not a number. Minimum The minimum value the number can be if a number. public double? Minimum Field Value double? The minimum value of the number or 1 if not a number. Title The title of the value to change when sending the command request. public string Title Field Value string The title or \"oneOf\" if the Item is an enumeration. Type The type of the Item. public string Type Field Value string Possible values include \"number\", \"enum\". Methods Equals(object) Returns a value indicating whither this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/JohnsonControls.Metasys.BasicServices.Command.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.Command.html",
    "title": "Class Command | Metasys Services",
    "keywords": "Class Command Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Command is a class that holds information about a Metasys object command. public class Command Inheritance object Command Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Command() Class constructor public Command() Properties CommandId The command id used to send command requests. public string CommandId { get; set; } Property Value string Items The list of values that can be modified by the command. public IEnumerable<Command.Item> Items { get; } Property Value IEnumerable<Command.Item> A list of Items or null if the command does not accept any parameter values. Title The translated title of the command. public string Title { get; set; } Property Value string The translated title of the command or the default en-US version. TitleEnumerationKey The title enumeration key of the command. public string TitleEnumerationKey { get; set; } Property Value string An enumeration key from the commandIdEnumSet or the default en-US title if not found . Methods Equals(object) Returns a value indicating whither this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() Return a pretty JSON string of the current object. public override string ToString() Returns string"
  },
  "api/JohnsonControls.Metasys.BasicServices.CommandCollectionExtension.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.CommandCollectionExtension.html",
    "title": "Class CommandCollectionExtension | Metasys Services",
    "keywords": "Class CommandCollectionExtension Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll A helper to work with Command collections. public static class CommandCollectionExtension Inheritance object CommandCollectionExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FindById(IEnumerable<Command>, string) Returns the Command in the collection with the given ID. public static Command FindById(this IEnumerable<Command> source, string id) Parameters source IEnumerable<Command> id string The Id of the Command. Returns Command"
  },
  "api/JohnsonControls.Metasys.BasicServices.CredManException.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.CredManException.html",
    "title": "Class CredManException | Metasys Services",
    "keywords": "Class CredManException Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll An exception that is thrown when something went wrong while reading a target from Credential Manger. [Serializable] public class CredManException : Exception, ISerializable Inheritance object Exception CredManException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CredManException(string) Initializes a new instance of the CredentialManagerException with a predefined message given the target. public CredManException(string target) Parameters target string"
  },
  "api/JohnsonControls.Metasys.BasicServices.EnumerationServiceProvider.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.EnumerationServiceProvider.html",
    "title": "Class EnumerationServiceProvider | Metasys Services",
    "keywords": "Class EnumerationServiceProvider Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Provide enumeration item for the endpoints of the Metasys Enumerations API. public sealed class EnumerationServiceProvider : BasicServiceProvider, IEnumerationService, IBasicService Inheritance object ObjectUtil BasicServiceProvider EnumerationServiceProvider Implements IEnumerationService IBasicService Inherited Members BasicServiceProvider.Version BasicServiceProvider.MinVersionSupported BasicServiceProvider.MaxVersionSupported BasicServiceProvider.Culture BasicServiceProvider.LogClientErrors BasicServiceProvider.GetResourceTypesAsync(string, string) BasicServiceProvider.GetObjectTypeEnumeration(string) BasicServiceProvider.Localize(string, CultureInfo) BasicServiceProvider.ToDictionary(object) ObjectUtil.GetJTokenValue(JToken, string) ObjectUtil.GetJTokenDate(JToken, string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors EnumerationServiceProvider(IFlurlClient, ApiVersion, bool) Initializes a new instance of NetworkDeviceServiceProvider with supplied data. public EnumerationServiceProvider(IFlurlClient client, ApiVersion version, bool logClientErrors = true) Parameters client IFlurlClient The FlurlClient to get response from URL. version ApiVersion The server's Api version. logClientErrors bool Set this flag to false to disable logging of client errors. Methods Create(string, IEnumerable<string>) Create a new custom enumeration. public void Create(string name, IEnumerable<string> values) Parameters name string The name of the new custom enumeration. values IEnumerable<string> The list of values (string) included in the new custom enumeration. CreateAsync(string, IEnumerable<string>) Create a new custom enumeration. public Task CreateAsync(string name, IEnumerable<string> values) Parameters name string The name of the new custom enumeration. values IEnumerable<string> The list of values (string) included in the new custom enumeration. Returns Task Delete(string) Delete an enumeration. Only custom enumerations may be deleted. public void Delete(string id) Parameters id string The identifier of the enumeration. DeleteAsync(string) Delete an enumeration. Only custom enumerations may be deleted. public Task DeleteAsync(string id) Parameters id string The identifier of the enumeration. Returns Task Edit(string, string, IEnumerable<string>) Edit and existing custom enumeration. public void Edit(string id, string name, IEnumerable<string> values) Parameters id string The identifier of the existing custom enumeration. name string The new name of the custom enumeration. values IEnumerable<string> The list of new values (string) for the existing custom enumeration. EditAsync(string, string, IEnumerable<string>) Edit and existing custom enumeration. public Task EditAsync(string id, string name, IEnumerable<string> values) Parameters id string The identifier of the existing custom enumeration. name string The new name of the custom enumeration. values IEnumerable<string> The list of new values (string) for the existing custom enumeration. Returns Task Get() Get all the Enumerations public IEnumerable<MetasysEnumeration> Get() Returns IEnumerable<MetasysEnumeration> GetAsync() Get all the Enumerations public Task<IEnumerable<MetasysEnumeration>> GetAsync() Returns Task<IEnumerable<MetasysEnumeration>> GetValues(string) Get an enumeration values public IEnumerable<MetasysEnumValue> GetValues(string id) Parameters id string The identifier of the enumeration. Returns IEnumerable<MetasysEnumValue> GetValuesAsync(string) Get an enumeration values public Task<IEnumerable<MetasysEnumValue>> GetValuesAsync(string id) Parameters id string The identifier of the enumeration. Returns Task<IEnumerable<MetasysEnumValue>> Replace(string, string, IEnumerable<string>) Replace and existing custom enumeration. public void Replace(string id, string name, IEnumerable<string> values) Parameters id string The identifier of the existing custom enumeration. name string The new name of the custom enumeration. values IEnumerable<string> The list of new values (string) for the existing custom enumeration. ReplaceAsync(string, string, IEnumerable<string>) Replace and existing custom enumeration. public Task ReplaceAsync(string id, string name, IEnumerable<string> values) Parameters id string The identifier of the existing custom enumeration. name string The new name of the custom enumeration. values IEnumerable<string> The list of new values (string) for the existing custom enumeration. Returns Task"
  },
  "api/JohnsonControls.Metasys.BasicServices.Enums.NetworkDeviceClassificationEnum.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.Enums.NetworkDeviceClassificationEnum.html",
    "title": "Enum NetworkDeviceClassificationEnum | Metasys Services",
    "keywords": "Enum NetworkDeviceClassificationEnum Namespace JohnsonControls.Metasys.BasicServices.Enums Assembly MetasysServices.dll Network Devices Classification Enumeration. public enum NetworkDeviceClassificationEnum Fields Archive = 11 Archive Controller = 3 Controller Device = 1 Device Extension = 7 Extension Folder = 8 Folder Integration = 2 Integration NavList = 6 NavList Object = 0 Object Point = 4 Point Reference = 9 Reference Server = 10 Server Site = 5 Site"
  },
  "api/JohnsonControls.Metasys.BasicServices.Enums.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.Enums.html",
    "title": "Namespace JohnsonControls.Metasys.BasicServices.Enums | Metasys Services",
    "keywords": "Namespace JohnsonControls.Metasys.BasicServices.Enums Enums NetworkDeviceClassificationEnum Network Devices Classification Enumeration."
  },
  "api/JohnsonControls.Metasys.BasicServices.EquipmentServiceProvider.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.EquipmentServiceProvider.html",
    "title": "Class EquipmentServiceProvider | Metasys Services",
    "keywords": "Class EquipmentServiceProvider Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Provide equipment item for the endpoints of the Metasys Equipments API. public sealed class EquipmentServiceProvider : BasicServiceProvider, IEquipmentService, IBasicService Inheritance object ObjectUtil BasicServiceProvider EquipmentServiceProvider Implements IEquipmentService IBasicService Inherited Members BasicServiceProvider.Version BasicServiceProvider.MinVersionSupported BasicServiceProvider.MaxVersionSupported BasicServiceProvider.Culture BasicServiceProvider.LogClientErrors BasicServiceProvider.GetResourceTypesAsync(string, string) BasicServiceProvider.GetObjectTypeEnumeration(string) BasicServiceProvider.Localize(string, CultureInfo) BasicServiceProvider.ToDictionary(object) ObjectUtil.GetJTokenValue(JToken, string) ObjectUtil.GetJTokenDate(JToken, string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors EquipmentServiceProvider(IFlurlClient, ApiVersion, bool) Initializes a new instance of NetworkDeviceServiceProvider with supplied data. public EquipmentServiceProvider(IFlurlClient client, ApiVersion version, bool logClientErrors = true) Parameters client IFlurlClient The FlurlClient to get response from URL. version ApiVersion The server's Api version. logClientErrors bool Set this flag to false to disable logging of client errors. Methods FindById(ObjectId) Retrieves the specified equipment instance. public MetasysObject FindById(ObjectId equipmentId) Parameters equipmentId ObjectId Returns MetasysObject FindByIdAsync(ObjectId) Retrieves the specified equipment instance. public Task<MetasysObject> FindByIdAsync(ObjectId equipmentId) Parameters equipmentId ObjectId Returns Task<MetasysObject> Get(int?, int?) Retrieves a collection of equipment instances. public IEnumerable<MetasysObject> Get(int? page = null, int? pageSize = null) Parameters page int? Specifies the number of the page to be retrieved (optional). pageSize int? Specifies the number of items per page. Default is 1000. (optional). Returns IEnumerable<MetasysObject> Remarks If the param 'page' is specified then it will return only the items associated to the specified page number. Otherwise all the items will be returned. GetAsync(int?, int?) Retrieves a collection of equipment instances. public Task<IEnumerable<MetasysObject>> GetAsync(int? page = null, int? pageSize = null) Parameters page int? Specifies the number of the page to be retrieved (optional). pageSize int? Specifies the number of items per page. Default is 1000. (optional). Returns Task<IEnumerable<MetasysObject>> Remarks If the param 'page' is specified then it will return only the items associated to the specified page number. Otherwise all the items will be returned. GetHostedByNetworkDevice(ObjectId) Retrieves the collection of equipment instances that are hosted by the specified network device or its children. public IEnumerable<MetasysObject> GetHostedByNetworkDevice(ObjectId networkDeviceId) Parameters networkDeviceId ObjectId Returns IEnumerable<MetasysObject> GetHostedByNetworkDeviceAsync(ObjectId) Retrieves the collection of equipment that serve the specified space. public Task<IEnumerable<MetasysObject>> GetHostedByNetworkDeviceAsync(ObjectId networkDeviceId) Parameters networkDeviceId ObjectId Returns Task<IEnumerable<MetasysObject>> GetPoints(ObjectId, bool) Retrieves the collection of points that are defined by the specified equipment instance. public IEnumerable<MetasysPoint> GetPoints(ObjectId equipmentId, bool readAttributeValue = true) Parameters equipmentId ObjectId The id of the equipment. readAttributeValue bool Set to false if you would not read Points Attribute Value. Returns IEnumerable<MetasysPoint> Remarks Reading the Attribute Value attribute could take time depending on the number of points. GetPointsAsync(ObjectId, bool) Retrieves the collection of points that are defined by the specified equipment instance. public Task<IEnumerable<MetasysPoint>> GetPointsAsync(ObjectId equipmentId, bool readAttributeValue = true) Parameters equipmentId ObjectId The id of the equipment. readAttributeValue bool Set to false if you would not read Points Attribute Value. Returns Task<IEnumerable<MetasysPoint>> Remarks Reading the Attribute Value attribute could take time depending on the number of points. GetServedByEquipment(ObjectId) Retrieves the equipment served by the specified equipment instance. public IEnumerable<MetasysObject> GetServedByEquipment(ObjectId equipmentId) Parameters equipmentId ObjectId Returns IEnumerable<MetasysObject> GetServedByEquipmentAsync(ObjectId) Retrieves the equipment served by the specified equipment instance. public Task<IEnumerable<MetasysObject>> GetServedByEquipmentAsync(ObjectId equipmentId) Parameters equipmentId ObjectId Returns Task<IEnumerable<MetasysObject>> GetServingASpace(ObjectId) Retrieves the collection of equipment that serve the specified space. public IEnumerable<MetasysObject> GetServingASpace(ObjectId spaceId) Parameters spaceId ObjectId Returns IEnumerable<MetasysObject> GetServingASpaceAsync(ObjectId) Retrieves the collection of equipment that serve the specified space. public Task<IEnumerable<MetasysObject>> GetServingASpaceAsync(ObjectId spaceId) Parameters spaceId ObjectId Returns Task<IEnumerable<MetasysObject>> GetServingAnEquipment(ObjectId) Retrieves the collection of equipment that serve the specified equipment instance. public IEnumerable<MetasysObject> GetServingAnEquipment(ObjectId equipmentId) Parameters equipmentId ObjectId Returns IEnumerable<MetasysObject> GetServingAnEquipmentAsync(ObjectId) Retrieves the collection of equipment that serve the specified equipment instance. public Task<IEnumerable<MetasysObject>> GetServingAnEquipmentAsync(ObjectId equipmentId) Parameters equipmentId ObjectId Returns Task<IEnumerable<MetasysObject>>"
  },
  "api/JohnsonControls.Metasys.BasicServices.IActivityService.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.IActivityService.html",
    "title": "Interface IActivityService | Metasys Services",
    "keywords": "Interface IActivityService Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Defines method to provide activity infos for endpoints of the Metasys Activity API. public interface IActivityService : IBasicService Inherited Members IBasicService.Version IBasicService.Culture IBasicService.GetObjectTypeEnumeration(string) IBasicService.Localize(string, CultureInfo) Methods ActionMultiple(IEnumerable<BatchRequestParam>) Perform batch actions as discard/acknowledge an alarm/audit given a list of requests containing the info necessary to perform the actions. IEnumerable<Result> ActionMultiple(IEnumerable<BatchRequestParam> requests) Parameters requests IEnumerable<BatchRequestParam> List of BatchRequestParam to specify the info necessary to perform the actions. Returns IEnumerable<Result> A list of BatchRequestParam with all the specified attributes. ActionMultipleAsync(IEnumerable<BatchRequestParam>) Perform batch actions as discard/acknowledge an alarm/audit given a list of requests containing the info necessary to perform the actions. Task<IEnumerable<Result>> ActionMultipleAsync(IEnumerable<BatchRequestParam> requests) Parameters requests IEnumerable<BatchRequestParam> List of BatchRequestParam to specify the info necessary to perform the actions. Returns Task<IEnumerable<Result>> A list of BatchRequestParam with all the specified attributes. Get(ActivityFilter) Retrieves a collection of activity items. PagedResult<Activity> Get(ActivityFilter activityFilter) Parameters activityFilter ActivityFilter The activity model to filter activity items. Returns PagedResult<Activity> The list of activity items. GetAsync(ActivityFilter) Retrieves a collection of activity items. Task<PagedResult<Activity>> GetAsync(ActivityFilter activityFilter) Parameters activityFilter ActivityFilter The activity model to filter activity items. Returns Task<PagedResult<Activity>> The list of activity items."
  },
  "api/JohnsonControls.Metasys.BasicServices.IAlarmsService.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.IAlarmsService.html",
    "title": "Interface IAlarmsService | Metasys Services",
    "keywords": "Interface IAlarmsService Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Defines method to provide alarm infos for endpoints of the Metasys Alarm API. public interface IAlarmsService : IBasicService Inherited Members IBasicService.Version IBasicService.Culture IBasicService.GetObjectTypeEnumeration(string) IBasicService.Localize(string, CultureInfo) Methods Acknowledge(Guid, string) Set an Alarm as 'acknowledged' void Acknowledge(Guid alarmId, string annotationText = null) Parameters alarmId Guid The identifier of the alarm. annotationText string Annotation Text (optional). AcknowledgeAsync(Guid, string) Set an Alarm as 'acknowledged' Task AcknowledgeAsync(Guid alarmId, string annotationText = null) Parameters alarmId Guid The identifier of the alarm. annotationText string Annotation Text (optional). Returns Task Discard(Guid, string) Set an Alarm as 'discarded' void Discard(Guid alarmId, string annotationText = null) Parameters alarmId Guid The identifier of the alarm. annotationText string Annotation Text (optional). DiscardAsync(Guid, string) Set an Alarm as 'discarded' Task DiscardAsync(Guid alarmId, string annotationText = null) Parameters alarmId Guid The identifier of the alarm. annotationText string Annotation Text (optional). Returns Task FindById(Guid) Retrieves the specified alarm. Alarm FindById(Guid alarmId) Parameters alarmId Guid The identifier of the alarm. Returns Alarm The specified alarm details. FindByIdAsync(Guid) Retrieves the specified alarm. Task<Alarm> FindByIdAsync(Guid alarmId) Parameters alarmId Guid The identifier of the alarm. Returns Task<Alarm> The specified alarm details. Get(AlarmFilter) Retrieves a collection of alarms using API v2 or v3. PagedResult<Alarm> Get(AlarmFilter alarmFilter) Parameters alarmFilter AlarmFilter The alarm model to filter alarms. Returns PagedResult<Alarm> The list of alarms with details. Get(AlarmFilterV4Plus) Retrieves a collection of alarms from API v4 on. PagedResult<Alarm> Get(AlarmFilterV4Plus alarmFilter) Parameters alarmFilter AlarmFilterV4Plus The alarm model to filter alarms. Returns PagedResult<Alarm> The list of alarms with details. GetAnnotations(Guid) Retrieve a collection of Alarm Annotations. IEnumerable<AlarmAnnotation> GetAnnotations(Guid alarmId) Parameters alarmId Guid Returns IEnumerable<AlarmAnnotation> GetAnnotationsAsync(Guid) Retrieve a collection of Alarm Annotations. Task<IEnumerable<AlarmAnnotation>> GetAnnotationsAsync(Guid alarmId) Parameters alarmId Guid Returns Task<IEnumerable<AlarmAnnotation>> GetAsync(AlarmFilter) Retrieves a collection of alarms using API v2 or v3. Task<PagedResult<Alarm>> GetAsync(AlarmFilter alarmFilter) Parameters alarmFilter AlarmFilter The alarm model to filter alarms. Returns Task<PagedResult<Alarm>> The list of alarms with details. GetAsync(AlarmFilterV4Plus) Retrieves a collection of alarms from API v4 on. Task<PagedResult<Alarm>> GetAsync(AlarmFilterV4Plus alarmFilter) Parameters alarmFilter AlarmFilterV4Plus The alarm model to filter alarms. Returns Task<PagedResult<Alarm>> The list of alarms with details. GetForNetworkDevice(ObjectId, AlarmFilter) Retrieves a collection of alarms for the specified object. PagedResult<Alarm> GetForNetworkDevice(ObjectId networkDeviceId, AlarmFilter alarmFilter) Parameters networkDeviceId ObjectId The identifier of the network device. alarmFilter AlarmFilter The filter to be applied to alarms list. Returns PagedResult<Alarm> The list of alarms with details. GetForNetworkDeviceAsync(ObjectId, AlarmFilter) Retrieves a collection of alarms for the specified object. Task<PagedResult<Alarm>> GetForNetworkDeviceAsync(ObjectId networkDeviceId, AlarmFilter alarmFilter) Parameters networkDeviceId ObjectId The identifier of the network device. alarmFilter AlarmFilter The filter to be applied to alarms list. Returns Task<PagedResult<Alarm>> The list of alarms with details. GetForObject(ObjectId, AlarmFilter) Retrieves a collection of alarms for the specified object. PagedResult<Alarm> GetForObject(ObjectId objectId, AlarmFilter alarmFilter) Parameters objectId ObjectId The identifier of the object. alarmFilter AlarmFilter The filter to be applied to alarms list. Returns PagedResult<Alarm> The list of alarms with details. GetForObjectAsync(ObjectId, AlarmFilter) Retrieves a collection of alarms for the specified object. Task<PagedResult<Alarm>> GetForObjectAsync(ObjectId objectId, AlarmFilter alarmFilter) Parameters objectId ObjectId The identifier of the object. alarmFilter AlarmFilter The filter to be applied to alarms list. Returns Task<PagedResult<Alarm>> The list of alarms with details."
  },
  "api/JohnsonControls.Metasys.BasicServices.IAuditService.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.IAuditService.html",
    "title": "Interface IAuditService | Metasys Services",
    "keywords": "Interface IAuditService Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Defines method to provide audit infos for endpoints of the Metasys Audit API. public interface IAuditService : IBasicService Inherited Members IBasicService.Version IBasicService.Culture IBasicService.GetObjectTypeEnumeration(string) IBasicService.Localize(string, CultureInfo) Methods AddAnnotation(Guid, string) Add an Annotation to the specified Audit. void AddAnnotation(Guid id, string text) Parameters id Guid The identifier of the Audit. text string The text of the Annotation. Exceptions MetasysUnsupportedApiVersion AddAnnotationAsync(Guid, string) Add an Annotation to the specified Audit. Task AddAnnotationAsync(Guid id, string text) Parameters id Guid The identifier of the Audit. text string The text of the Annotation. Returns Task Exceptions MetasysUnsupportedApiVersion AddAnnotationMultiple(IEnumerable<BatchRequestParam>) Add many Annotations given a list of requests containing the Id of the Audits and the text of the Annotations. IEnumerable<Result> AddAnnotationMultiple(IEnumerable<BatchRequestParam> requests) Parameters requests IEnumerable<BatchRequestParam> List of BatchRequestParam to specify the id of the audits and the text of the annotations to add. Returns IEnumerable<Result> A list of BatchRequestParam with all the specified attributes. AddAnnotationMultipleAsync(IEnumerable<BatchRequestParam>) Add many Annotations given a list of requests containing the Id of the Audits and the text of the Annotations. Task<IEnumerable<Result>> AddAnnotationMultipleAsync(IEnumerable<BatchRequestParam> requests) Parameters requests IEnumerable<BatchRequestParam> List of BatchRequestParam to specify the id of the audits and the text of the annotations to add. Returns Task<IEnumerable<Result>> A list of BatchRequestParam with all the specified attributes. Discard(Guid, string) Discard an Audit. void Discard(Guid id, string annotationText) Parameters id Guid The identifier of the Audit. annotationText string Text of the annotation to report the reason of the discard. Exceptions MetasysUnsupportedApiVersion DiscardAsync(Guid, string) Discard an Audit. Task DiscardAsync(Guid id, string annotationText) Parameters id Guid The identifier of the Audit. annotationText string Text of the annotation to report the reason of the discard. Returns Task Exceptions MetasysUnsupportedApiVersion DiscardMultiple(IEnumerable<BatchRequestParam>) Discard many Audit given a list of requests containing the Id of the Audits and the text for the Annotations. IEnumerable<Result> DiscardMultiple(IEnumerable<BatchRequestParam> requests) Parameters requests IEnumerable<BatchRequestParam> List of BatchRequestParam to specify the id of the audits and the text of the annotations to discard. Returns IEnumerable<Result> A list of BatchRequestParam with all the specified attributes. DiscardMultipleAsync(IEnumerable<BatchRequestParam>) Discard many Audit given a list of requests containing the Id of the Audits and the text for the Annotations. Task<IEnumerable<Result>> DiscardMultipleAsync(IEnumerable<BatchRequestParam> requests) Parameters requests IEnumerable<BatchRequestParam> List of BatchRequestParam to specify the id of the audits and the text of the annotations to discard. Returns Task<IEnumerable<Result>> A list of BatchRequestParam with all the specified attributes. FindById(Guid) Retrieves the specified audit. Audit FindById(Guid auditId) Parameters auditId Guid The identifier of the audit. Returns Audit The specified audit details. FindByIdAsync(Guid) Retrieves the specified audit. Task<Audit> FindByIdAsync(Guid auditId) Parameters auditId Guid The identifier of the audit. Returns Task<Audit> The specified audit details. Get(AuditFilter) Retrieves a collection of audits. PagedResult<Audit> Get(AuditFilter auditFilter) Parameters auditFilter AuditFilter The audit model to filter audits. Returns PagedResult<Audit> The list of audits with details. GetAnnotations(Guid) Retrieve a collection of Audit Annotations. IEnumerable<AuditAnnotation> GetAnnotations(Guid auditId) Parameters auditId Guid Returns IEnumerable<AuditAnnotation> GetAnnotationsAsync(Guid) Retrieve a collection of Audit Annotations. Task<IEnumerable<AuditAnnotation>> GetAnnotationsAsync(Guid auditId) Parameters auditId Guid Returns Task<IEnumerable<AuditAnnotation>> GetAsync(AuditFilter) Retrieves a collection of audits. Task<PagedResult<Audit>> GetAsync(AuditFilter auditFilter) Parameters auditFilter AuditFilter The audit model to filter audits. Returns Task<PagedResult<Audit>> The list of audits with details. GetForObject(ObjectId, AuditFilter) Retrieves a collection of audits for the specified object. PagedResult<Audit> GetForObject(ObjectId objectId, AuditFilter auditFilter) Parameters objectId ObjectId The identifier of the object. auditFilter AuditFilter The filter to be applied to audit list. Returns PagedResult<Audit> The list of audit with details. GetForObjectAsync(ObjectId, AuditFilter) Retrieves a collection of audits for the specified object. Task<PagedResult<Audit>> GetForObjectAsync(ObjectId objectId, AuditFilter auditFilter) Parameters objectId ObjectId The identifier of the object. auditFilter AuditFilter The filter to be applied to audit list. Returns Task<PagedResult<Audit>> The list of audit with details."
  },
  "api/JohnsonControls.Metasys.BasicServices.IBasicService.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.IBasicService.html",
    "title": "Interface IBasicService | Metasys Services",
    "keywords": "Interface IBasicService Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Base Interface for implementing a new service for Metasys Client. public interface IBasicService Properties Culture Value of the CultureInfo usaed to get the localization. CultureInfo Culture { get; set; } Property Value CultureInfo Version The Metasys server's Api version. ApiVersion Version { get; set; } Property Value ApiVersion Methods GetObjectTypeEnumeration(string) Attempts to get the enumeration key of a given en-US localized objectType. string GetObjectTypeEnumeration(string resource) Parameters resource string The en-US value for the localization resource. Returns string The enumeration key of the en-US objectType if found, original resource if not. Remarks The resource parameter must be the value of a Metasys objectTypeEnumSet en-US value, otherwise no key will be found. Localize(string, CultureInfo) Localizes the specified resource key for the current MetasysClient locale or specified culture. string Localize(string resource, CultureInfo cultureInfo = null) Parameters resource string The key for the localization resource. cultureInfo CultureInfo Optional culture specification. Returns string Localized string if the resource was found, the default en-US localized string if not found, or the resource parameter value if neither resource is found. Remarks The resource parameter must be the key of a Metasys enumeration resource, otherwise no translation will be found."
  },
  "api/JohnsonControls.Metasys.BasicServices.IEnumerationService.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.IEnumerationService.html",
    "title": "Interface IEnumerationService | Metasys Services",
    "keywords": "Interface IEnumerationService Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Defines method to provide enumeration infos for endpoints of the Metasys Enumerations API. public interface IEnumerationService : IBasicService Inherited Members IBasicService.Version IBasicService.Culture IBasicService.GetObjectTypeEnumeration(string) IBasicService.Localize(string, CultureInfo) Methods Create(string, IEnumerable<string>) Create a new custom enumeration. void Create(string name, IEnumerable<string> values) Parameters name string The name of the new custom enumeration. values IEnumerable<string> The list of values (string) included in the new custom enumeration. CreateAsync(string, IEnumerable<string>) Create a new custom enumeration. Task CreateAsync(string name, IEnumerable<string> values) Parameters name string The name of the new custom enumeration. values IEnumerable<string> The list of values (string) included in the new custom enumeration. Returns Task Delete(string) Delete an enumeration. Only custom enumerations may be deleted. void Delete(string id) Parameters id string The identifier of the enumeration. DeleteAsync(string) Delete an enumeration. Only custom enumerations may be deleted. Task DeleteAsync(string id) Parameters id string The identifier of the enumeration. Returns Task Edit(string, string, IEnumerable<string>) Edit and existing custom enumeration. void Edit(string id, string name, IEnumerable<string> values) Parameters id string The identifier of the existing custom enumeration. name string The new name of the custom enumeration. values IEnumerable<string> The list of new values (string) for the existing custom enumeration. EditAsync(string, string, IEnumerable<string>) Edit and existing custom enumeration. Task EditAsync(string id, string name, IEnumerable<string> values) Parameters id string The identifier of the existing custom enumeration. name string The new name of the custom enumeration. values IEnumerable<string> The list of new values (string) for the existing custom enumeration. Returns Task Get() Get all the Enumerations IEnumerable<MetasysEnumeration> Get() Returns IEnumerable<MetasysEnumeration> GetAsync() Get all the Enumerations Task<IEnumerable<MetasysEnumeration>> GetAsync() Returns Task<IEnumerable<MetasysEnumeration>> GetValues(string) Get an enumeration values IEnumerable<MetasysEnumValue> GetValues(string id) Parameters id string The identifier of the enumeration. Returns IEnumerable<MetasysEnumValue> GetValuesAsync(string) Get an enumeration values Task<IEnumerable<MetasysEnumValue>> GetValuesAsync(string id) Parameters id string The identifier of the enumeration. Returns Task<IEnumerable<MetasysEnumValue>> Replace(string, string, IEnumerable<string>) Replace and existing custom enumeration. void Replace(string id, string name, IEnumerable<string> values) Parameters id string The identifier of the existing custom enumeration. name string The new name of the custom enumeration. values IEnumerable<string> The list of new values (string) for the existing custom enumeration. ReplaceAsync(string, string, IEnumerable<string>) Replace and existing custom enumeration. Task ReplaceAsync(string id, string name, IEnumerable<string> values) Parameters id string The identifier of the existing custom enumeration. name string The new name of the custom enumeration. values IEnumerable<string> The list of new values (string) for the existing custom enumeration. Returns Task"
  },
  "api/JohnsonControls.Metasys.BasicServices.IEquipmentService.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.IEquipmentService.html",
    "title": "Interface IEquipmentService | Metasys Services",
    "keywords": "Interface IEquipmentService Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Defines method to provide equipment infos for endpoints of the Metasys Equipments API. public interface IEquipmentService : IBasicService Inherited Members IBasicService.Version IBasicService.Culture IBasicService.GetObjectTypeEnumeration(string) IBasicService.Localize(string, CultureInfo) Methods FindById(ObjectId) Retrieves the specified equipment instance. MetasysObject FindById(ObjectId equipmentId) Parameters equipmentId ObjectId Returns MetasysObject FindByIdAsync(ObjectId) Retrieves the specified equipment instance. Task<MetasysObject> FindByIdAsync(ObjectId equipmentId) Parameters equipmentId ObjectId Returns Task<MetasysObject> Get(int?, int?) Retrieves a collection of equipment instances. IEnumerable<MetasysObject> Get(int? page = null, int? pageSize = null) Parameters page int? Specifies the number of the page to be retrieved (optional). pageSize int? Specifies the number of items per page. Default is 1000. (optional). Returns IEnumerable<MetasysObject> Remarks If the param 'page' is specified then it will return only the items associated to the specified page number. Otherwise all the items will be returned. GetAsync(int?, int?) Retrieves a collection of equipment instances. Task<IEnumerable<MetasysObject>> GetAsync(int? page = null, int? pageSize = null) Parameters page int? Specifies the number of the page to be retrieved (optional). pageSize int? Specifies the number of items per page. Default is 1000. (optional). Returns Task<IEnumerable<MetasysObject>> Remarks If the param 'page' is specified then it will return only the items associated to the specified page number. Otherwise all the items will be returned. GetHostedByNetworkDevice(ObjectId) Retrieves the collection of equipment instances that are hosted by the specified network device or its children. IEnumerable<MetasysObject> GetHostedByNetworkDevice(ObjectId networkDeviceId) Parameters networkDeviceId ObjectId Returns IEnumerable<MetasysObject> GetHostedByNetworkDeviceAsync(ObjectId) Retrieves the collection of equipment that serve the specified space. Task<IEnumerable<MetasysObject>> GetHostedByNetworkDeviceAsync(ObjectId networkDeviceId) Parameters networkDeviceId ObjectId Returns Task<IEnumerable<MetasysObject>> GetPoints(ObjectId, bool) Retrieves the collection of points that are defined by the specified equipment instance. IEnumerable<MetasysPoint> GetPoints(ObjectId equipmentId, bool readAttributeValue = true) Parameters equipmentId ObjectId The id of the equipment. readAttributeValue bool Set to false if you would not read Points Attribute Value. Returns IEnumerable<MetasysPoint> Remarks Reading the Attribute Value attribute could take time depending on the number of points. GetPointsAsync(ObjectId, bool) Retrieves the collection of points that are defined by the specified equipment instance. Task<IEnumerable<MetasysPoint>> GetPointsAsync(ObjectId equipmentId, bool readAttributeValue = true) Parameters equipmentId ObjectId The id of the equipment. readAttributeValue bool Set to false if you would not read Points Attribute Value. Returns Task<IEnumerable<MetasysPoint>> Remarks Reading the Attribute Value attribute could take time depending on the number of points. GetServedByEquipment(ObjectId) Retrieves the equipment served by the specified equipment instance. IEnumerable<MetasysObject> GetServedByEquipment(ObjectId equipmentId) Parameters equipmentId ObjectId Returns IEnumerable<MetasysObject> GetServedByEquipmentAsync(ObjectId) Retrieves the equipment served by the specified equipment instance. Task<IEnumerable<MetasysObject>> GetServedByEquipmentAsync(ObjectId equipmentId) Parameters equipmentId ObjectId Returns Task<IEnumerable<MetasysObject>> GetServingASpace(ObjectId) Retrieves the collection of equipment that serve the specified space. IEnumerable<MetasysObject> GetServingASpace(ObjectId spaceId) Parameters spaceId ObjectId Returns IEnumerable<MetasysObject> GetServingASpaceAsync(ObjectId) Retrieves the collection of equipment that serve the specified space. Task<IEnumerable<MetasysObject>> GetServingASpaceAsync(ObjectId spaceId) Parameters spaceId ObjectId Returns Task<IEnumerable<MetasysObject>> GetServingAnEquipment(ObjectId) Retrieves the collection of equipment that serve the specified equipment instance. IEnumerable<MetasysObject> GetServingAnEquipment(ObjectId equipmentId) Parameters equipmentId ObjectId Returns IEnumerable<MetasysObject> GetServingAnEquipmentAsync(ObjectId) Retrieves the collection of equipment that serve the specified equipment instance. Task<IEnumerable<MetasysObject>> GetServingAnEquipmentAsync(ObjectId equipmentId) Parameters equipmentId ObjectId Returns Task<IEnumerable<MetasysObject>>"
  },
  "api/JohnsonControls.Metasys.BasicServices.IMetasysClient.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.IMetasysClient.html",
    "title": "Interface IMetasysClient | Metasys Services",
    "keywords": "Interface IMetasysClient Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll An HTTP client for consuming the most commonly used endpoints of the Metasys API. public interface IMetasysClient : IBasicService Inherited Members IBasicService.Version IBasicService.Culture IBasicService.GetObjectTypeEnumeration(string) IBasicService.Localize(string, CultureInfo) Properties Activities Services for Activities. IActivityService Activities { get; set; } Property Value IActivityService Alarms Services for Alarms. IAlarmsService Alarms { get; set; } Property Value IAlarmsService Audits Services for Audits. IAuditService Audits { get; set; } Property Value IAuditService Enumerations Services for Enumerations. IEnumerationService Enumerations { get; set; } Property Value IEnumerationService Equipments Services for Equipments. IEquipmentService Equipments { get; set; } Property Value IEquipmentService Hostname The hostname of Metasys API server. string Hostname { get; set; } Property Value string NetworkDevices Services for Network Devices. INetworkDeviceService NetworkDevices { get; set; } Property Value INetworkDeviceService Spaces Services for Spaces. ISpaceService Spaces { get; set; } Property Value ISpaceService Streams Services for Streams. IStreamService Streams { get; set; } Property Value IStreamService Timeout The timeout of https request. int Timeout { get; set; } Property Value int Trends Services for Trends and Samples. ITrendService Trends { get; set; } Property Value ITrendService Methods GetAccessToken() Returns the current session access token. AccessToken GetAccessToken() Returns AccessToken Current session's Access Token. GetCommandEnumeration(string) Attempts to get the enumeration key of a given en-US localized command. string GetCommandEnumeration(string resource) Parameters resource string The en-US value for the localization resource. Returns string The enumeration key of the en-US command if found, original resource if not. Remarks The resource parameter must be the value of a Metasys commandIdEnumSet en-US value, otherwise no key will be found. GetCommands(ObjectId) Get all available commands given the id of the object. IEnumerable<Command> GetCommands(ObjectId id) Parameters id ObjectId Returns IEnumerable<Command> List of Commands. GetCommandsAsync(ObjectId) Get all available commands given the id of the object. Task<IEnumerable<Command>> GetCommandsAsync(ObjectId id) Parameters id ObjectId Returns Task<IEnumerable<Command>> List of Commands. GetEquipment() Retrieves a collection of equipment instances. [Obsolete(\"Use EquipmentServiceProvider.Get(int?, int?) instead.\")] IEnumerable<MetasysObject> GetEquipment() Returns IEnumerable<MetasysObject> Remarks This method is deprecated. Please use Get(int?, int?) or GetAsync(int?, int?) instead. GetEquipmentAsync() Retrieves a collection of equipment instances. [Obsolete(\"Use EquipmentServiceProvider.GetAsync(int?, int?) instead.\")] Task<IEnumerable<MetasysObject>> GetEquipmentAsync() Returns Task<IEnumerable<MetasysObject>> Remarks This method is deprecated. Please use Get(int?, int?) or GetAsync(int?, int?) instead. GetEquipmentPoints(Guid, bool) Retrieves the collection of points that are defined by the specified equipment instance [Obsolete(\"Use EquipmentServiceProvider.GetPoints(ObjectId, bool) instead.\")] IEnumerable<MetasysPoint> GetEquipmentPoints(Guid equipmentId, bool readAttributeValue = true) Parameters equipmentId Guid The Guid of the equipment. readAttributeValue bool Set to false if you would not read Points Attribute Value. Returns IEnumerable<MetasysPoint> Remarks This method is deprecated Please use GetPoints(ObjectId, bool) or GetPointsAsync(ObjectId, bool) instead. GetEquipmentPointsAsync(Guid, bool) Retrieves the collection of points that are defined by the specified equipment instance [Obsolete(\"Use EquipmentServiceProvider.GetPointsAsync(ObjectId, bool) instead.\")] Task<IEnumerable<MetasysPoint>> GetEquipmentPointsAsync(Guid equipmentId, bool readAttributeValue = true) Parameters equipmentId Guid The Guid of the equipment. readAttributeValue bool Set to false if you would not read Points Attribute Value. Returns Task<IEnumerable<MetasysPoint>> Remarks This method is deprecated Please use GetPoints(ObjectId, bool) or GetPointsAsync(ObjectId, bool) instead. GetNetworkDeviceTypes() Gets all available network device types. IEnumerable<MetasysObjectType> GetNetworkDeviceTypes() Returns IEnumerable<MetasysObjectType> Exceptions MetasysHttpException MetasysHttpParsingException GetNetworkDeviceTypesAsync() Gets all available network device types. Task<IEnumerable<MetasysObjectType>> GetNetworkDeviceTypesAsync() Returns Task<IEnumerable<MetasysObjectType>> Exceptions MetasysHttpException MetasysHttpParsingException GetNetworkDevices(NetworkDeviceTypeEnum) Gets all network devices. IEnumerable<MetasysObject> GetNetworkDevices(NetworkDeviceTypeEnum networkDevicetype) Parameters networkDevicetype NetworkDeviceTypeEnum Network Device Type enum Returns IEnumerable<MetasysObject> Exceptions MetasysHttpException MetasysHttpParsingException GetNetworkDevices(string) Gets all network devices. [Obsolete(\"Use GetNetworkDevices(NetworkDeviceTypeEnum) instead.\")] IEnumerable<MetasysObject> GetNetworkDevices(string type = null) Parameters type string Optional type number as a string Returns IEnumerable<MetasysObject> Remarks Note this method has been deprecated. Please use GetNetworkDevices(NetworkDeviceTypeEnum) or GetNetworkDevicesAsync(NetworkDeviceTypeEnum) instead. Exceptions MetasysHttpException MetasysHttpParsingException GetNetworkDevicesAsync(NetworkDeviceTypeEnum) Gets all network devices. Task<IEnumerable<MetasysObject>> GetNetworkDevicesAsync(NetworkDeviceTypeEnum networkDevicetype) Parameters networkDevicetype NetworkDeviceTypeEnum Network Device Type enum Returns Task<IEnumerable<MetasysObject>> Exceptions MetasysHttpException MetasysHttpParsingException GetNetworkDevicesAsync(string) Gets all network devices. [Obsolete(\"Use GetNetworkDevicesAsync(NetworkDeviceTypeEnum) instead.\")] Task<IEnumerable<MetasysObject>> GetNetworkDevicesAsync(string type = null) Parameters type string Optional type number as a string Returns Task<IEnumerable<MetasysObject>> Remarks Note this method has been deprecated. Please use GetNetworkDevices(NetworkDeviceTypeEnum) or GetNetworkDevicesAsync(NetworkDeviceTypeEnum) instead. Exceptions MetasysHttpException MetasysHttpParsingException GetObjectIdentifier(string) Given the Item Reference of an object, returns the object identifier. ObjectId GetObjectIdentifier(string itemReference) Parameters itemReference string Returns ObjectId An ObjectId for the specified object. Remarks The itemReference will be automatically URL encoded. Exceptions MetasysHttpException GetObjectIdentifierAsync(string) Given the Item Reference of an object, returns the object identifier. Task<ObjectId> GetObjectIdentifierAsync(string itemReference) Parameters itemReference string Returns Task<ObjectId> An ObjectId for the specified object. Remarks The itemReference will be automatically URL encoded. Exceptions MetasysHttpException GetObjects(ObjectId, int, bool, bool) Gets all child objects given a parent id. Level indicates how deep to retrieve objects. IEnumerable<MetasysObject> GetObjects(ObjectId id, int levels = 1, bool includeInternalObjects = false, bool includeExtensions = false) Parameters id ObjectId The ID of the parent object. levels int The depth of the children to retrieve. includeInternalObjects bool Set it to true to see also internal objects that are not displayed in the Metasys tree. includeExtensions bool Set it to true to get also the extensions of the object. Returns IEnumerable<MetasysObject> Remarks A level of 1 only retrieves immediate children of the parent object. Exceptions MetasysHttpException MetasysHttpParsingException GetObjects(ObjectId, string) Gets all child objects given a parent id and object type. IEnumerable<MetasysObject> GetObjects(ObjectId objectId, string objectType) Parameters objectId ObjectId objectType string The object type enum set. Returns IEnumerable<MetasysObject> Exceptions MetasysHttpException MetasysHttpParsingException GetObjectsAsync(ObjectId, int, bool, bool) Gets all child objects given a parent id. Level indicates how deep to retrieve objects. Task<IEnumerable<MetasysObject>> GetObjectsAsync(ObjectId id, int levels = 1, bool includeInternalObjects = false, bool includeExtensions = false) Parameters id ObjectId The ID of the parent object. levels int The depth of the children to retrieve. includeInternalObjects bool Set it to true to see also internal objects that are not displayed in the Metasys tree. includeExtensions bool Set it to true to get also the extensions of the object. Returns Task<IEnumerable<MetasysObject>> Remarks A level of 1 only retrieves immediate children of the parent object. Exceptions MetasysHttpException MetasysHttpParsingException GetObjectsAsync(ObjectId, string) Gets all child objects given a parent id and object type. Task<IEnumerable<MetasysObject>> GetObjectsAsync(ObjectId objectId, string objectType) Parameters objectId ObjectId objectType string The object type enum set. Returns Task<IEnumerable<MetasysObject>> Exceptions MetasysHttpException MetasysHttpParsingException GetServerTime() Returns the current server time in UTC format. DateTime GetServerTime() Returns DateTime The current Server time. Exceptions MetasysHttpException Occurs when it's not possible to read date time from HTTP response. GetServerTimeAsync() Returns the current server time in UTC format. Task<DateTime> GetServerTimeAsync() Returns Task<DateTime> The current Server time. Exceptions MetasysHttpException Occurs when it's not possible to read date time from HTTP response. GetSpaceChildren(Guid) Retrieves the collection of spaces that are located within the specified space. [Obsolete(\"Use SpaceServiceProvider.GetChildren(ObjectId) instead.\")] IEnumerable<MetasysObject> GetSpaceChildren(Guid spaceId) Parameters spaceId Guid The GUID of the parent space. Returns IEnumerable<MetasysObject> Remarks This method is deprecated. Please use GetChildren(ObjectId) or GetChildrenAsync(ObjectId) instead. GetSpaceChildrenAsync(Guid) Retrieves the collection of spaces that are located within the specified space. [Obsolete(\"Use SpaceServiceProvider.GetChildrenAsync(ObjectId) instead.\")] Task<IEnumerable<MetasysObject>> GetSpaceChildrenAsync(Guid spaceId) Parameters spaceId Guid The GUID of the parent space. Returns Task<IEnumerable<MetasysObject>> Remarks This method is deprecated. Please use GetChildren(ObjectId) or GetChildrenAsync(ObjectId) instead. GetSpaceEquipment(Guid) Retrieves the collection of equipment that serve the specified space. [Obsolete(\"Use EquipmentServiceProvider.GetServingASpace(ObjectId) instead.\")] IEnumerable<MetasysObject> GetSpaceEquipment(Guid spaceId) Parameters spaceId Guid Returns IEnumerable<MetasysObject> Remarks This method is deprecated Please use GetServingASpace(ObjectId) or GetServingASpaceAsync(ObjectId) instead. GetSpaceEquipmentAsync(Guid) Retrieves the collection of equipment that serve the specified space. [Obsolete(\"Use EquipmentServiceProvider.GetServingASpaceAsync(ObjectId) instead.\")] Task<IEnumerable<MetasysObject>> GetSpaceEquipmentAsync(Guid spaceId) Parameters spaceId Guid Returns Task<IEnumerable<MetasysObject>> Remarks This method is deprecated Please use GetServingASpace(ObjectId) or GetServingASpaceAsync(ObjectId) instead. GetSpaceTypes() Retrieves the collection of all spaces types. This method is deprecated. Please use GetTypes() or GetTypesAsync() instead. IEnumerable<MetasysObjectType> GetSpaceTypes() Returns IEnumerable<MetasysObjectType> GetSpaceTypesAsync() Retrieves the collection of all spaces types. This method is deprecated. Please use GetTypes() or GetTypesAsync() instead. Task<IEnumerable<MetasysObjectType>> GetSpaceTypesAsync() Returns Task<IEnumerable<MetasysObjectType>> GetSpaces(SpaceTypeEnum?) Retrieves a collection of spaces. [Obsolete(\"Use SpaceServiceProvider.Get(SpaceTypeEnum?, int?, int?, string) instead.\")] IEnumerable<MetasysObject> GetSpaces(SpaceTypeEnum? type = null) Parameters type SpaceTypeEnum? Optional type ID belonging to SpaceTypeEnum. Returns IEnumerable<MetasysObject> Remarks This method is deprecated Please use Get(SpaceTypeEnum?, int?, int?, string) or GetAsync(SpaceTypeEnum?, int?, int?, string) instead. Exceptions MetasysHttpException MetasysHttpParsingException GetSpacesAsync(SpaceTypeEnum?) Retrieves a collection of spaces. [Obsolete(\"SpaceServiceProvider.GetAsync(SpaceTypeEnum?, int?, int?, string) instead.\")] Task<IEnumerable<MetasysObject>> GetSpacesAsync(SpaceTypeEnum? type = null) Parameters type SpaceTypeEnum? Optional type ID belonging to SpaceTypeEnum. Returns Task<IEnumerable<MetasysObject>> Remarks This method is deprecated Please use Get(SpaceTypeEnum?, int?, int?, string) or GetAsync(SpaceTypeEnum?, int?, int?, string) instead. Exceptions MetasysHttpException MetasysHttpParsingException ReadProperty(ObjectId, string) Read one attribute value given the id of the object. Variant ReadProperty(ObjectId id, string attributeName) Parameters id ObjectId attributeName string Returns Variant Variant if the attribute exists, null if does not exist. Exceptions MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysPropertyException ReadPropertyAsync(ObjectId, string) Read one attribute value given the id of the object. Task<Variant> ReadPropertyAsync(ObjectId id, string attributeName) Parameters id ObjectId attributeName string Returns Task<Variant> Variant if the attribute exists, null if does not exist. Exceptions MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysPropertyException ReadPropertyMultiple(IEnumerable<ObjectId>, IEnumerable<string>) Read many attribute values given the ids of the objects. IEnumerable<VariantMultiple> ReadPropertyMultiple(IEnumerable<ObjectId> ids, IEnumerable<string> attributeNames) Parameters ids IEnumerable<ObjectId> attributeNames IEnumerable<string> Returns IEnumerable<VariantMultiple> A list of VariantMultiple with all the specified attributes (if existing). Exceptions MetasysHttpException MetasysPropertyException ReadPropertyMultiple(IEnumerable<Guid>, IEnumerable<string>) Read many attribute values given the Guids of the objects. [Obsolete(\"Use ReadPropertyMultiple(IEnumerable<ObjectId>, IEnumerable<string>) instead.\")] IEnumerable<VariantMultiple> ReadPropertyMultiple(IEnumerable<Guid> ids, IEnumerable<string> attributeNames) Parameters ids IEnumerable<Guid> attributeNames IEnumerable<string> Returns IEnumerable<VariantMultiple> A list of VariantMultiple with all the specified attributes (if existing). Remarks This method is deprecated. Please use ReadPropertyMultiple(IEnumerable<ObjectId>, IEnumerable<string>) or ReadPropertyMultipleAsync(IEnumerable<ObjectId>, IEnumerable<string>) instead. Exceptions MetasysHttpException MetasysPropertyException ReadPropertyMultipleAsync(IEnumerable<ObjectId>, IEnumerable<string>) Read many attribute values given the ids of the objects. Task<IEnumerable<VariantMultiple>> ReadPropertyMultipleAsync(IEnumerable<ObjectId> ids, IEnumerable<string> attributeNames) Parameters ids IEnumerable<ObjectId> attributeNames IEnumerable<string> Returns Task<IEnumerable<VariantMultiple>> A list of VariantMultiple with all the specified attributes (if existing). Exceptions MetasysHttpException MetasysPropertyException ReadPropertyMultipleAsync(IEnumerable<Guid>, IEnumerable<string>) Read many attribute values given the Guids of the objects. [Obsolete(\"Use ReadPropertyMultipleAsync(IEnumerable<ObjectId>, IEnumerable<string>) instead.\")] Task<IEnumerable<VariantMultiple>> ReadPropertyMultipleAsync(IEnumerable<Guid> ids, IEnumerable<string> attributeNames) Parameters ids IEnumerable<Guid> attributeNames IEnumerable<string> Returns Task<IEnumerable<VariantMultiple>> A list of VariantMultiple with all the specified attributes (if existing). Remarks This method is deprecated. Please use ReadPropertyMultiple(IEnumerable<ObjectId>, IEnumerable<string>) or ReadPropertyMultipleAsync(IEnumerable<ObjectId>, IEnumerable<string>) instead. Exceptions MetasysHttpException MetasysPropertyException Refresh() Requests a new access token from the server before the current token expires. AccessToken Refresh() Returns AccessToken Access Token. Exceptions MetasysHttpException MetasysTokenException RefreshAsync() Requests a new access token from the server before the current token expires. Task<AccessToken> RefreshAsync() Returns Task<AccessToken> Access Token. Exceptions MetasysHttpException MetasysTokenException SendAsync(HttpRequestMessage, HttpCompletionOption, CancellationToken) Send an HTTP request as an asynchronous operation. This method currently only supports 1 value per header rather than multiple. In a future revision, this is planned to be addressed. Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, HttpCompletionOption completionOption = HttpCompletionOption.ResponseContentRead, CancellationToken cancellationToken = default) Parameters request HttpRequestMessage The HTTP request message to send. completionOption HttpCompletionOption When the operation should complete (as soon as a response is available or after reading the whole response content). cancellationToken CancellationToken The cancellation token to cancel operation. Returns Task<HttpResponseMessage> The task object representing the asynchronous operation. SendCommand(ObjectId, string, IEnumerable<object>) Send a command to an object. void SendCommand(ObjectId id, string command, IEnumerable<object> values = null) Parameters id ObjectId command string values IEnumerable<object> Exceptions MetasysHttpException SendCommandAsync(ObjectId, string, IEnumerable<object>) Send a command to an object. Task SendCommandAsync(ObjectId id, string command, IEnumerable<object> values = null) Parameters id ObjectId command string values IEnumerable<object> Returns Task Exceptions MetasysHttpException TryLogin(string, bool) Attempts to login to the given host using Credential Manager and retrieve an access token. AccessToken TryLogin(string credManTarget, bool refresh = true) Parameters credManTarget string The Credential Manager target where to pick the credentials. refresh bool Flag to set automatic access token refreshing to keep session active. Returns AccessToken Remarks This method can be overridden by extended class with other Credential Manager implementations. TryLogin(string, string, bool) Attempts to login to the given host and retrieve an access token. AccessToken TryLogin(string username, string password, bool refresh = true) Parameters username string password string refresh bool Flag to set automatic access token refreshing to keep session active. Returns AccessToken Access Token. Exceptions MetasysHttpException MetasysTokenException TryLoginAsync(string, bool) Attempts to login to the given host using Credential Manager and retrieve an access token. Task<AccessToken> TryLoginAsync(string credManTarget, bool refresh = true) Parameters credManTarget string The Credential Manager target where to pick the credentials. refresh bool Flag to set automatic access token refreshing to keep session active. Returns Task<AccessToken> Remarks This method can be overridden by extended class with other Credential Manager implementations. TryLoginAsync(string, string, bool) Attempts to login to the given host and retrieve an access token. Task<AccessToken> TryLoginAsync(string username, string password, bool refresh = true) Parameters username string password string refresh bool Flag to set automatic access token refreshing to keep session active. Returns Task<AccessToken> Access Token. Exceptions MetasysHttpException MetasysTokenException WriteProperty(ObjectId, string, object) Write a single attribute given the id of the object. void WriteProperty(ObjectId id, string attributeName, object newValue) Parameters id ObjectId The id of the attribute attributeName string The name of the attribute newValue object The new value of the attribute Exceptions MetasysHttpException WritePropertyAsync(ObjectId, string, object) Write a single attribute given the id of the object. Task WritePropertyAsync(ObjectId id, string attributeName, object newValue) Parameters id ObjectId The id of the attribute attributeName string The name of the attribute newValue object The new value of the attribute Returns Task Exceptions MetasysHttpException WritePropertyMultiple(IEnumerable<ObjectId>, Dictionary<string, object>) Write to many attribute values given the ids of the objects. void WritePropertyMultiple(IEnumerable<ObjectId> ids, Dictionary<string, object> attributeValues) Parameters ids IEnumerable<ObjectId> attributeValues Dictionary<string, object> The (attribute, value) pairs. Exceptions MetasysHttpException WritePropertyMultiple(IEnumerable<ObjectId>, IEnumerable<(string Attribute, object Value)>) Write to many attribute values given the ids of the objects. void WritePropertyMultiple(IEnumerable<ObjectId> ids, IEnumerable<(string Attribute, object Value)> attributeValues) Parameters ids IEnumerable<ObjectId> attributeValues IEnumerable<(string Attribute, object Value)> The (attribute, value) pairs. Exceptions MetasysHttpException WritePropertyMultiple(IEnumerable<Guid>, Dictionary<string, object>) Write to many attribute values given the Guids of the objects. [Obsolete(\"Use WritePropertyMultiple(IEnumerable<ObjectId>, Dictionary<string, object>) instead.\")] void WritePropertyMultiple(IEnumerable<Guid> ids, Dictionary<string, object> attributeValues) Parameters ids IEnumerable<Guid> attributeValues Dictionary<string, object> The (attribute, value) pairs. Remarks This method is deprecated. Please use one of the following instead: WritePropertyMultiple(IEnumerable<ObjectId>, Dictionary<string, object>), WritePropertyMultiple(IEnumerable<ObjectId>, IEnumerable<(string Attribute, object Value)>), WritePropertyMultipleAsync(IEnumerable<ObjectId>, Dictionary<string, object>), or WritePropertyMultipleAsync(IEnumerable<ObjectId>, IEnumerable<(string Attribute, object Value)>). Exceptions MetasysHttpException WritePropertyMultiple(IEnumerable<Guid>, IEnumerable<(string Attribute, object Value)>) Write to many attribute values given the Guids of the objects. [Obsolete(\"Use WritePropertyMultiple(IEnumerable<ObjectId>, IEnumerable<string, object>) instead.\")] void WritePropertyMultiple(IEnumerable<Guid> ids, IEnumerable<(string Attribute, object Value)> attributeValues) Parameters ids IEnumerable<Guid> attributeValues IEnumerable<(string Attribute, object Value)> The (attribute, value) pairs. Remarks This method is deprecated. Please use one of the following instead: WritePropertyMultiple(IEnumerable<ObjectId>, Dictionary<string, object>), WritePropertyMultiple(IEnumerable<ObjectId>, IEnumerable<(string Attribute, object Value)>), WritePropertyMultipleAsync(IEnumerable<ObjectId>, Dictionary<string, object>), or WritePropertyMultipleAsync(IEnumerable<ObjectId>, IEnumerable<(string Attribute, object Value)>). Exceptions MetasysHttpException WritePropertyMultipleAsync(IEnumerable<ObjectId>, Dictionary<string, object>) Write to many attribute values given the ids of the objects. Task WritePropertyMultipleAsync(IEnumerable<ObjectId> ids, Dictionary<string, object> attributeValues) Parameters ids IEnumerable<ObjectId> attributeValues Dictionary<string, object> The (attribute, value) pairs. Returns Task Exceptions MetasysHttpException WritePropertyMultipleAsync(IEnumerable<ObjectId>, IEnumerable<(string Attribute, object Value)>) Write asynchronously to many attribute values given the ids of the objects. Task WritePropertyMultipleAsync(IEnumerable<ObjectId> ids, IEnumerable<(string Attribute, object Value)> attributeValues) Parameters ids IEnumerable<ObjectId> attributeValues IEnumerable<(string Attribute, object Value)> Returns Task WritePropertyMultipleAsync(IEnumerable<Guid>, Dictionary<string, object>) Write to many attribute values given the Guids of the objects. [Obsolete(\"Use WritePropertyMultiple(IEnumerable<ObjectId>, Dictionary<string, object>) instead.\")] Task WritePropertyMultipleAsync(IEnumerable<Guid> ids, Dictionary<string, object> attributeValues) Parameters ids IEnumerable<Guid> attributeValues Dictionary<string, object> The (attribute, value) pairs. Returns Task Remarks This method is deprecated. Please use one of the following instead: WritePropertyMultiple(IEnumerable<ObjectId>, Dictionary<string, object>), WritePropertyMultiple(IEnumerable<ObjectId>, IEnumerable<(string Attribute, object Value)>), WritePropertyMultipleAsync(IEnumerable<ObjectId>, Dictionary<string, object>), or WritePropertyMultipleAsync(IEnumerable<ObjectId>, IEnumerable<(string Attribute, object Value)>). Exceptions MetasysHttpException WritePropertyMultipleAsync(IEnumerable<Guid>, IEnumerable<(string Attribute, object Value)>) Write asynchronously to many attribute values given the Guids of the objects. [Obsolete(\"Use WritePropertyMultipleAsync(IEnumerable<ObjectId>, IEnumerable<string, object>) instead.\")] Task WritePropertyMultipleAsync(IEnumerable<Guid> ids, IEnumerable<(string Attribute, object Value)> attributeValues) Parameters ids IEnumerable<Guid> attributeValues IEnumerable<(string Attribute, object Value)> Returns Task Remarks This method is deprecated. Please use WritePropertyMultipleAsync(IEnumerable<ObjectId>, Dictionary<string, object>) or WritePropertyMultipleAsync(IEnumerable<ObjectId>, IEnumerable<(string Attribute, object Value)>) instead."
  },
  "api/JohnsonControls.Metasys.BasicServices.INetworkDeviceService.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.INetworkDeviceService.html",
    "title": "Interface INetworkDeviceService | Metasys Services",
    "keywords": "Interface INetworkDeviceService Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Defines method to provide network device infos for endpoints of the Metasys Network Devices API. public interface INetworkDeviceService : IBasicService Inherited Members IBasicService.Version IBasicService.Culture IBasicService.GetObjectTypeEnumeration(string) IBasicService.Localize(string, CultureInfo) Methods FindById(Guid) Retrieves the specified network device. MetasysObject FindById(Guid networkDeviceId) Parameters networkDeviceId Guid The identifier of the network device. Returns MetasysObject The specified alarm details. FindByIdAsync(Guid) Retrieves the specified network device. Task<MetasysObject> FindByIdAsync(Guid networkDeviceId) Parameters networkDeviceId Guid The identifier of the network device. Returns Task<MetasysObject> The specified alarm details. Get(NetworkDeviceTypeEnum) Retrieves a collection of network devices. IEnumerable<MetasysObject> Get(NetworkDeviceTypeEnum networkDevicetype) Parameters networkDevicetype NetworkDeviceTypeEnum Network Device Type enum Returns IEnumerable<MetasysObject> Exceptions MetasysHttpException MetasysHttpParsingException Get(string) Retrieves a collection of network devices. IEnumerable<MetasysObject> Get(string type = null) Parameters type string Optional type number as a string Returns IEnumerable<MetasysObject> Exceptions MetasysHttpException MetasysHttpParsingException GetAsync(NetworkDeviceClassificationEnum) Retrieves a collection of network devices. Task<IEnumerable<MetasysObject>> GetAsync(NetworkDeviceClassificationEnum classificationEnum) Parameters classificationEnum NetworkDeviceClassificationEnum Returns Task<IEnumerable<MetasysObject>> Exceptions MetasysHttpException MetasysHttpParsingException GetAsync(NetworkDeviceTypeEnum) Retrieves a collection of network devices. Task<IEnumerable<MetasysObject>> GetAsync(NetworkDeviceTypeEnum networkDevicetype) Parameters networkDevicetype NetworkDeviceTypeEnum Network Device Type enum Returns Task<IEnumerable<MetasysObject>> Exceptions MetasysHttpException MetasysHttpParsingException GetAsync(string) Retrieves a collection of network devices. Task<IEnumerable<MetasysObject>> GetAsync(string type = null) Parameters type string Optional type number as a string Returns Task<IEnumerable<MetasysObject>> Exceptions MetasysHttpException MetasysHttpParsingException GetChildren(Guid) Retrieves the collection of network devices that are children of the specified network device. IEnumerable<MetasysObject> GetChildren(Guid networkDeviceId) Parameters networkDeviceId Guid Returns IEnumerable<MetasysObject> GetChildrenAsync(Guid) Retrieves the collection of network devices that are children of the specified network device. Task<IEnumerable<MetasysObject>> GetChildrenAsync(Guid networkDeviceId) Parameters networkDeviceId Guid Returns Task<IEnumerable<MetasysObject>> GetHostingAnEquipment(Guid) List network devices hosting an equipment instance IEnumerable<MetasysObject> GetHostingAnEquipment(Guid equipmentId) Parameters equipmentId Guid Returns IEnumerable<MetasysObject> GetHostingAnEquipmentAsync(Guid) List network devices hosting an equipment instance Task<IEnumerable<MetasysObject>> GetHostingAnEquipmentAsync(Guid equipmentId) Parameters equipmentId Guid Returns Task<IEnumerable<MetasysObject>> GetServingASpace(Guid) List network devices serving a space. IEnumerable<MetasysObject> GetServingASpace(Guid spaceId) Parameters spaceId Guid Returns IEnumerable<MetasysObject> GetServingASpaceAsync(Guid) List network devices serving a space. Task<IEnumerable<MetasysObject>> GetServingASpaceAsync(Guid spaceId) Parameters spaceId Guid Returns Task<IEnumerable<MetasysObject>> GetTypes() Retrieves the collection of all network device types. IEnumerable<MetasysObjectType> GetTypes() Returns IEnumerable<MetasysObjectType> Exceptions MetasysHttpException MetasysHttpParsingException GetTypesAsync() Retrieves the collection of all network device types. Task<IEnumerable<MetasysObjectType>> GetTypesAsync() Returns Task<IEnumerable<MetasysObjectType>> Exceptions MetasysHttpException MetasysHttpParsingException"
  },
  "api/JohnsonControls.Metasys.BasicServices.ISpaceService.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.ISpaceService.html",
    "title": "Interface ISpaceService | Metasys Services",
    "keywords": "Interface ISpaceService Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Defines method to provide space infos for endpoints of the Metasys Spaces API. public interface ISpaceService : IBasicService Inherited Members IBasicService.Version IBasicService.Culture IBasicService.GetObjectTypeEnumeration(string) IBasicService.Localize(string, CultureInfo) Methods FindById(ObjectId) Retrieves the specified space. MetasysObject FindById(ObjectId spaceId) Parameters spaceId ObjectId The identifier of the space. Returns MetasysObject The specified alarm details. FindByIdAsync(ObjectId) Retrieves the specified space. Task<MetasysObject> FindByIdAsync(ObjectId spaceId) Parameters spaceId ObjectId The identifier of the space. Returns Task<MetasysObject> The specified alarm details. Get(SpaceTypeEnum?, int?, int?, string) Retrieves a collection of spaces. IEnumerable<MetasysObject> Get(SpaceTypeEnum? type = null, int? page = null, int? pageSize = null, string sort = null) Parameters type SpaceTypeEnum? Optional, type ID (numeric for v2, v3 - enumset key string for v4). page int? Optional, the page numer of items to return (default = 1). pageSize int? Optional, the maximum number of items to return in the response (default = 100, max = 1000). sort string Optional, the criteria to use when sorting results (default = name). Returns IEnumerable<MetasysObject> Exceptions MetasysHttpException MetasysHttpParsingException Get(string, int?, int?, string) Retrieves a collection of spaces. IEnumerable<MetasysObject> Get(string type, int? page = null, int? pageSize = null, string sort = null) Parameters type string Optional, type ID (numeric for v2, v3 - enumset key string for v4). page int? Optional, the page numer of items to return (default = 1). pageSize int? Optional, the maximum number of items to return in the response (default = 100, max = 1000). sort string Optional, the criteria to use when sorting results (default = name). Returns IEnumerable<MetasysObject> GetAsync(SpaceTypeEnum?, int?, int?, string) Retrieves a collection of spaces. Task<IEnumerable<MetasysObject>> GetAsync(SpaceTypeEnum? type = null, int? page = null, int? pageSize = null, string sort = null) Parameters type SpaceTypeEnum? Optional, type ID (numeric for v2, v3 - enumset key string for v4). page int? Optional, the page numer of items to return (default = 1). pageSize int? Optional, the maximum number of items to return in the response (default = 100, max = 1000). sort string Optional, the criteria to use when sorting results (default = name). Returns Task<IEnumerable<MetasysObject>> Exceptions MetasysHttpException MetasysHttpParsingException GetAsync(string, int?, int?, string) Retrieves a collection of spaces. Task<IEnumerable<MetasysObject>> GetAsync(string type, int? page = null, int? pageSize = null, string sort = null) Parameters type string Optional, type ID (numeric for v2, v3 - enumset key string for v4). page int? Optional, the page numer of items to return (default = 1). pageSize int? Optional, the maximum number of items to return in the response (default = 100, max = 1000). sort string Optional, the criteria to use when sorting results (default = name). Returns Task<IEnumerable<MetasysObject>> GetChildren(ObjectId) Retrieves the collection of spaces that are located within the specified space. IEnumerable<MetasysObject> GetChildren(ObjectId spaceId) Parameters spaceId ObjectId The id of the parent space. Returns IEnumerable<MetasysObject> GetChildrenAsync(ObjectId) Retrieves the collection of spaces that are located within the specified space. Task<IEnumerable<MetasysObject>> GetChildrenAsync(ObjectId spaceId) Parameters spaceId ObjectId The id of the parent space. Returns Task<IEnumerable<MetasysObject>> GetServedByEquipment(ObjectId) Retrieves the collection of spaces served by the specified network device. IEnumerable<MetasysObject> GetServedByEquipment(ObjectId equipmentId) Parameters equipmentId ObjectId Returns IEnumerable<MetasysObject> GetServedByEquipmentAsync(ObjectId) Retrieves the collection of spaces served by the specified network device. Task<IEnumerable<MetasysObject>> GetServedByEquipmentAsync(ObjectId equipmentId) Parameters equipmentId ObjectId Returns Task<IEnumerable<MetasysObject>> GetServedByNetworkDevice(ObjectId) Retrieves the collection of spaces served by the specified network device. IEnumerable<MetasysObject> GetServedByNetworkDevice(ObjectId networkDeviceId) Parameters networkDeviceId ObjectId Returns IEnumerable<MetasysObject> GetServedByNetworkDeviceAsync(ObjectId) Retrieves the collection of spaces served by the specified network device. Task<IEnumerable<MetasysObject>> GetServedByNetworkDeviceAsync(ObjectId networkDeviceId) Parameters networkDeviceId ObjectId Returns Task<IEnumerable<MetasysObject>> GetTypes() Retrieves the collection of all spaces types. IEnumerable<MetasysObjectType> GetTypes() Returns IEnumerable<MetasysObjectType> GetTypesAsync() Retrieves the collection of all spaces types. Task<IEnumerable<MetasysObjectType>> GetTypesAsync() Returns Task<IEnumerable<MetasysObjectType>>"
  },
  "api/JohnsonControls.Metasys.BasicServices.IStreamService.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.IStreamService.html",
    "title": "Interface IStreamService | Metasys Services",
    "keywords": "Interface IStreamService Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Defines methods to provide Streams infos for endpoints of the Metasys Stream API. public interface IStreamService : IBasicService Inherited Members IBasicService.Version IBasicService.Culture IBasicService.GetObjectTypeEnumeration(string) IBasicService.Localize(string, CultureInfo) Properties AccessToken Access Token AccessToken AccessToken { get; set; } Property Value AccessToken ResultChannel Stream channel result ChannelReader<StreamMessage> ResultChannel { get; } Property Value ChannelReader<StreamMessage> Methods ConnectAsync() Connect method Task<bool> ConnectAsync() Returns Task<bool> Dispose() Dispose method void Dispose() GetAlarmEvents() Return the list of Alarm events List<StreamMessage> GetAlarmEvents() Returns List<StreamMessage> GetAuditEvents() Return the list of Audit events List<StreamMessage> GetAuditEvents() Returns List<StreamMessage> GetCOV() Return the first value of COV values StreamMessage GetCOV() Returns StreamMessage GetCOVList() Return the list of COV values List<StreamMessage> GetCOVList() Returns List<StreamMessage> GetRequestIds() Return the list of request Ids List<Guid> GetRequestIds() Returns List<Guid> KeepAlive(AccessToken) Call the related API (with a new Token) to keep the Stream Alive Task KeepAlive(AccessToken accessToken) Parameters accessToken AccessToken Returns Task LoadActivitySubscriptions(string) Add a subscription for an Activity according to the ActivityType void LoadActivitySubscriptions(string activityType) Parameters activityType string LoadCOVSubscriptions(IEnumerable<Guid>) Add a list of subscriptions for COV (presentValue). void LoadCOVSubscriptions(IEnumerable<Guid> ids) Parameters ids IEnumerable<Guid> LoadCOVSubscriptions(Guid) Add a subscription for a COV (presentValue). void LoadCOVSubscriptions(Guid id) Parameters id Guid StartCollectingAlarmsAsync(int) Start collecting the Alarm events from the stream Task StartCollectingAlarmsAsync(int maxNumber = 100) Parameters maxNumber int Returns Task StartCollectingAuditsAsync(int) Start collecting the Audit events from the stream Task StartCollectingAuditsAsync(int maxNumber = 100) Parameters maxNumber int Returns Task StartReadingCOV(Guid) Start reading a COV value from the stream void StartReadingCOV(Guid id) Parameters id Guid StartReadingCOVAsync(IEnumerable<Guid>) Start reading multiple COV values from the stream Task StartReadingCOVAsync(IEnumerable<Guid> ids) Parameters ids IEnumerable<Guid> Returns Task StartReadingCOVAsync(Guid) Start reading a COV value from the stream Task StartReadingCOVAsync(Guid id) Parameters id Guid Returns Task StopCollectingAlarms(Guid) Stop collecting Alarm events from the stream void StopCollectingAlarms(Guid requestId) Parameters requestId Guid StopCollectingAudits(Guid) Stop collecting Audit events from the stream void StopCollectingAudits(Guid requestId) Parameters requestId Guid StopReadingCOV(Guid) Stop reading COV Stream Value. void StopReadingCOV(Guid requestId) Parameters requestId Guid SubscribeAsync(Guid, string, string, Dictionary<string, string>, dynamic) Subscribe method Task<string> SubscribeAsync(Guid requestId, string method, string relativeUrl, Dictionary<string, string> query = null, dynamic body = null) Parameters requestId Guid method string relativeUrl string query Dictionary<string, string> body dynamic Returns Task<string> UnsubscribeAsync(Guid) Unsubscribe method Task UnsubscribeAsync(Guid requestId) Parameters requestId Guid Returns Task Events AlarmOccurred Event fired when an Alarm event occurs event EventHandler<StreamEventArgs> AlarmOccurred Event Type EventHandler<StreamEventArgs> AuditOccurred Event fired when an Audit event occurs event EventHandler<StreamEventArgs> AuditOccurred Event Type EventHandler<StreamEventArgs> COVValueChanged Event fired when a COV value changes event EventHandler<StreamEventArgs> COVValueChanged Event Type EventHandler<StreamEventArgs> HeartBeatOccurred Event fired when an HeartBeat occurs event EventHandler<EventSourceMessageEventArgs> HeartBeatOccurred Event Type EventHandler<EventSourceMessageEventArgs>"
  },
  "api/JohnsonControls.Metasys.BasicServices.ITrendService.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.ITrendService.html",
    "title": "Interface ITrendService | Metasys Services",
    "keywords": "Interface ITrendService Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll public interface ITrendService : IBasicService Inherited Members IBasicService.Version IBasicService.Culture IBasicService.GetObjectTypeEnumeration(string) IBasicService.Localize(string, CultureInfo) Methods GetNetDevSamples(ObjectId, AttributeEnumSet, TimeFilter) Retrieves available samples for the given network device attribute, filtered by startTime and endTime. PagedResult<Sample> GetNetDevSamples(ObjectId networkDeviceId, AttributeEnumSet attributeName, TimeFilter filter) Parameters networkDeviceId ObjectId The identifier of the network device. attributeName AttributeEnumSet The textual identifier of the attribute. filter TimeFilter The filter that specifies: startTime, endTime, page, pageSize, sort. Returns PagedResult<Sample> The list of samples. Remarks StartTime and EndTime are mandatory parameters. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException GetNetDevSamples(ObjectId, int, TimeFilter) Retrieves available samples for the given network device attribute, filtered by startTime and endTime. PagedResult<Sample> GetNetDevSamples(ObjectId networkDeviceId, int attributeId, TimeFilter filter) Parameters networkDeviceId ObjectId The identifier of the network device. attributeId int The numeric identifier of the attribute. filter TimeFilter The filter that specifies: startTime, endTime, page, pageSize, sort. Returns PagedResult<Sample> The list of samples. Remarks StartTime and EndTime are mandatory parameters. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException GetNetDevSamplesAsync(ObjectId, AttributeEnumSet, TimeFilter) Retrieves available samples for the given network device attribute, filtered by startTime and endTime. Task<PagedResult<Sample>> GetNetDevSamplesAsync(ObjectId networkDeviceId, AttributeEnumSet attributeName, TimeFilter filter) Parameters networkDeviceId ObjectId The identifier of the network device. attributeName AttributeEnumSet The textual identifier of the attribute. filter TimeFilter The filter that specifies: startTime, endTime, page, pageSize, sort. Returns Task<PagedResult<Sample>> The list of samples. Remarks StartTime and EndTime are mandatory parameters. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException GetNetDevSamplesAsync(ObjectId, int, TimeFilter) Retrieves available samples for the given network device attribute, filtered by startTime and endTime. Task<PagedResult<Sample>> GetNetDevSamplesAsync(ObjectId networkDeviceId, int attributeId, TimeFilter filter) Parameters networkDeviceId ObjectId The identifier of the network device. attributeId int The numeric identifier of the attribute. filter TimeFilter The filter that specifies: startTime, endTime, page, pageSize, sort. Returns Task<PagedResult<Sample>> The list of samples. Remarks StartTime and EndTime are mandatory parameters. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException GetNetDevTrendedAttributes(ObjectId) Get the list of trended attributes for the given Network Device. List<MetasysAttribute> GetNetDevTrendedAttributes(ObjectId id) Parameters id ObjectId The identifier of the network device. Returns List<MetasysAttribute> The list of trended attributes. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException GetNetDevTrendedAttributesAsync(ObjectId) Get the list of trended attributes for the given Network Device. Task<List<MetasysAttribute>> GetNetDevTrendedAttributesAsync(ObjectId id) Parameters id ObjectId The identifier of the network device. Returns Task<List<MetasysAttribute>> The list of trended attributes. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException GetSamples(ObjectId, AttributeEnumSet, TimeFilter) Retrieves available samples for the given object attribute, filtered by startTime and endTime. PagedResult<Sample> GetSamples(ObjectId objectId, AttributeEnumSet attributeName, TimeFilter filter) Parameters objectId ObjectId The identifier of the object. attributeName AttributeEnumSet The textual identifier of the attribute. filter TimeFilter The filter that specifies: startTime, endTime, page, pageSize, sort. Returns PagedResult<Sample> The list of samples. Remarks StartTime and EndTime are mandatory parameters. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException GetSamples(ObjectId, int, TimeFilter) Retrieves available samples for the given object attribute, filtered by startTime and endTime. PagedResult<Sample> GetSamples(ObjectId objectId, int attributeId, TimeFilter filter) Parameters objectId ObjectId The identifier of the object. attributeId int The numeric identifier of the attribute. filter TimeFilter The filter that specifies: startTime, endTime, page, pageSize, sort. Returns PagedResult<Sample> The list of samples. Remarks StartTime and EndTime are mandatory parameters. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException GetSamplesAsync(ObjectId, AttributeEnumSet, TimeFilter) Retrieves available samples for the given object attribute, filtered by startTime and endTime. Task<PagedResult<Sample>> GetSamplesAsync(ObjectId objectId, AttributeEnumSet attributeName, TimeFilter filter) Parameters objectId ObjectId The identifier of the object. attributeName AttributeEnumSet The textual identifier of the attribute. filter TimeFilter The filter that specifies: startTime, endTime, page, pageSize, sort. Returns Task<PagedResult<Sample>> The list of samples. Remarks StartTime and EndTime are mandatory parameters. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException GetSamplesAsync(ObjectId, int, TimeFilter) Retrieves available samples for the given object attribute, filtered by startTime and endTime. Task<PagedResult<Sample>> GetSamplesAsync(ObjectId objectId, int attributeId, TimeFilter filter) Parameters objectId ObjectId The identifier of the object. attributeId int The numeric identifier of the attribute. filter TimeFilter The filter that specifies: startTime, endTime, page, pageSize, sort. Returns Task<PagedResult<Sample>> The list of samples. Remarks StartTime and EndTime are mandatory parameters. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException GetTrendedAttributes(ObjectId) Get the list of trended attributes for the given object. List<MetasysAttribute> GetTrendedAttributes(ObjectId id) Parameters id ObjectId The identifier of the object. Returns List<MetasysAttribute> The list of trended attributes. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException GetTrendedAttributesAsync(ObjectId) Get the list of trended attributes for the given object. Task<List<MetasysAttribute>> GetTrendedAttributesAsync(ObjectId id) Parameters id ObjectId The identifier of the object. Returns Task<List<MetasysAttribute>> The list of trended attributes. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException"
  },
  "api/JohnsonControls.Metasys.BasicServices.LegacyData.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.LegacyData.html",
    "title": "Class LegacyData | Metasys Services",
    "keywords": "Class LegacyData Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll LegacyData is a structure that holds information about Legacy Information. public class LegacyData Inheritance object LegacyData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ClassLevel Class Level public string ClassLevel { get; set; } Property Value string Remarks This is available since Metasys API v3. ClassLevelUrl Class Level URL public string ClassLevelUrl { get; set; } Property Value string Remarks This is available only in Metasys API v2 and v1. Description Description public string Description { get; set; } Property Value string Remarks This is available since Metasys API v3. DescriptionUrl Description URL public string DescriptionUrl { get; set; } Property Value string Remarks This is available only in Metasys API v2 and v1. FullyQualifiedItemReference The fully Qualified Item Reference public string FullyQualifiedItemReference { get; set; } Property Value string ItemName Item Name public string ItemName { get; set; } Property Value string OriginApplication Origin Application public string OriginApplication { get; set; } Property Value string Remarks This is available since Metasys API v3. OriginApplicationUrl Origin Application URL public string OriginApplicationUrl { get; set; } Property Value string Remarks This is available only in Metasys API v2 and v1."
  },
  "api/JohnsonControls.Metasys.BasicServices.LegacyInfo.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.LegacyInfo.html",
    "title": "Class LegacyInfo | Metasys Services",
    "keywords": "Class LegacyInfo Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Legacy information for the audit. public class LegacyInfo Inheritance object LegacyInfo Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ClassLevel Class Level information of the audit. public string ClassLevel { get; set; } Property Value string Remarks Available since Metasys API v3. Description Description of the audit. public string Description { get; set; } Property Value string Remarks Available since Metasys API v3. FullyQualifiedItemReference FQR of the object related to the audit. public string FullyQualifiedItemReference { get; set; } Property Value string ItemName Name of the item related to the audit. public string ItemName { get; set; } Property Value string OriginApplication Origin Application of the audit. public string OriginApplication { get; set; } Property Value string Remarks Available since Metasys API v3. Methods Equals(object) Returns a value indicating whether this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/JohnsonControls.Metasys.BasicServices.LogFactory.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.LogFactory.html",
    "title": "Class LogFactory | Metasys Services",
    "keywords": "Class LogFactory Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Factory to provide log4net.ILog LogFactoryInstance. public sealed class LogFactory Inheritance object LogFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties Instance Gets the instance of LogFactory. public static LogFactory Instance { get; } Property Value LogFactory Methods CreateLogger(Type) Creates a logger for the specified source. public ILog CreateLogger(Type sourceType) Parameters sourceType Type The specified source type of logger Returns ILog An Instance of diagnostic logger"
  },
  "api/JohnsonControls.Metasys.BasicServices.LogInitializer.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.LogInitializer.html",
    "title": "Class LogInitializer | Metasys Services",
    "keywords": "Class LogInitializer Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Responsible for the Log initialization. public class LogInitializer Inheritance object LogInitializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LogInitializer(Type) Initialize Log4Net Logger using Factory. public LogInitializer(Type source) Parameters source Type Fields Logger Instance implementing ILogger. public readonly ILog Logger Field Value ILog"
  },
  "api/JohnsonControls.Metasys.BasicServices.ManageException.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.ManageException.html",
    "title": "Class ManageException | Metasys Services",
    "keywords": "Class ManageException Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Manage Http exceptions. public sealed class ManageException Inheritance object ManageException Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Methods ThrowHttpException(FlurlHttpException) Throws a Metasys Exception from a Flurl.Http exception. public static void ThrowHttpException(FlurlHttpException exception) Parameters exception FlurlHttpException The exception to catch."
  },
  "api/JohnsonControls.Metasys.BasicServices.Measurement.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.Measurement.html",
    "title": "Class Measurement | Metasys Services",
    "keywords": "Class Measurement Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll A measurement expressed in terms of value and unit. public class Measurement Inheritance object Measurement Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Units Fully qualified enumeration value for the unit. public string Units { get; set; } Property Value string Remarks This is available since Metasys API v3. UnitsUrl Route to the endpoind for the current unit enumset. public string UnitsUrl { get; set; } Property Value string Remarks This is available only in Metasys API v2 and v1. Value The value of measurement. public string Value { get; set; } Property Value string Methods Equals(object) Returns a value indicating whether this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/JohnsonControls.Metasys.BasicServices.MetasysAnnotation.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.MetasysAnnotation.html",
    "title": "Class MetasysAnnotation | Metasys Services",
    "keywords": "Class MetasysAnnotation Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Base class for a Metasys Annotation. public abstract class MetasysAnnotation Inheritance object MetasysAnnotation Derived AlarmAnnotation AuditAnnotation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Action Action of the annotation. [JsonProperty(Required = Required.Always)] public string Action { get; set; } Property Value string CreationTime Creation time of the annotation. [JsonProperty(Required = Required.Always)] public DateTime CreationTime { get; set; } Property Value DateTime Text Text of the annotation. [JsonProperty(Required = Required.Always)] public string Text { get; set; } Property Value string User User who made the annotation. [JsonProperty(Required = Required.Always)] public string User { get; set; } Property Value string"
  },
  "api/JohnsonControls.Metasys.BasicServices.MetasysAttribute.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.MetasysAttribute.html",
    "title": "Class MetasysAttribute | Metasys Services",
    "keywords": "Class MetasysAttribute Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll DTO for the attribute of an Object. public class MetasysAttribute Inheritance object MetasysAttribute Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Description The description of the attribute. public string Description { get; set; } Property Value string Id The integer ID of the attribute. public int Id { get; set; } Property Value int Methods Equals(object) Returns a value indicating whither this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() Return a pretty JSON string of the current object. public override string ToString() Returns string"
  },
  "api/JohnsonControls.Metasys.BasicServices.MetasysClient.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.MetasysClient.html",
    "title": "Class MetasysClient | Metasys Services",
    "keywords": "Class MetasysClient Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll An HTTP client for consuming the most commonly used endpoints of the Metasys API. public class MetasysClient : BasicServiceProvider, IMetasysClient, IBasicService Inheritance object ObjectUtil BasicServiceProvider MetasysClient Implements IMetasysClient IBasicService Inherited Members BasicServiceProvider.Client BasicServiceProvider.MinVersionSupported BasicServiceProvider.MaxVersionSupported BasicServiceProvider.Log BasicServiceProvider.LogClientErrors BasicServiceProvider.ToMetasysObject(IEnumerable<TreeObject>, ApiVersion, MetasysObjectTypeEnum?) BasicServiceProvider.ToMetasysObject(JToken, ApiVersion, MetasysObjectTypeEnum?) BasicServiceProvider.ToMetasysObject(List<JToken>, ApiVersion, MetasysObjectTypeEnum?) BasicServiceProvider.ToNetworkDevice(JToken, ApiVersion) BasicServiceProvider.ToNetworkDevice(List<JToken>, ApiVersion) BasicServiceProvider.GetObjectChildrenAsync(object, Dictionary<string, string>, int) BasicServiceProvider.GetResourceTypesAsync(string, string) BasicServiceProvider.GetType(JToken) BasicServiceProvider.GetObjectTypeEnumeration(string) BasicServiceProvider.Localize(string, CultureInfo) BasicServiceProvider.GetEnumValues(string) BasicServiceProvider.GetEnumValuesAsync(string) BasicServiceProvider.GetType(int, string, string) BasicServiceProvider.GetWithFullUrl(string) BasicServiceProvider.ParseObjectIdentifier(JToken) BasicServiceProvider.GetRequestAsync(string, Dictionary<string, string>, params object[]) BasicServiceProvider.GetPagedResultsAsync<T>(string, Dictionary<string, string>, params object[]) BasicServiceProvider.GetAllAvailablePagesAsync(string, Dictionary<string, string>, params string[]) BasicServiceProvider.ThrowHttpException(FlurlHttpException) BasicServiceProvider.ToDictionary(object) BasicServiceProvider.GetBatchRequestAsync(string, IEnumerable<ObjectId>, IEnumerable<string>, params string[]) BasicServiceProvider.PostBatchRequestAsync(string, IEnumerable<BatchRequestParam>, params string[]) BasicServiceProvider.PutBatchRequestAsync(string, IEnumerable<BatchRequestParam>, params string[]) BasicServiceProvider.PatchBatchRequestAsync(string, IEnumerable<BatchRequestParam>) BasicServiceProvider.CheckVersion(ApiVersion) ObjectUtil.GetJTokenValue(JToken, string) ObjectUtil.GetJTokenDate(JToken, string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MetasysClient(string, bool, ApiVersion, CultureInfo, bool, int) Creates a new MetasysClient. public MetasysClient(string hostname, bool ignoreCertificateErrors = false, ApiVersion version = ApiVersion.v2, CultureInfo cultureInfo = null, bool logClientErrors = true, int timeout = 300) Parameters hostname string The hostname of the Metasys server. ignoreCertificateErrors bool Use to bypass server certificate verification. version ApiVersion The server's Api version. cultureInfo CultureInfo Localization culture for Metasys enumeration translations. logClientErrors bool Set this flag to false to disable logging of client errors. timeout int Set the Timeout (in seconds) of the https request. Remarks Takes an optional boolean flag for ignoring certificate errors by bypassing certificate verification steps. Verification bypass is not recommended due to security concerns. If your Metasys server is missing a valid certificate it is recommended to add one to protect your private data from attacks over external networks. Takes an optional flag for the api version of your Metasys server. Takes an optional CultureInfo which is useful for formatting numbers and localization of strings. If not specified, the machine's current culture is used. Takes an optional flag for logging client errors. If not specified, it is enabled by default according to log4Net.config file. Fields AccessToken The current session token. protected AccessToken AccessToken Field Value AccessToken IdentifiersDictionary Stores retrieved Ids and serves as an in-memory caching layer. protected Dictionary<string, ObjectId> IdentifiersDictionary Field Value Dictionary<string, ObjectId> RefreshToken The flag used to control automatic session refreshing. protected bool RefreshToken Field Value bool Properties Activities Services for Activities. public IActivityService Activities { get; set; } Property Value IActivityService Alarms Services for Alarms. public IAlarmsService Alarms { get; set; } Property Value IAlarmsService Audits Services for Audits. public IAuditService Audits { get; set; } Property Value IAuditService Culture The current Culture Used for localization. public CultureInfo Culture { get; set; } Property Value CultureInfo Enumerations Services for Enumerations. public IEnumerationService Enumerations { get; set; } Property Value IEnumerationService Equipments Services for Equipments. public IEquipmentService Equipments { get; set; } Property Value IEquipmentService Hostname The hostname of Metasys API server. public string Hostname { get; set; } Property Value string IgnoreCertificateErrors An optional boolean flag for ignoring certificate errors by bypassing certificate verification steps. protected bool IgnoreCertificateErrors { get; set; } Property Value bool NetworkDevices Services for Network Devices. public INetworkDeviceService NetworkDevices { get; set; } Property Value INetworkDeviceService Spaces Services for Spaces. public ISpaceService Spaces { get; set; } Property Value ISpaceService Streams Services for Streams. public IStreamService Streams { get; set; } Property Value IStreamService Timeout The timeout of https request. public int Timeout { get; set; } Property Value int Trends Services for Trends and Samples. public ITrendService Trends { get; set; } Property Value ITrendService Version The Metasys server's Api version. public ApiVersion Version { get; set; } Property Value ApiVersion Methods GetAccessToken() Returns the current session access token. public AccessToken GetAccessToken() Returns AccessToken Current session's Access Token. GetCommandEnumeration(string) Attempts to get the enumeration key of a given en-US localized command. public string GetCommandEnumeration(string resource) Parameters resource string The en-US value for the localization resource. Returns string The enumeration key of the en-US command if found, original resource if not. Remarks The resource parameter must be the value of a Metasys commandIdEnumSet en-US value, otherwise no key will be found. GetCommands(ObjectId) Get all available commands given the id of the object. public IEnumerable<Command> GetCommands(ObjectId id) Parameters id ObjectId Returns IEnumerable<Command> List of Commands. GetCommandsAsync(ObjectId) Get all available commands given the id of the object. public Task<IEnumerable<Command>> GetCommandsAsync(ObjectId id) Parameters id ObjectId Returns Task<IEnumerable<Command>> List of Commands. GetEquipment() Retrieves a collection of equipment instances. public IEnumerable<MetasysObject> GetEquipment() Returns IEnumerable<MetasysObject> Remarks This method is deprecated. Please use Get(int?, int?) or GetAsync(int?, int?) instead. GetEquipmentAsync() Retrieves a collection of equipment instances. public Task<IEnumerable<MetasysObject>> GetEquipmentAsync() Returns Task<IEnumerable<MetasysObject>> Remarks This method is deprecated. Please use Get(int?, int?) or GetAsync(int?, int?) instead. GetEquipmentPoints(Guid, bool) Retrieves the collection of points that are defined by the specified equipment instance public IEnumerable<MetasysPoint> GetEquipmentPoints(Guid equipmentId, bool readAttributeValue = true) Parameters equipmentId Guid The Guid of the equipment. readAttributeValue bool Set to false if you would not read Points Attribute Value. Returns IEnumerable<MetasysPoint> Remarks This method is deprecated Please use GetPoints(ObjectId, bool) or GetPointsAsync(ObjectId, bool) instead. GetEquipmentPointsAsync(Guid, bool) Retrieves the collection of points that are defined by the specified equipment instance public Task<IEnumerable<MetasysPoint>> GetEquipmentPointsAsync(Guid equipmentId, bool readAttributeValue = true) Parameters equipmentId Guid The Guid of the equipment. readAttributeValue bool Set to false if you would not read Points Attribute Value. Returns Task<IEnumerable<MetasysPoint>> Remarks This method is deprecated Please use GetPoints(ObjectId, bool) or GetPointsAsync(ObjectId, bool) instead. GetNetworkDeviceTypes() Gets all available network device types. public IEnumerable<MetasysObjectType> GetNetworkDeviceTypes() Returns IEnumerable<MetasysObjectType> Exceptions MetasysHttpException MetasysHttpParsingException GetNetworkDeviceTypesAsync() Gets all available network device types. public Task<IEnumerable<MetasysObjectType>> GetNetworkDeviceTypesAsync() Returns Task<IEnumerable<MetasysObjectType>> Exceptions MetasysHttpException MetasysHttpParsingException GetNetworkDevices(NetworkDeviceTypeEnum) Gets all network devices. public IEnumerable<MetasysObject> GetNetworkDevices(NetworkDeviceTypeEnum networkDevicetype) Parameters networkDevicetype NetworkDeviceTypeEnum Network Device Type enum Returns IEnumerable<MetasysObject> Exceptions MetasysHttpException MetasysHttpParsingException GetNetworkDevices(string) Gets all network devices. public IEnumerable<MetasysObject> GetNetworkDevices(string type = null) Parameters type string Optional type number as a string Returns IEnumerable<MetasysObject> Remarks Note this method has been deprecated. Please use GetNetworkDevices(NetworkDeviceTypeEnum) or GetNetworkDevicesAsync(NetworkDeviceTypeEnum) instead. Exceptions MetasysHttpException MetasysHttpParsingException GetNetworkDevicesAsync(NetworkDeviceTypeEnum) Gets all network devices. public Task<IEnumerable<MetasysObject>> GetNetworkDevicesAsync(NetworkDeviceTypeEnum networkDevicetype) Parameters networkDevicetype NetworkDeviceTypeEnum Network Device Type enum Returns Task<IEnumerable<MetasysObject>> Exceptions MetasysHttpException MetasysHttpParsingException GetNetworkDevicesAsync(string) Gets all network devices. public Task<IEnumerable<MetasysObject>> GetNetworkDevicesAsync(string type = null) Parameters type string Optional type number as a string Returns Task<IEnumerable<MetasysObject>> Remarks Note this method has been deprecated. Please use GetNetworkDevices(NetworkDeviceTypeEnum) or GetNetworkDevicesAsync(NetworkDeviceTypeEnum) instead. Exceptions MetasysHttpException MetasysHttpParsingException GetObjectIdentifier(string) Given the Item Reference of an object, returns the object identifier. public ObjectId GetObjectIdentifier(string itemReference) Parameters itemReference string Returns ObjectId An ObjectId for the specified object. Remarks The itemReference will be automatically URL encoded. Exceptions MetasysHttpException GetObjectIdentifierAsync(string) Given the Item Reference of an object, returns the object identifier. public Task<ObjectId> GetObjectIdentifierAsync(string itemReference) Parameters itemReference string Returns Task<ObjectId> An ObjectId for the specified object. Remarks The itemReference will be automatically URL encoded. Exceptions MetasysHttpException GetObjects(ObjectId, int, bool, bool) Gets all child objects given a parent id. Level indicates how deep to retrieve objects. public IEnumerable<MetasysObject> GetObjects(ObjectId id, int levels = 1, bool includeInternalObjects = false, bool includeExtensions = false) Parameters id ObjectId The ID of the parent object. levels int The depth of the children to retrieve. includeInternalObjects bool Set it to true to see also internal objects that are not displayed in the Metasys tree. includeExtensions bool Set it to true to get also the extensions of the object. Returns IEnumerable<MetasysObject> Remarks A level of 1 only retrieves immediate children of the parent object. Exceptions MetasysHttpException MetasysHttpParsingException GetObjects(ObjectId, string) Gets all child objects given a parent id and object type. public IEnumerable<MetasysObject> GetObjects(ObjectId id, string objectType) Parameters id ObjectId objectType string The object type enum set. Returns IEnumerable<MetasysObject> Exceptions MetasysHttpException MetasysHttpParsingException GetObjectsAsync(ObjectId, int, bool, bool) Gets all child objects given a parent id. Level indicates how deep to retrieve objects. public Task<IEnumerable<MetasysObject>> GetObjectsAsync(ObjectId id, int levels, bool includeInternalObjects = false, bool includeExtensions = false) Parameters id ObjectId The ID of the parent object. levels int The depth of the children to retrieve. includeInternalObjects bool Set it to true to see also internal objects that are not displayed in the Metasys tree. includeExtensions bool Set it to true to get also the extensions of the object. Returns Task<IEnumerable<MetasysObject>> Remarks A level of 1 only retrieves immediate children of the parent object. Exceptions MetasysHttpException MetasysHttpParsingException GetObjectsAsync(ObjectId, string) Gets all child objects given a parent id and object type. public Task<IEnumerable<MetasysObject>> GetObjectsAsync(ObjectId objectId, string objectType) Parameters objectId ObjectId objectType string The object type enum set. Returns Task<IEnumerable<MetasysObject>> Exceptions MetasysHttpException MetasysHttpParsingException GetServerTime() Returns the current server time in UTC format. public DateTime GetServerTime() Returns DateTime The current Server time. Exceptions MetasysHttpException Occurs when it's not possible to read date time from HTTP response. GetServerTimeAsync() Returns the current server time in UTC format. public Task<DateTime> GetServerTimeAsync() Returns Task<DateTime> The current Server time. Exceptions MetasysHttpException Occurs when it's not possible to read date time from HTTP response. GetSpaceChildren(Guid) Retrieves the collection of spaces that are located within the specified space. public IEnumerable<MetasysObject> GetSpaceChildren(Guid spaceId) Parameters spaceId Guid The GUID of the parent space. Returns IEnumerable<MetasysObject> Remarks This method is deprecated. Please use GetChildren(ObjectId) or GetChildrenAsync(ObjectId) instead. GetSpaceChildrenAsync(Guid) Retrieves the collection of spaces that are located within the specified space. public Task<IEnumerable<MetasysObject>> GetSpaceChildrenAsync(Guid spaceId) Parameters spaceId Guid The GUID of the parent space. Returns Task<IEnumerable<MetasysObject>> Remarks This method is deprecated. Please use GetChildren(ObjectId) or GetChildrenAsync(ObjectId) instead. GetSpaceEquipment(Guid) Retrieves the collection of equipment that serve the specified space. public IEnumerable<MetasysObject> GetSpaceEquipment(Guid spaceId) Parameters spaceId Guid Returns IEnumerable<MetasysObject> Remarks This method is deprecated Please use GetServingASpace(ObjectId) or GetServingASpaceAsync(ObjectId) instead. GetSpaceEquipmentAsync(Guid) Retrieves the collection of equipment that serve the specified space. public Task<IEnumerable<MetasysObject>> GetSpaceEquipmentAsync(Guid spaceId) Parameters spaceId Guid Returns Task<IEnumerable<MetasysObject>> Remarks This method is deprecated Please use GetServingASpace(ObjectId) or GetServingASpaceAsync(ObjectId) instead. GetSpaceTypes() Retrieves the collection of all spaces types. This method is deprecated. Please use GetTypes() or GetTypesAsync() instead. public IEnumerable<MetasysObjectType> GetSpaceTypes() Returns IEnumerable<MetasysObjectType> GetSpaceTypesAsync() Retrieves the collection of all spaces types. This method is deprecated. Please use GetTypes() or GetTypesAsync() instead. public Task<IEnumerable<MetasysObjectType>> GetSpaceTypesAsync() Returns Task<IEnumerable<MetasysObjectType>> GetSpaces(SpaceTypeEnum?) Retrieves a collection of spaces. public IEnumerable<MetasysObject> GetSpaces(SpaceTypeEnum? type = null) Parameters type SpaceTypeEnum? Optional type ID belonging to SpaceTypeEnum. Returns IEnumerable<MetasysObject> Remarks This method is deprecated Please use Get(SpaceTypeEnum?, int?, int?, string) or GetAsync(SpaceTypeEnum?, int?, int?, string) instead. Exceptions MetasysHttpException MetasysHttpParsingException GetSpacesAsync(SpaceTypeEnum?) Retrieves a collection of spaces. public Task<IEnumerable<MetasysObject>> GetSpacesAsync(SpaceTypeEnum? type = null) Parameters type SpaceTypeEnum? Optional type ID belonging to SpaceTypeEnum. Returns Task<IEnumerable<MetasysObject>> Remarks This method is deprecated Please use Get(SpaceTypeEnum?, int?, int?, string) or GetAsync(SpaceTypeEnum?, int?, int?, string) instead. Exceptions MetasysHttpException MetasysHttpParsingException InitFlurlClient(string) Initialize the HTTP client with a base URL. protected void InitFlurlClient(string hostname) Parameters hostname string ReadProperty(ObjectId, string) Read one attribute value given the id of the object. public Variant ReadProperty(ObjectId id, string attributeName) Parameters id ObjectId attributeName string Returns Variant Variant if the attribute exists, null if does not exist. Exceptions MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysPropertyException ReadPropertyAsync(ObjectId, string) Read one attribute value given the id of the object. public Task<Variant> ReadPropertyAsync(ObjectId id, string attributeName) Parameters id ObjectId attributeName string Returns Task<Variant> Variant if the attribute exists, null if does not exist. Exceptions MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysPropertyException ReadPropertyMultiple(IEnumerable<ObjectId>, IEnumerable<string>) Read many attribute values given the ids of the objects. public IEnumerable<VariantMultiple> ReadPropertyMultiple(IEnumerable<ObjectId> ids, IEnumerable<string> attributeNames) Parameters ids IEnumerable<ObjectId> attributeNames IEnumerable<string> Returns IEnumerable<VariantMultiple> A list of VariantMultiple with all the specified attributes (if existing). Exceptions MetasysHttpException MetasysPropertyException ReadPropertyMultiple(IEnumerable<Guid>, IEnumerable<string>) Read many attribute values given the Guids of the objects. [Obsolete(\"Use ReadPropertyMultiple(IEnumerable<ObjectId>, IEnumerable<string>) instead.\")] public IEnumerable<VariantMultiple> ReadPropertyMultiple(IEnumerable<Guid> ids, IEnumerable<string> attributeNames) Parameters ids IEnumerable<Guid> attributeNames IEnumerable<string> Returns IEnumerable<VariantMultiple> A list of VariantMultiple with all the specified attributes (if existing). Remarks This method is deprecated. Please use ReadPropertyMultiple(IEnumerable<ObjectId>, IEnumerable<string>) or ReadPropertyMultipleAsync(IEnumerable<ObjectId>, IEnumerable<string>) instead. Exceptions MetasysHttpException MetasysPropertyException ReadPropertyMultipleAsync(IEnumerable<ObjectId>, IEnumerable<string>) Read many attribute values given the ids of the objects. public Task<IEnumerable<VariantMultiple>> ReadPropertyMultipleAsync(IEnumerable<ObjectId> ids, IEnumerable<string> attributeNames) Parameters ids IEnumerable<ObjectId> attributeNames IEnumerable<string> Returns Task<IEnumerable<VariantMultiple>> A list of VariantMultiple with all the specified attributes (if existing). Exceptions MetasysHttpException MetasysPropertyException ReadPropertyMultipleAsync(IEnumerable<Guid>, IEnumerable<string>) Read many attribute values given the Guids of the objects. [Obsolete(\"Use ReadPropertyMultipleAsync(IEnumerable<ObjectId>, IEnumerable<string>) instead.\")] public Task<IEnumerable<VariantMultiple>> ReadPropertyMultipleAsync(IEnumerable<Guid> ids, IEnumerable<string> attributeNames) Parameters ids IEnumerable<Guid> attributeNames IEnumerable<string> Returns Task<IEnumerable<VariantMultiple>> A list of VariantMultiple with all the specified attributes (if existing). Remarks This method is deprecated. Please use ReadPropertyMultiple(IEnumerable<ObjectId>, IEnumerable<string>) or ReadPropertyMultipleAsync(IEnumerable<ObjectId>, IEnumerable<string>) instead. Exceptions MetasysHttpException MetasysPropertyException Refresh() Requests a new access token from the server before the current token expires. public AccessToken Refresh() Returns AccessToken Access Token. Exceptions MetasysHttpException MetasysTokenException RefreshAsync() Requests a new access token from the server before the current token expires. public Task<AccessToken> RefreshAsync() Returns Task<AccessToken> Access Token. Exceptions MetasysHttpException MetasysTokenException SendAsync(HttpRequestMessage, HttpCompletionOption, CancellationToken) Send an HTTP request as an asynchronous operation. This method currently only supports 1 value per header rather than multiple. In a future revision, this is planned to be addressed. public Task<HttpResponseMessage> SendAsync(HttpRequestMessage requestMessage, HttpCompletionOption completionOption = HttpCompletionOption.ResponseContentRead, CancellationToken cancellationToken = default) Parameters requestMessage HttpRequestMessage completionOption HttpCompletionOption When the operation should complete (as soon as a response is available or after reading the whole response content). cancellationToken CancellationToken The cancellation token to cancel operation. Returns Task<HttpResponseMessage> The task object representing the asynchronous operation. SendCommand(ObjectId, string, IEnumerable<object>) Send a command to an object. public void SendCommand(ObjectId id, string command, IEnumerable<object> values = null) Parameters id ObjectId command string values IEnumerable<object> Exceptions MetasysHttpException SendCommandAsync(ObjectId, string, IEnumerable<object>) Send a command to an object. public Task SendCommandAsync(ObjectId id, string command, IEnumerable<object> values = null) Parameters id ObjectId command string values IEnumerable<object> Returns Task Exceptions MetasysHttpException TryLogin(string, bool) Attempts to login to the given host using Credential Manager and retrieve an access token. public virtual AccessToken TryLogin(string credManTarget, bool refresh = true) Parameters credManTarget string The Credential Manager target where to pick the credentials. refresh bool Flag to set automatic access token refreshing to keep session active. Returns AccessToken Remarks This method can be overridden by extended class with other Credential Manager implementations. TryLogin(string, string, bool) Attempts to login to the given host and retrieve an access token. public AccessToken TryLogin(string username, string password, bool refresh = true) Parameters username string password string refresh bool Flag to set automatic access token refreshing to keep session active. Returns AccessToken Access Token. Exceptions MetasysHttpException MetasysTokenException TryLoginAsync(string, bool) Attempts to login to the given host using Credential Manager and retrieve an access token. public virtual Task<AccessToken> TryLoginAsync(string credManTarget, bool refresh = true) Parameters credManTarget string The Credential Manager target where to pick the credentials. refresh bool Flag to set automatic access token refreshing to keep session active. Returns Task<AccessToken> Remarks This method can be overridden by extended class with other Credential Manager implementations. TryLoginAsync(string, string, bool) Attempts to login to the given host and retrieve an access token. public Task<AccessToken> TryLoginAsync(string username, string password, bool refresh = true) Parameters username string password string refresh bool Flag to set automatic access token refreshing to keep session active. Returns Task<AccessToken> Access Token. Exceptions MetasysHttpException MetasysTokenException WriteProperty(ObjectId, string, object) Write a single attribute given the id of the object. public void WriteProperty(ObjectId id, string attributeName, object newValue) Parameters id ObjectId The id of the attribute attributeName string The name of the attribute newValue object The new value of the attribute Exceptions MetasysHttpException WritePropertyAsync(ObjectId, string, object) Write a single attribute given the id of the object. public Task WritePropertyAsync(ObjectId id, string attributeName, object newValue) Parameters id ObjectId The id of the attribute attributeName string The name of the attribute newValue object The new value of the attribute Returns Task Exceptions MetasysHttpException WritePropertyMultiple(IEnumerable<ObjectId>, Dictionary<string, object>) Write to many attribute values given the ids of the objects. public void WritePropertyMultiple(IEnumerable<ObjectId> ids, Dictionary<string, object> attributeValues) Parameters ids IEnumerable<ObjectId> attributeValues Dictionary<string, object> The (attribute, value) pairs. Exceptions MetasysHttpException WritePropertyMultiple(IEnumerable<ObjectId>, IEnumerable<(string Attribute, object Value)>) Write to many attribute values given the ids of the objects. public void WritePropertyMultiple(IEnumerable<ObjectId> ids, IEnumerable<(string Attribute, object Value)> attributeValues) Parameters ids IEnumerable<ObjectId> attributeValues IEnumerable<(string Attribute, object Value)> The (attribute, value) pairs. Exceptions MetasysHttpException WritePropertyMultiple(IEnumerable<Guid>, Dictionary<string, object>) Write to many attribute values given the Guids of the objects. [Obsolete(\"Use WritePropertyMultiple(IEnumerable<ObjectId>, Dictionary<string, object>) instead.\")] public void WritePropertyMultiple(IEnumerable<Guid> ids, Dictionary<string, object> attributeValues) Parameters ids IEnumerable<Guid> attributeValues Dictionary<string, object> The (attribute, value) pairs. Remarks This method is deprecated. Please use one of the following instead: WritePropertyMultiple(IEnumerable<ObjectId>, Dictionary<string, object>), WritePropertyMultiple(IEnumerable<ObjectId>, IEnumerable<(string Attribute, object Value)>), WritePropertyMultipleAsync(IEnumerable<ObjectId>, Dictionary<string, object>), or WritePropertyMultipleAsync(IEnumerable<ObjectId>, IEnumerable<(string Attribute, object Value)>). Exceptions MetasysHttpException WritePropertyMultiple(IEnumerable<Guid>, IEnumerable<(string Attribute, object Value)>) Write to many attribute values given the Guids of the objects. [Obsolete(\"Use WritePropertyMultiple(IEnumerable<ObjectId> ids, IEnumerable<ValueTuple<string, Value>>) instead.\")] public void WritePropertyMultiple(IEnumerable<Guid> ids, IEnumerable<(string Attribute, object Value)> attributeValues) Parameters ids IEnumerable<Guid> attributeValues IEnumerable<(string Attribute, object Value)> The (attribute, value) pairs. Remarks This method is deprecated. Please use one of the following instead: WritePropertyMultiple(IEnumerable<ObjectId>, Dictionary<string, object>), WritePropertyMultiple(IEnumerable<ObjectId>, IEnumerable<(string Attribute, object Value)>), WritePropertyMultipleAsync(IEnumerable<ObjectId>, Dictionary<string, object>), or WritePropertyMultipleAsync(IEnumerable<ObjectId>, IEnumerable<(string Attribute, object Value)>). Exceptions MetasysHttpException WritePropertyMultipleAsync(IEnumerable<ObjectId>, Dictionary<string, object>) Write to many attribute values given the ids of the objects. public Task WritePropertyMultipleAsync(IEnumerable<ObjectId> ids, Dictionary<string, object> attributeValues) Parameters ids IEnumerable<ObjectId> attributeValues Dictionary<string, object> The (attribute, value) pairs. Returns Task Exceptions MetasysHttpException WritePropertyMultipleAsync(IEnumerable<ObjectId>, IEnumerable<(string Attribute, object Value)>) Write asynchronously to many attribute values given the ids of the objects. public Task WritePropertyMultipleAsync(IEnumerable<ObjectId> ids, IEnumerable<(string Attribute, object Value)> attributeValues) Parameters ids IEnumerable<ObjectId> attributeValues IEnumerable<(string Attribute, object Value)> Returns Task WritePropertyMultipleAsync(IEnumerable<Guid>, Dictionary<string, object>) Write to many attribute values given the Guids of the objects. [Obsolete(\"Use WritePropertyMultipleAsync(IEnumerable<ObjectId>, Dictionary<string, object>) instead.\")] public Task WritePropertyMultipleAsync(IEnumerable<Guid> ids, Dictionary<string, object> attributeValues) Parameters ids IEnumerable<Guid> attributeValues Dictionary<string, object> The (attribute, value) pairs. Returns Task Remarks This method is deprecated. Please use one of the following instead: WritePropertyMultiple(IEnumerable<ObjectId>, Dictionary<string, object>), WritePropertyMultiple(IEnumerable<ObjectId>, IEnumerable<(string Attribute, object Value)>), WritePropertyMultipleAsync(IEnumerable<ObjectId>, Dictionary<string, object>), or WritePropertyMultipleAsync(IEnumerable<ObjectId>, IEnumerable<(string Attribute, object Value)>). Exceptions MetasysHttpException WritePropertyMultipleAsync(IEnumerable<Guid>, IEnumerable<(string Attribute, object Value)>) Write asynchronously to many attribute values given the Guids of the objects. [Obsolete(\"Use WritePropertyMultipleAsync(IEnumerable<ObjectId> ids, IEnumerable<ValueTuple<string, Value>>) instead.\")] public Task WritePropertyMultipleAsync(IEnumerable<Guid> ids, IEnumerable<(string Attribute, object Value)> attributeValues) Parameters ids IEnumerable<Guid> attributeValues IEnumerable<(string Attribute, object Value)> Returns Task Remarks This method is deprecated. Please use WritePropertyMultipleAsync(IEnumerable<ObjectId>, Dictionary<string, object>) or WritePropertyMultipleAsync(IEnumerable<ObjectId>, IEnumerable<(string Attribute, object Value)>) instead."
  },
  "api/JohnsonControls.Metasys.BasicServices.MetasysCommandException.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.MetasysCommandException.html",
    "title": "Class MetasysCommandException | Metasys Services",
    "keywords": "Class MetasysCommandException Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll An exception that is thrown when a MetasysObject could not be created from a Http response. [Serializable] public class MetasysCommandException : MetasysHttpParsingException, ISerializable Inheritance object Exception MetasysException MetasysHttpException MetasysHttpParsingException MetasysCommandException Implements ISerializable Inherited Members MetasysHttpException.Call MetasysHttpException.ResponseBody Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MetasysCommandException(string, Exception) Initializes a new instance of the MetasysObjectException. public MetasysCommandException(string response, Exception inner) Parameters response string The Http response. inner Exception The inner exception."
  },
  "api/JohnsonControls.Metasys.BasicServices.MetasysEnumValue.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.MetasysEnumValue.html",
    "title": "Struct MetasysEnumValue | Metasys Services",
    "keywords": "Struct MetasysEnumValue Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll MetasysEnumValue is a structure that hold information about a Metasys Enumeration values public struct MetasysEnumValue Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Key Key that identifies the Enumeration Value. public readonly string Key { get; } Property Value string Name Name of the Enumeration Value. public readonly string Name { get; } Property Value string Value Enumeration Value. public readonly int Value { get; } Property Value int Methods Equals(object) Returns a value indicating whither this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() Return a pretty JSON string of the current object. public override string ToString() Returns string"
  },
  "api/JohnsonControls.Metasys.BasicServices.MetasysEnumeration.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.MetasysEnumeration.html",
    "title": "Struct MetasysEnumeration | Metasys Services",
    "keywords": "Struct MetasysEnumeration Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll MetasysEnumeration is a structure that hold information about a Metasys Enumeration definition public struct MetasysEnumeration Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties IsMultiState Specify if the Enumeration is related to a multistate object. public readonly bool IsMultiState { get; } Property Value bool IsTwoState Specify if the Enumeration is related to a binary object. public readonly bool IsTwoState { get; } Property Value bool Key Key that identifies the Enumeration set. public readonly string Key { get; } Property Value string Name Name of the Enumeration set. public readonly string Name { get; } Property Value string NumberOfStates Specify the number of states when the Enumeration is related to a multistate object. public readonly int NumberOfStates { get; } Property Value int Methods Equals(object) Returns a value indicating whither this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() Return a pretty JSON string of the current object. public override string ToString() Returns string"
  },
  "api/JohnsonControls.Metasys.BasicServices.MetasysException.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.MetasysException.html",
    "title": "Class MetasysException | Metasys Services",
    "keywords": "Class MetasysException Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll A general exception that is thrown when any type of Metasys Exception occurs. [Serializable] public class MetasysException : Exception, ISerializable Inheritance object Exception MetasysException Implements ISerializable Derived MetasysHttpException MetasysUnsupportedApiVersion Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MetasysException(Exception) Initializes a new instance of the MetasysException class from another expection. public MetasysException(Exception e) Parameters e Exception The Exception. MetasysException(string) Initializes a new instance of the MetasysException class with a specified message. public MetasysException(string message) Parameters message string The reason the exception was thrown. MetasysException(string, Exception) Initializes a new instance of the MetasysException class with a specified message. public MetasysException(string message, Exception inner) Parameters message string The reason the exception was thrown. inner Exception The inner exception."
  },
  "api/JohnsonControls.Metasys.BasicServices.MetasysGuidException.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.MetasysGuidException.html",
    "title": "Class MetasysGuidException | Metasys Services",
    "keywords": "Class MetasysGuidException Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll An exception that is thrown when a Guid could not be created from a Http response. [Serializable] public class MetasysGuidException : MetasysHttpParsingException, ISerializable Inheritance object Exception MetasysException MetasysHttpException MetasysHttpParsingException MetasysGuidException Implements ISerializable Inherited Members MetasysHttpException.Call MetasysHttpException.ResponseBody Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MetasysGuidException(string, Exception) Initializes a new instance of the MetasysGuidException with the given argument for the Guid. public MetasysGuidException(string response, Exception inner) Parameters response string The argument passed to the Guid constructor. inner Exception The inner exception."
  },
  "api/JohnsonControls.Metasys.BasicServices.MetasysHttpException.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.MetasysHttpException.html",
    "title": "Class MetasysHttpException | Metasys Services",
    "keywords": "Class MetasysHttpException Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll An exception that is thrown when a Flurl.Http exception occurs. [Serializable] public class MetasysHttpException : MetasysException, ISerializable Inheritance object Exception MetasysException MetasysHttpException Implements ISerializable Derived MetasysHttpNotFoundException MetasysHttpParsingException MetasysHttpTimeoutException Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MetasysHttpException(FlurlHttpException) Initializes a new instance of the MetasysHttpException class using the Flurl.Http.FlurlHttpException class. public MetasysHttpException(FlurlHttpException e) Parameters e FlurlHttpException The Flurl.Http exception. MetasysHttpException(string, string) Initializes a new instance of the MetasysHttpException class without an HttpCall. public MetasysHttpException(string message, string response) Parameters message string response string MetasysHttpException(string, string, Exception) Initializes a new instance of the MetasysHttpException class without an HttpCall. public MetasysHttpException(string message, string response, Exception inner) Parameters message string response string inner Exception The inner exception. Properties Call An object containing details about the failed Http call. public HttpCall Call { get; } Property Value HttpCall ResponseBody The string representation of the Http response body from the failed call if any. public string ResponseBody { get; } Property Value string"
  },
  "api/JohnsonControls.Metasys.BasicServices.MetasysHttpNotFoundException.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.MetasysHttpNotFoundException.html",
    "title": "Class MetasysHttpNotFoundException | Metasys Services",
    "keywords": "Class MetasysHttpNotFoundException Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll An exception that is thrown when a resource is not found [Serializable] public class MetasysHttpNotFoundException : MetasysHttpException, ISerializable Inheritance object Exception MetasysException MetasysHttpException MetasysHttpNotFoundException Implements ISerializable Inherited Members MetasysHttpException.Call MetasysHttpException.ResponseBody Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MetasysHttpNotFoundException(FlurlHttpException) Initializes a new instance of the MetasysNotFoundException public MetasysHttpNotFoundException(FlurlHttpException inner) Parameters inner FlurlHttpException"
  },
  "api/JohnsonControls.Metasys.BasicServices.MetasysHttpParsingException.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.MetasysHttpParsingException.html",
    "title": "Class MetasysHttpParsingException | Metasys Services",
    "keywords": "Class MetasysHttpParsingException Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll An exception that is thrown when a Flurl.Http.FlurlHttpParsingException exception occurs. [Serializable] public class MetasysHttpParsingException : MetasysHttpException, ISerializable Inheritance object Exception MetasysException MetasysHttpException MetasysHttpParsingException Implements ISerializable Derived MetasysCommandException MetasysGuidException MetasysObjectException MetasysObjectTypeException MetasysPropertyException MetasysTokenException Inherited Members MetasysHttpException.Call MetasysHttpException.ResponseBody Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MetasysHttpParsingException(FlurlParsingException) Initializes a new instance of the MetasysHttpParsingException class using the Flurl.Http.FlurlParsingException class. public MetasysHttpParsingException(FlurlParsingException e) Parameters e FlurlParsingException The Flurl.Http exception. MetasysHttpParsingException(string) Initializes a new generic instance of the MetasysHttpParsingException class. public MetasysHttpParsingException(string response) Parameters response string The Http response. MetasysHttpParsingException(string, Exception) Initializes a new instance of the MetasysHttpParsingException class with an inner exception. public MetasysHttpParsingException(string response, Exception inner) Parameters response string The Http response. inner Exception The inner exception. MetasysHttpParsingException(string, string, Exception) Initializes a new instance of the MetasysHttpParsingException class with a message and inner exception. public MetasysHttpParsingException(string message, string response, Exception inner) Parameters message string The original exception message. response string The Http response. inner Exception The inner exception."
  },
  "api/JohnsonControls.Metasys.BasicServices.MetasysHttpTimeoutException.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.MetasysHttpTimeoutException.html",
    "title": "Class MetasysHttpTimeoutException | Metasys Services",
    "keywords": "Class MetasysHttpTimeoutException Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll An exception that is thrown when a Flurl.Http.FlurlHttpTimeoutException exception occurs. [Serializable] public class MetasysHttpTimeoutException : MetasysHttpException, ISerializable Inheritance object Exception MetasysException MetasysHttpException MetasysHttpTimeoutException Implements ISerializable Inherited Members MetasysHttpException.Call MetasysHttpException.ResponseBody Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MetasysHttpTimeoutException(FlurlHttpTimeoutException) Initializes a new instance of the MetasysHttpTimeoutException class using the Flurl.Http.FlurlHttpTimeoutException class. public MetasysHttpTimeoutException(FlurlHttpTimeoutException e) Parameters e FlurlHttpTimeoutException The Flurl.Http exception."
  },
  "api/JohnsonControls.Metasys.BasicServices.MetasysObject.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.MetasysObject.html",
    "title": "Class MetasysObject | Metasys Services",
    "keywords": "Class MetasysObject Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll MetasysObject is a structure that holds information about a Metasys object. public class MetasysObject : ObjectUtil Inheritance object ObjectUtil MetasysObject Inherited Members ObjectUtil.GetJTokenValue(JToken, string) ObjectUtil.GetJTokenDate(JToken, string) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MetasysObject() Default constructor for Metasys Object. public MetasysObject() Properties Category The specific category of the Metasys Object Type. public string Category { get; set; } Property Value string CategoryUrl Reference of the Metasys Object uthorization Category. public string CategoryUrl { get; set; } Property Value string Children The direct children objects of the Metasys object. public IEnumerable<MetasysObject> Children { get; set; } Property Value IEnumerable<MetasysObject> ChildrenCount The number of direct children objects. public int ChildrenCount { get; set; } Property Value int The number of children or -1 if there is no children data. Classification Classification of the object public string Classification { get; set; } Property Value string Description The description of the Metasys object. public string Description { get; set; } Property Value string EquipmentDefinitionName Name of the Equipment Definition mapped with the Equipment Instance public string EquipmentDefinitionName { get; set; } Property Value string Id The id of the Metasys object. [JsonProperty(Required = Required.Always)] public ObjectId Id { get; set; } Property Value ObjectId ItemReference The item reference of the Metasys object. [JsonProperty(Required = Required.Always)] public string ItemReference { get; set; } Property Value string Name The name of the Metasys object. [JsonProperty(Required = Required.Always)] public string Name { get; set; } Property Value string ObjectCategory Metasys Object Authorization Category. public string ObjectCategory { get; set; } Property Value string ObjectType The resource type detail reference. public string ObjectType { get; set; } Property Value string Remarks This is available since Metasys API v3. Type The actual Metasys Object type. public MetasysObjectTypeEnum? Type { get; set; } Property Value MetasysObjectTypeEnum? TypeUrl The resource type detail reference. public string TypeUrl { get; set; } Property Value string Remarks This is available only on Metasys API v2 and v1. Methods Equals(object) Returns a value indicating whither this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() Return a pretty JSON string of the current object. public override string ToString() Returns string"
  },
  "api/JohnsonControls.Metasys.BasicServices.MetasysObjectCollectionExtension.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.MetasysObjectCollectionExtension.html",
    "title": "Class MetasysObjectCollectionExtension | Metasys Services",
    "keywords": "Class MetasysObjectCollectionExtension Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll A helper to work with Metasys Objects collections. public static class MetasysObjectCollectionExtension Inheritance object MetasysObjectCollectionExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FindById(IEnumerable<MetasysObject>, ObjectId) Returns the MetasysObject in the collection with the given ID. public static MetasysObject FindById(this IEnumerable<MetasysObject> source, ObjectId id) Parameters source IEnumerable<MetasysObject> id ObjectId The Id of the Metasys Object. Returns MetasysObject FindByName(IEnumerable<MetasysObject>, string) Returns the first MetasysObject in the collection with the given name. public static MetasysObject FindByName(this IEnumerable<MetasysObject> source, string name) Parameters source IEnumerable<MetasysObject> name string The name of the Metasys object. Returns MetasysObject"
  },
  "api/JohnsonControls.Metasys.BasicServices.MetasysObjectException.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.MetasysObjectException.html",
    "title": "Class MetasysObjectException | Metasys Services",
    "keywords": "Class MetasysObjectException Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll An exception that is thrown when a MetasysObject could not be created from a Http response. [Serializable] public class MetasysObjectException : MetasysHttpParsingException, ISerializable Inheritance object Exception MetasysException MetasysHttpException MetasysHttpParsingException MetasysObjectException Implements ISerializable Inherited Members MetasysHttpException.Call MetasysHttpException.ResponseBody Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MetasysObjectException(Exception) Initializes a new instance of the MetasysObjectException. public MetasysObjectException(Exception inner) Parameters inner Exception The inner exception. MetasysObjectException(string, Exception) Initializes a new instance of the MetasysObjectException. public MetasysObjectException(string response, Exception inner) Parameters response string The Http response. inner Exception The inner exception."
  },
  "api/JohnsonControls.Metasys.BasicServices.MetasysObjectType.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.MetasysObjectType.html",
    "title": "Struct MetasysObjectType | Metasys Services",
    "keywords": "Struct MetasysObjectType Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll MetasysObjectType is a structure that hold information about a Metasys public struct MetasysObjectType Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Description The translated description of the object type. public readonly string Description { get; } Property Value string The translated description of the object type or the default en-US version. DescriptionEnumerationKey The enumeration key of the description. public readonly string DescriptionEnumerationKey { get; } Property Value string The enumeration key of the object type or the default en-US version if not found. Id The number id of the object type. public readonly int Id { get; } Property Value int Methods Equals(object) Returns a value indicating whither this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() Return a pretty JSON string of the current object. public override string ToString() Returns string"
  },
  "api/JohnsonControls.Metasys.BasicServices.MetasysObjectTypeEnum.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.MetasysObjectTypeEnum.html",
    "title": "Enum MetasysObjectTypeEnum | Metasys Services",
    "keywords": "Enum MetasysObjectTypeEnum Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Collection of Metasys Object Types. public enum MetasysObjectTypeEnum Fields Equipment = 3 Metasys Object of type Equipment. Object = 1 Generic Metasys Object. Space = 2 Metasys Object of type Space."
  },
  "api/JohnsonControls.Metasys.BasicServices.MetasysObjectTypeException.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.MetasysObjectTypeException.html",
    "title": "Class MetasysObjectTypeException | Metasys Services",
    "keywords": "Class MetasysObjectTypeException Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll An exception that is thrown when a MetasysObjectType could not be created from a Http response. [Serializable] public class MetasysObjectTypeException : MetasysHttpParsingException, ISerializable Inheritance object Exception MetasysException MetasysHttpException MetasysHttpParsingException MetasysObjectTypeException Implements ISerializable Inherited Members MetasysHttpException.Call MetasysHttpException.ResponseBody Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MetasysObjectTypeException(string, Exception) Initializes a new instance of the MetasysObjectTypeException. public MetasysObjectTypeException(string response, Exception inner) Parameters response string The Http response. inner Exception The inner exception."
  },
  "api/JohnsonControls.Metasys.BasicServices.MetasysPoint.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.MetasysPoint.html",
    "title": "Class MetasysPoint | Metasys Services",
    "keywords": "Class MetasysPoint Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Point is a structure that holds information about an object attribute mapped to a point. public class MetasysPoint : ObjectUtil Inheritance object ObjectUtil MetasysPoint Inherited Members ObjectUtil.GetJTokenValue(JToken, string) ObjectUtil.GetJTokenDate(JToken, string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MetasysPoint() Default Constructor for Point. public MetasysPoint() Properties Attribute Attribute where the point is mapped public string Attribute { get; set; } Property Value string AttributeUrl Full URL of the attribute where the point is mapped public string AttributeUrl { get; set; } Property Value string Category Category of the Point. public string Category { get; set; } Property Value string EquipmentName The name of the Equipment that contains the Point public string EquipmentName { get; set; } Property Value string IsDisplayData Flag that states when the attribute object contains data suitable to display public bool IsDisplayData { get; set; } Property Value bool Label The Label of the Point. public string Label { get; set; } Property Value string ObjectId The ID of the object where the point is mapped public Guid ObjectId { get; set; } Property Value Guid ObjectUrl Full URL of the object where the point is mapped public string ObjectUrl { get; set; } Property Value string PresentValue Value of the attribute where the point is mapped public Variant PresentValue { get; set; } Property Value Variant ShortName The Short name of the Point. public string ShortName { get; set; } Property Value string Methods ToString() Return a pretty JSON string of the current object. public override string ToString() Returns string"
  },
  "api/JohnsonControls.Metasys.BasicServices.MetasysPointCollectionExtension.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.MetasysPointCollectionExtension.html",
    "title": "Class MetasysPointCollectionExtension | Metasys Services",
    "keywords": "Class MetasysPointCollectionExtension Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll A helper to work with MetasysPoint collections. public static class MetasysPointCollectionExtension Inheritance object MetasysPointCollectionExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FindByShortName(IEnumerable<MetasysPoint>, string) Returns the first MetasysPoint in the collection with the given short name. public static MetasysPoint FindByShortName(this IEnumerable<MetasysPoint> source, string shortName) Parameters source IEnumerable<MetasysPoint> shortName string The short name of the Metasys point. Returns MetasysPoint"
  },
  "api/JohnsonControls.Metasys.BasicServices.MetasysPropertyException.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.MetasysPropertyException.html",
    "title": "Class MetasysPropertyException | Metasys Services",
    "keywords": "Class MetasysPropertyException Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll An exception that is thrown when a Variant could not be created from a Http response. [Serializable] public class MetasysPropertyException : MetasysHttpParsingException, ISerializable Inheritance object Exception MetasysException MetasysHttpException MetasysHttpParsingException MetasysPropertyException Implements ISerializable Inherited Members MetasysHttpException.Call MetasysHttpException.ResponseBody Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MetasysPropertyException(string, Exception) Initializes a new instance of the MetasysPropertyException. public MetasysPropertyException(string response, Exception inner) Parameters response string The Http response. inner Exception The inner exception. Remarks By passing the response in the message the value/values can still be seen. This information can be useful despite the Variant construction failing."
  },
  "api/JohnsonControls.Metasys.BasicServices.MetasysTokenException.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.MetasysTokenException.html",
    "title": "Class MetasysTokenException | Metasys Services",
    "keywords": "Class MetasysTokenException Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll An exception that is thrown when an AccessToken could not be created from a Http response. [Serializable] public class MetasysTokenException : MetasysHttpParsingException, ISerializable Inheritance object Exception MetasysException MetasysHttpException MetasysHttpParsingException MetasysTokenException Implements ISerializable Inherited Members MetasysHttpException.Call MetasysHttpException.ResponseBody Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MetasysTokenException(string, Exception) Initializes a new instance of the MetasysTokenException. public MetasysTokenException(string response, Exception inner) Parameters response string The Http response. inner Exception The inner exception. Remarks Since access tokens are sensitive information it is important to protect them from being automatically logged. For this reason the response should not be passed into the base Exception in the message, but rather accessed through the MetasysHttpException ResponseBody property."
  },
  "api/JohnsonControls.Metasys.BasicServices.MetasysUnsupportedApiVersion.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.MetasysUnsupportedApiVersion.html",
    "title": "Class MetasysUnsupportedApiVersion | Metasys Services",
    "keywords": "Class MetasysUnsupportedApiVersion Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll An exception that is thrown when the given API version is invalid or not supported [Serializable] public class MetasysUnsupportedApiVersion : MetasysException, ISerializable Inheritance object Exception MetasysException MetasysUnsupportedApiVersion Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MetasysUnsupportedApiVersion(string) Initializes a new instance of the MetasysUnsupportedApiVersion with a predefined message given the API Version public MetasysUnsupportedApiVersion(string version) Parameters version string"
  },
  "api/JohnsonControls.Metasys.BasicServices.NetworkDevice.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.NetworkDevice.html",
    "title": "Class NetworkDevice | Metasys Services",
    "keywords": "Class NetworkDevice Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll NetworkDevice is a structure that hold information about a Metasys Network Device public class NetworkDevice Inheritance object NetworkDevice Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Id Item Unique Identifier (GUID) [JsonProperty(Required = Required.Always)] public Guid Id { get; set; } Property Value Guid ItemReference Item fully qualified reference [JsonProperty(Required = Required.Always)] public string ItemReference { get; set; } Property Value string Name Item name [JsonProperty(Required = Required.Always)] public string Name { get; set; } Property Value string ObjectType The resource type detail reference. public string ObjectType { get; set; } Property Value string Remarks This is available since Metasys API v3. Methods Equals(object) Returns a value indicating whether this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() Return a pretty JSON string of the current object. public override string ToString() Returns string"
  },
  "api/JohnsonControls.Metasys.BasicServices.NetworkDeviceServiceProvider.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.NetworkDeviceServiceProvider.html",
    "title": "Class NetworkDeviceServiceProvider | Metasys Services",
    "keywords": "Class NetworkDeviceServiceProvider Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Provide network device item for the endpoints of the Metasys Network Devices API. public sealed class NetworkDeviceServiceProvider : BasicServiceProvider, INetworkDeviceService, IBasicService Inheritance object ObjectUtil BasicServiceProvider NetworkDeviceServiceProvider Implements INetworkDeviceService IBasicService Inherited Members BasicServiceProvider.Version BasicServiceProvider.MinVersionSupported BasicServiceProvider.MaxVersionSupported BasicServiceProvider.Culture BasicServiceProvider.LogClientErrors BasicServiceProvider.GetResourceTypesAsync(string, string) BasicServiceProvider.GetObjectTypeEnumeration(string) BasicServiceProvider.Localize(string, CultureInfo) BasicServiceProvider.ToDictionary(object) ObjectUtil.GetJTokenValue(JToken, string) ObjectUtil.GetJTokenDate(JToken, string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors NetworkDeviceServiceProvider(IFlurlClient, ApiVersion, bool) Initializes a new instance of NetworkDeviceServiceProvider with supplied data. public NetworkDeviceServiceProvider(IFlurlClient client, ApiVersion version, bool logClientErrors = true) Parameters client IFlurlClient The FlurlClient to get response from URL. version ApiVersion The server's Api version. logClientErrors bool Set this flag to false to disable logging of client errors. Methods FindById(Guid) Retrieves the specified network device. public MetasysObject FindById(Guid networkDeviceId) Parameters networkDeviceId Guid The identifier of the network device. Returns MetasysObject The specified alarm details. FindByIdAsync(Guid) Retrieves the specified network device. public Task<MetasysObject> FindByIdAsync(Guid networkDeviceId) Parameters networkDeviceId Guid The identifier of the network device. Returns Task<MetasysObject> The specified alarm details. Get(NetworkDeviceTypeEnum) Retrieves a collection of network devices. public IEnumerable<MetasysObject> Get(NetworkDeviceTypeEnum networkDevicetype) Parameters networkDevicetype NetworkDeviceTypeEnum Network Device Type enum Returns IEnumerable<MetasysObject> Exceptions MetasysHttpException MetasysHttpParsingException Get(string) Retrieves a collection of network devices. public IEnumerable<MetasysObject> Get(string type = null) Parameters type string Optional type number as a string Returns IEnumerable<MetasysObject> Exceptions MetasysHttpException MetasysHttpParsingException GetAsync(NetworkDeviceClassificationEnum) Retrieves a collection of network devices. public Task<IEnumerable<MetasysObject>> GetAsync(NetworkDeviceClassificationEnum classificationEnum) Parameters classificationEnum NetworkDeviceClassificationEnum Returns Task<IEnumerable<MetasysObject>> Exceptions MetasysHttpException MetasysHttpParsingException GetAsync(NetworkDeviceTypeEnum) Retrieves a collection of network devices. public Task<IEnumerable<MetasysObject>> GetAsync(NetworkDeviceTypeEnum networkDevicetype) Parameters networkDevicetype NetworkDeviceTypeEnum Network Device Type enum Returns Task<IEnumerable<MetasysObject>> Exceptions MetasysHttpException MetasysHttpParsingException GetAsync(string) Retrieves a collection of network devices. public Task<IEnumerable<MetasysObject>> GetAsync(string type = null) Parameters type string Optional type number as a string Returns Task<IEnumerable<MetasysObject>> Exceptions MetasysHttpException MetasysHttpParsingException GetByClassificationAsync(string) public Task<IEnumerable<MetasysObject>> GetByClassificationAsync(string classification = null) Parameters classification string Returns Task<IEnumerable<MetasysObject>> GetChildren(Guid) Retrieves the collection of network devices that are children of the specified network device. public IEnumerable<MetasysObject> GetChildren(Guid networkDeviceId) Parameters networkDeviceId Guid Returns IEnumerable<MetasysObject> GetChildrenAsync(Guid) Retrieves the collection of network devices that are children of the specified network device. public Task<IEnumerable<MetasysObject>> GetChildrenAsync(Guid networkDeviceId) Parameters networkDeviceId Guid Returns Task<IEnumerable<MetasysObject>> GetHostingAnEquipment(Guid) List network devices hosting an equipment instance public IEnumerable<MetasysObject> GetHostingAnEquipment(Guid equipmentId) Parameters equipmentId Guid Returns IEnumerable<MetasysObject> GetHostingAnEquipmentAsync(Guid) List network devices hosting an equipment instance public Task<IEnumerable<MetasysObject>> GetHostingAnEquipmentAsync(Guid equipmentId) Parameters equipmentId Guid Returns Task<IEnumerable<MetasysObject>> GetServingASpace(Guid) List network devices serving a space. public IEnumerable<MetasysObject> GetServingASpace(Guid spaceId) Parameters spaceId Guid Returns IEnumerable<MetasysObject> GetServingASpaceAsync(Guid) List network devices serving a space. public Task<IEnumerable<MetasysObject>> GetServingASpaceAsync(Guid spaceId) Parameters spaceId Guid Returns Task<IEnumerable<MetasysObject>> GetTypes() Retrieves the collection of all network device types. public IEnumerable<MetasysObjectType> GetTypes() Returns IEnumerable<MetasysObjectType> Exceptions MetasysHttpException MetasysHttpParsingException GetTypesAsync() Retrieves the collection of all network device types. public Task<IEnumerable<MetasysObjectType>> GetTypesAsync() Returns Task<IEnumerable<MetasysObjectType>> Exceptions MetasysHttpException MetasysHttpParsingException"
  },
  "api/JohnsonControls.Metasys.BasicServices.NetworkDeviceTypeEnum.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.NetworkDeviceTypeEnum.html",
    "title": "Enum NetworkDeviceTypeEnum | Metasys Services",
    "keywords": "Enum NetworkDeviceTypeEnum Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Enumeration of possible Network Device Type. public enum NetworkDeviceTypeEnum Fields ADS = 425 ADS. BACnetIP = 343 BACnet IP. FEC = 194 FEC. FXSNC = 455 FX SNC. FieldBusMSTP = 195 Field Bus MTSP. IOM = 578 IOM. JCIFamilyBACnetDevice = 197 JCI Family BACnet Device. NAE35NIE39 = 613 NAE35-NIE39. NAE45NIE49 = 192 NAE45-NIE49. NAE55NIE59 = 185 NAE55-NIE59. NAE85LCS85NIE89 = 610 NAE85-LCS85-NIE89. NCE25NIE29 = 651 NCE25-NIE29. NCE35 = 193 NCE35. NIE85 = 611 NIE85. RDDEV = 640 RDDEV. RIOM = 598 RIOM. SNC = 448 SNC. SNE1050 = 872 SNE1050. SNE1100 = 871 SNE1100. SNE1100L = 873 SNE1100L. SNE2200 = 877 SNE2200. SensorActuatorBus = 196 Sensor/Actuator Bus. VNDController = 427 VND Controller. VNDIntegration = 426 VND Integration."
  },
  "api/JohnsonControls.Metasys.BasicServices.ObjectId.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.ObjectId.html",
    "title": "Struct ObjectId | Metasys Services",
    "keywords": "Struct ObjectId Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll A Metasys Object Identifier public record struct ObjectId : IEquatable<ObjectId>, IEquatable<string>, IEquatable<Guid> Implements IEquatable<ObjectId> IEquatable<string> IEquatable<Guid> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Remarks Wherever an ObjectId is required you can pass a string instead. This is because this is just a token type to signify that an object identifier is required. As such it has implicit conversions to/from string. Constructors ObjectId() Creates a default instance of ObjectId that is synonymous with an empty string. public ObjectId() ObjectId(string) A Metasys Object Identifier public ObjectId(string Value) Parameters Value string Remarks Wherever an ObjectId is required you can pass a string instead. This is because this is just a token type to signify that an object identifier is required. As such it has implicit conversions to/from string. Properties Value public string Value { readonly get; set; } Property Value string Methods Equals(ObjectId) public bool Equals(ObjectId other) Parameters other ObjectId Returns bool Equals(Guid) public bool Equals(Guid other) Parameters other Guid Returns bool Equals(string) public bool Equals(string other) Parameters other string Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators implicit operator Guid(ObjectId) Implicitly convert a ObjectId to Guid [Obsolete(\"This is not guaranteed to always succeed. Please use methods that use strings or ObjectIds for object identifiers instead.\")] public static implicit operator Guid(ObjectId objectId) Parameters objectId ObjectId Returns Guid Remarks This method is deprecated. This method is not guaranteed to always succeed in the future. While Metasys object identifiers have always safely converted to Guids they make no guarantee that they will always. Nor does the REST API spec document them as Guids. To avoid issues, use methods from this library that take an ObjectId for object identifiers. You can even pass strings to those methods as strings will implicitly convert to ObjectId. implicit operator string(ObjectId) Implicitly convert an ObjectId to string public static implicit operator string(ObjectId objectId) Parameters objectId ObjectId Returns string implicit operator ObjectId(Guid) Implicitly convert a Guid to ObjectId public static implicit operator ObjectId(Guid value) Parameters value Guid Returns ObjectId implicit operator ObjectId(string) Implicitly convert a string to ObjectId public static implicit operator ObjectId(string value) Parameters value string Returns ObjectId"
  },
  "api/JohnsonControls.Metasys.BasicServices.ObjectRequest.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.ObjectRequest.html",
    "title": "Class ObjectRequest | Metasys Services",
    "keywords": "Class ObjectRequest Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Request related to an object public class ObjectRequest Inheritance object ObjectRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Body Body to specify extra values related to the request, e.g.\"\"text\": \"Annotation text\"\" public object Body { get; set; } Property Value object Id Choosen ID to indentify the request/response. public string Id { get; set; } Property Value string RelativeUrl Relative Url to read from the endpoint, e.g.\"00000000-0000-0000-0000-000000000001/attributes/presentValue\" public string RelativeUrl { get; set; } Property Value string"
  },
  "api/JohnsonControls.Metasys.BasicServices.OriginApplicationsEnum.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.OriginApplicationsEnum.html",
    "title": "Enum OriginApplicationsEnum | Metasys Services",
    "keywords": "Enum OriginApplicationsEnum Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Enumeration of possible OriginApplications for an Audit. [Flags] public enum OriginApplicationsEnum Fields AlarmEvent = 1 Origin Application: AlarmEvent (Enum id 0) AuditTrails = 2 Origin Application: AuditTrails (Enum id 1) DeviceManager = 512 Origin Application: DeviceManager (Enum id 9) DeviceServices = 4 Origin Application: DeviceServices (Enum id 2) EnergyManagement = 2048 Origin Application: EnergyManagement (Enum id 11) General = 256 Origin Application: General (Enum id 8) Interlock = 4096 Origin Application: Interlock (Enum id 12) MCE = 8 Origin Application: MCE (Enum id 3) MCO = 8192 Origin Application: MCO (Enum id 13) N2 = 128 Origin Application: N2 (Enum id 7) Schedule = 16384 Origin Application: Schedule (Enum id 14) SiteServices = 16 Origin Application: SiteServices (Enum id 0) SystemSecurity = 64 Origin Application: SystemSecurity (Enum id 6) Trend = 32 Origin Application: Trend (Enum id 5) WebServices = 1024 Origin Application: WebServices (Enum id 10) Remarks The actual values sent to the server are specified in the description."
  },
  "api/JohnsonControls.Metasys.BasicServices.PagedResult-1.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.PagedResult-1.html",
    "title": "Class PagedResult<T> | Metasys Services",
    "keywords": "Class PagedResult<T> Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Generic Paged Result Object containing Items along with paging information. public class PagedResult<T> Type Parameters T Inheritance object PagedResult<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PagedResult() Initialize an empty instance of PagedResult. public PagedResult() PagedResult(JToken) Creates a new PagedResult from a JToken response. public PagedResult(JToken response) Parameters response JToken Properties CurrentPage The actual page. public int CurrentPage { get; set; } Property Value int Items The items of the current page. public List<T> Items { get; set; } Property Value List<T> PageCount Total number of pages. public int PageCount { get; set; } Property Value int PageSize Maximum number of elements on a page. public int PageSize { get; set; } Property Value int Total The total number of elements. public int Total { get; set; } Property Value int Methods ToString() Return a pretty JSON string of the current object. public override string ToString() Returns string"
  },
  "api/JohnsonControls.Metasys.BasicServices.Result.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.Result.html",
    "title": "Class Result | Metasys Services",
    "keywords": "Class Result Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll This holds the inofrmation returned as result of a call public class Result Inheritance object Result Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Annotation Text of the Audit Annotation set according to the call. public string Annotation { get; set; } Property Value string Id The id of the Audit affected by the call. public Guid Id { get; set; } Property Value Guid Status The Status of the call. public int Status { get; set; } Property Value int Methods ToString() Return a pretty JSON string of the current object. public override string ToString() Returns string"
  },
  "api/JohnsonControls.Metasys.BasicServices.Sample.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.Sample.html",
    "title": "Class Sample | Metasys Services",
    "keywords": "Class Sample Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll DTO for Sample public class Sample Inheritance object Sample Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties IsReliable The sample is reliable if true. public bool IsReliable { get; set; } Property Value bool Timestamp Timestamp of when the sample was recorded. public DateTime Timestamp { get; set; } Property Value DateTime Unit Unit of measurement of the Sample. public string Unit { get; set; } Property Value string Value Value of the Sample. public double Value { get; set; } Property Value double Methods Equals(object) Returns a value indicating whither this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() Return a pretty JSON string of the current object. public override string ToString() Returns string"
  },
  "api/JohnsonControls.Metasys.BasicServices.SpaceServiceProvider.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.SpaceServiceProvider.html",
    "title": "Class SpaceServiceProvider | Metasys Services",
    "keywords": "Class SpaceServiceProvider Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Provide space item for the endpoints of the Metasys Spaces API. public sealed class SpaceServiceProvider : BasicServiceProvider, ISpaceService, IBasicService Inheritance object ObjectUtil BasicServiceProvider SpaceServiceProvider Implements ISpaceService IBasicService Inherited Members BasicServiceProvider.Version BasicServiceProvider.MinVersionSupported BasicServiceProvider.MaxVersionSupported BasicServiceProvider.Culture BasicServiceProvider.LogClientErrors BasicServiceProvider.GetResourceTypesAsync(string, string) BasicServiceProvider.GetObjectTypeEnumeration(string) BasicServiceProvider.Localize(string, CultureInfo) BasicServiceProvider.ToDictionary(object) ObjectUtil.GetJTokenValue(JToken, string) ObjectUtil.GetJTokenDate(JToken, string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors SpaceServiceProvider(IFlurlClient, ApiVersion, bool) Initializes a new instance of NetworkDeviceServiceProvider with supplied data. public SpaceServiceProvider(IFlurlClient client, ApiVersion version, bool logClientErrors = true) Parameters client IFlurlClient The FlurlClient to get response from URL. version ApiVersion The server's Api version. logClientErrors bool Set this flag to false to disable logging of client errors. Methods FindById(ObjectId) Retrieves the specified space. public MetasysObject FindById(ObjectId spaceId) Parameters spaceId ObjectId The identifier of the space. Returns MetasysObject The specified alarm details. FindByIdAsync(ObjectId) Retrieves the specified space. public Task<MetasysObject> FindByIdAsync(ObjectId spaceId) Parameters spaceId ObjectId The identifier of the space. Returns Task<MetasysObject> The specified alarm details. Get(SpaceTypeEnum?, int?, int?, string) Retrieves a collection of spaces. public IEnumerable<MetasysObject> Get(SpaceTypeEnum? type = null, int? page = null, int? pageSize = null, string sort = null) Parameters type SpaceTypeEnum? Optional, type ID (numeric for v2, v3 - enumset key string for v4). page int? Optional, the page numer of items to return (default = 1). pageSize int? Optional, the maximum number of items to return in the response (default = 100, max = 1000). sort string Optional, the criteria to use when sorting results (default = name). Returns IEnumerable<MetasysObject> Exceptions MetasysHttpException MetasysHttpParsingException Get(string, int?, int?, string) Retrieves a collection of spaces. public IEnumerable<MetasysObject> Get(string type, int? page = null, int? pageSize = null, string sort = null) Parameters type string Optional, type ID (numeric for v2, v3 - enumset key string for v4). page int? Optional, the page numer of items to return (default = 1). pageSize int? Optional, the maximum number of items to return in the response (default = 100, max = 1000). sort string Optional, the criteria to use when sorting results (default = name). Returns IEnumerable<MetasysObject> GetAsync(SpaceTypeEnum?, int?, int?, string) Retrieves a collection of spaces. public Task<IEnumerable<MetasysObject>> GetAsync(SpaceTypeEnum? type = null, int? page = null, int? pageSize = null, string sort = null) Parameters type SpaceTypeEnum? Optional, type ID (numeric for v2, v3 - enumset key string for v4). page int? Optional, the page numer of items to return (default = 1). pageSize int? Optional, the maximum number of items to return in the response (default = 100, max = 1000). sort string Optional, the criteria to use when sorting results (default = name). Returns Task<IEnumerable<MetasysObject>> Exceptions MetasysHttpException MetasysHttpParsingException GetAsync(string, int?, int?, string) Retrieves a collection of spaces. public Task<IEnumerable<MetasysObject>> GetAsync(string type, int? page = null, int? pageSize = null, string sort = null) Parameters type string Optional, type ID (numeric for v2, v3 - enumset key string for v4). page int? Optional, the page numer of items to return (default = 1). pageSize int? Optional, the maximum number of items to return in the response (default = 100, max = 1000). sort string Optional, the criteria to use when sorting results (default = name). Returns Task<IEnumerable<MetasysObject>> GetChildren(ObjectId) Retrieves the collection of spaces that are located within the specified space. public IEnumerable<MetasysObject> GetChildren(ObjectId spaceId) Parameters spaceId ObjectId The id of the parent space. Returns IEnumerable<MetasysObject> GetChildrenAsync(ObjectId) Retrieves the collection of spaces that are located within the specified space. public Task<IEnumerable<MetasysObject>> GetChildrenAsync(ObjectId spaceId) Parameters spaceId ObjectId The id of the parent space. Returns Task<IEnumerable<MetasysObject>> GetServedByEquipment(ObjectId) Retrieves the collection of spaces served by the specified network device. public IEnumerable<MetasysObject> GetServedByEquipment(ObjectId equipmentId) Parameters equipmentId ObjectId Returns IEnumerable<MetasysObject> GetServedByEquipmentAsync(ObjectId) Retrieves the collection of spaces served by the specified network device. public Task<IEnumerable<MetasysObject>> GetServedByEquipmentAsync(ObjectId equipmentId) Parameters equipmentId ObjectId Returns Task<IEnumerable<MetasysObject>> GetServedByNetworkDevice(ObjectId) Retrieves the collection of spaces served by the specified network device. public IEnumerable<MetasysObject> GetServedByNetworkDevice(ObjectId networkDeviceId) Parameters networkDeviceId ObjectId Returns IEnumerable<MetasysObject> GetServedByNetworkDeviceAsync(ObjectId) Retrieves the collection of spaces served by the specified network device. public Task<IEnumerable<MetasysObject>> GetServedByNetworkDeviceAsync(ObjectId networkDeviceId) Parameters networkDeviceId ObjectId Returns Task<IEnumerable<MetasysObject>> GetTypes() Retrieves the collection of all spaces types. public IEnumerable<MetasysObjectType> GetTypes() Returns IEnumerable<MetasysObjectType> GetTypesAsync() Retrieves the collection of all spaces types. public Task<IEnumerable<MetasysObjectType>> GetTypesAsync() Returns Task<IEnumerable<MetasysObjectType>>"
  },
  "api/JohnsonControls.Metasys.BasicServices.SpaceSortEnum.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.SpaceSortEnum.html",
    "title": "Enum SpaceSortEnum | Metasys Services",
    "keywords": "Enum SpaceSortEnum Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Enumeration of possible sort types for a Space. public enum SpaceSortEnum : uint Fields ItemReference = 0 Item Reference (ascending). MinusItemReference = 1 Item Reference (descending). MinusName = 3 Name (descending). Name = 2 Name (ascending). Room = 3 Space of Type Room."
  },
  "api/JohnsonControls.Metasys.BasicServices.SpaceTypeEnum.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.SpaceTypeEnum.html",
    "title": "Enum SpaceTypeEnum | Metasys Services",
    "keywords": "Enum SpaceTypeEnum Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Enumeration of possible types for a Space. public enum SpaceTypeEnum Fields Building = 1 Space of Type Building. Floor = 2 Space of Type Floor. Generic = 0 Space of Type Generic. Room = 3 Space of Type Room."
  },
  "api/JohnsonControls.Metasys.BasicServices.StreamEventArgs.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.StreamEventArgs.html",
    "title": "Class StreamEventArgs | Metasys Services",
    "keywords": "Class StreamEventArgs Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Defines Stream event arguments. public class StreamEventArgs : EventArgs Inheritance object EventArgs StreamEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Value Event value public StreamMessage Value Field Value StreamMessage"
  },
  "api/JohnsonControls.Metasys.BasicServices.StreamMessage.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.StreamMessage.html",
    "title": "Class StreamMessage | Metasys Services",
    "keywords": "Class StreamMessage Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Provides Stream message data public class StreamMessage Inheritance object StreamMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StreamMessage(string, string) Constructor of the class public StreamMessage(string eventType, string data) Parameters eventType string data string Properties AttributeName Attribute Name public string AttributeName { get; set; } Property Value string CreationTime Event Creation Time public string CreationTime { get; set; } Property Value string Data JSON encoded string containing an object public string Data { get; set; } Property Value string Description Description public string Description { get; set; } Property Value string Event Event that generated the stream message public string Event { get; } Property Value string Id Item or Activity Id public Guid Id { get; set; } Property Value Guid ItemReference Item Reference (FQR) public string ItemReference { get; set; } Property Value string ObjectId Object Identifier (GUID) [JsonProperty(Required = Required.Always)] public Guid ObjectId { get; set; } Property Value Guid ObjectName Object Name public string ObjectName { get; set; } Property Value string PresentValue Present Value public string PresentValue { get; set; } Property Value string RequestId Request Id public Guid RequestId { get; set; } Property Value Guid StreamId Stream Identifier (String) public string StreamId { get; set; } Property Value string SubscriptionId Subscription Identifier (String) public string SubscriptionId { get; set; } Property Value string"
  },
  "api/JohnsonControls.Metasys.BasicServices.StreamServiceProvider.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.StreamServiceProvider.html",
    "title": "Class StreamServiceProvider | Metasys Services",
    "keywords": "Class StreamServiceProvider Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Provide methods for the endpoints of the Metasys Stream API v4. public sealed class StreamServiceProvider : BasicServiceProvider, IDisposable, IStreamService, IBasicService Inheritance object ObjectUtil BasicServiceProvider StreamServiceProvider Implements IDisposable IStreamService IBasicService Inherited Members BasicServiceProvider.Version BasicServiceProvider.MinVersionSupported BasicServiceProvider.MaxVersionSupported BasicServiceProvider.Culture BasicServiceProvider.LogClientErrors BasicServiceProvider.GetResourceTypesAsync(string, string) BasicServiceProvider.GetObjectTypeEnumeration(string) BasicServiceProvider.Localize(string, CultureInfo) BasicServiceProvider.ToDictionary(object) ObjectUtil.GetJTokenValue(JToken, string) ObjectUtil.GetJTokenDate(JToken, string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors StreamServiceProvider(IFlurlClient, ApiVersion, bool) Stream Service Provider public StreamServiceProvider(IFlurlClient client, ApiVersion version, bool logClientErrors = true) Parameters client IFlurlClient version ApiVersion logClientErrors bool Properties AccessToken Access Token public AccessToken AccessToken { get; set; } Property Value AccessToken ResultChannel Channel result public ChannelReader<StreamMessage> ResultChannel { get; } Property Value ChannelReader<StreamMessage> Methods ConnectAsync() Connect method public Task<bool> ConnectAsync() Returns Task<bool> Dispose() public void Dispose() GetAlarmEvents() Return the list of Alarm events public List<StreamMessage> GetAlarmEvents() Returns List<StreamMessage> GetAuditEvents() Return the list of Audit events public List<StreamMessage> GetAuditEvents() Returns List<StreamMessage> GetCOV() Return the first value of COV values public StreamMessage GetCOV() Returns StreamMessage GetCOVList() Return the list of COV values public List<StreamMessage> GetCOVList() Returns List<StreamMessage> GetRequestIds() Return the list of request Ids public List<Guid> GetRequestIds() Returns List<Guid> KeepAlive(AccessToken) Call the related API (with a new Token) to keep the Stream Alive public Task KeepAlive(AccessToken accessToken) Parameters accessToken AccessToken Returns Task LoadActivitySubscriptions(string) Add a subscription for an Activity according to the ActivityType public void LoadActivitySubscriptions(string activityType) Parameters activityType string LoadCOVSubscriptions(IEnumerable<Guid>) Add a list of subscriptions for COV (presentValue). public void LoadCOVSubscriptions(IEnumerable<Guid> ids) Parameters ids IEnumerable<Guid> LoadCOVSubscriptions(Guid) Add a subscription for a COV (presentValue). public void LoadCOVSubscriptions(Guid id) Parameters id Guid StartCollectingAlarmsAsync(int) Start collecting the Alarm events from the stream public Task StartCollectingAlarmsAsync(int maxNumber = 100) Parameters maxNumber int Returns Task StartCollectingAuditsAsync(int) Start collecting the Audit events from the stream public Task StartCollectingAuditsAsync(int maxNumber = 100) Parameters maxNumber int Returns Task StartReadingCOV(Guid) Start reading a COV value from the stream public void StartReadingCOV(Guid id) Parameters id Guid StartReadingCOVAsync(IEnumerable<Guid>) Start reading multiple COV values from the stream public Task StartReadingCOVAsync(IEnumerable<Guid> ids) Parameters ids IEnumerable<Guid> Returns Task StartReadingCOVAsync(Guid) Start reading a COV value from the stream public Task StartReadingCOVAsync(Guid id) Parameters id Guid Returns Task StopCollectingAlarms(Guid) Stop collecting Alarm events from the stream public void StopCollectingAlarms(Guid requestId) Parameters requestId Guid StopCollectingAudits(Guid) Stop collecting Audit events from the stream public void StopCollectingAudits(Guid requestId) Parameters requestId Guid StopReadingCOV(Guid) Stop reading COV Stream Value. public void StopReadingCOV(Guid requestId) Parameters requestId Guid SubscribeAsync(Guid, string, string, Dictionary<string, string>, dynamic) Subscribe method public Task<string> SubscribeAsync(Guid requestId, string method, string relativeUrl, Dictionary<string, string> query = null, dynamic body = null) Parameters requestId Guid method string relativeUrl string query Dictionary<string, string> body dynamic Returns Task<string> UnsubscribeAsync(Guid) Unsubscribe method public Task UnsubscribeAsync(Guid requestId) Parameters requestId Guid Returns Task Events AlarmOccurred Event fired when an Alarm event occurs public event EventHandler<StreamEventArgs> AlarmOccurred Event Type EventHandler<StreamEventArgs> AuditOccurred Event fired when an Audit event occurs public event EventHandler<StreamEventArgs> AuditOccurred Event Type EventHandler<StreamEventArgs> COVValueChanged Event fired when a COV value changes public event EventHandler<StreamEventArgs> COVValueChanged Event Type EventHandler<StreamEventArgs> HeartBeatOccurred Event fired when an HeartBeat occurs public event EventHandler<EventSourceMessageEventArgs> HeartBeatOccurred Event Type EventHandler<EventSourceMessageEventArgs>"
  },
  "api/JohnsonControls.Metasys.BasicServices.Subscription.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.Subscription.html",
    "title": "Class Subscription | Metasys Services",
    "keywords": "Class Subscription Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Provides Subscription Item public class Subscription Inheritance object Subscription Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Body Body of a subscription public dynamic Body { get; set; } Property Value dynamic Method Method of a subscription public string Method { get; set; } Property Value string Params Parameters of a subscription public Dictionary<string, string> Params { get; set; } Property Value Dictionary<string, string> RelativeUrl Relative URL of a subscription public string RelativeUrl { get; set; } Property Value string"
  },
  "api/JohnsonControls.Metasys.BasicServices.TimeFilter.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.TimeFilter.html",
    "title": "Class TimeFilter | Metasys Services",
    "keywords": "Class TimeFilter Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Temporal filter for a timeline based request. public class TimeFilter : BasicFilter Inheritance object BasicFilter TimeFilter Derived AlarmFilter AlarmFilterV4Plus AuditFilter Inherited Members BasicFilter.Page BasicFilter.PageSize BasicFilter.Sort object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EndTime Latest end time. public DateTime? EndTime { get; set; } Property Value DateTime? StartTime Earliest start time. public DateTime? StartTime { get; set; } Property Value DateTime?"
  },
  "api/JohnsonControls.Metasys.BasicServices.Token.AccessTokenResponse.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.Token.AccessTokenResponse.html",
    "title": "Class AccessTokenResponse | Metasys Services",
    "keywords": "Class AccessTokenResponse Namespace JohnsonControls.Metasys.BasicServices.Token Assembly MetasysServices.dll Access Token Response public class AccessTokenResponse Inheritance object AccessTokenResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AccessToken Access Token public string AccessToken { get; set; } Property Value string Expires Expiration Date Time public DateTime Expires { get; set; } Property Value DateTime"
  },
  "api/JohnsonControls.Metasys.BasicServices.Token.IAuthTokenProvider.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.Token.IAuthTokenProvider.html",
    "title": "Interface IAuthTokenProvider | Metasys Services",
    "keywords": "Interface IAuthTokenProvider Namespace JohnsonControls.Metasys.BasicServices.Token Assembly MetasysServices.dll Interface for Authorization Token Provider. public interface IAuthTokenProvider Methods GetAccessTokenAsync() Get Access Token (async). Task<AccessTokenResponse> GetAccessTokenAsync() Returns Task<AccessTokenResponse> GetRefreshTokenAsync(string) Get Refresh Token (async). Task<AccessTokenResponse> GetRefreshTokenAsync(string oldToken) Parameters oldToken string Returns Task<AccessTokenResponse>"
  },
  "api/JohnsonControls.Metasys.BasicServices.Token.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.Token.html",
    "title": "Namespace JohnsonControls.Metasys.BasicServices.Token | Metasys Services",
    "keywords": "Namespace JohnsonControls.Metasys.BasicServices.Token Classes AccessTokenResponse Access Token Response Interfaces IAuthTokenProvider Interface for Authorization Token Provider."
  },
  "api/JohnsonControls.Metasys.BasicServices.TreeObject.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.TreeObject.html",
    "title": "Class TreeObject | Metasys Services",
    "keywords": "Class TreeObject Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Generic class for handling JSON objects with a hierarchical pattern. Children is null when the object has no children. public class TreeObject Inheritance object TreeObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Children List of object's children. public IEnumerable<TreeObject> Children { get; set; } Property Value IEnumerable<TreeObject> Item Generic JToken Item. public JToken Item { get; set; } Property Value JToken"
  },
  "api/JohnsonControls.Metasys.BasicServices.TrendServiceProvider.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.TrendServiceProvider.html",
    "title": "Class TrendServiceProvider | Metasys Services",
    "keywords": "Class TrendServiceProvider Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Provider Class for Trend Service public class TrendServiceProvider : BasicServiceProvider, ITrendService, IBasicService Inheritance object ObjectUtil BasicServiceProvider TrendServiceProvider Implements ITrendService IBasicService Inherited Members BasicServiceProvider.Client BasicServiceProvider.Version BasicServiceProvider.MinVersionSupported BasicServiceProvider.MaxVersionSupported BasicServiceProvider.Culture BasicServiceProvider.Log BasicServiceProvider.LogClientErrors BasicServiceProvider.ToMetasysObject(IEnumerable<TreeObject>, ApiVersion, MetasysObjectTypeEnum?) BasicServiceProvider.ToMetasysObject(JToken, ApiVersion, MetasysObjectTypeEnum?) BasicServiceProvider.ToMetasysObject(List<JToken>, ApiVersion, MetasysObjectTypeEnum?) BasicServiceProvider.ToNetworkDevice(JToken, ApiVersion) BasicServiceProvider.ToNetworkDevice(List<JToken>, ApiVersion) BasicServiceProvider.GetObjectChildrenAsync(object, Dictionary<string, string>, int) BasicServiceProvider.GetResourceTypesAsync(string, string) BasicServiceProvider.GetType(JToken) BasicServiceProvider.GetObjectTypeEnumeration(string) BasicServiceProvider.Localize(string, CultureInfo) BasicServiceProvider.GetEnumValues(string) BasicServiceProvider.GetEnumValuesAsync(string) BasicServiceProvider.GetType(int, string, string) BasicServiceProvider.GetWithFullUrl(string) BasicServiceProvider.ParseObjectIdentifier(JToken) BasicServiceProvider.GetRequestAsync(string, Dictionary<string, string>, params object[]) BasicServiceProvider.GetPagedResultsAsync<T>(string, Dictionary<string, string>, params object[]) BasicServiceProvider.GetAllAvailablePagesAsync(string, Dictionary<string, string>, params string[]) BasicServiceProvider.ThrowHttpException(FlurlHttpException) BasicServiceProvider.ToDictionary(object) BasicServiceProvider.GetBatchRequestAsync(string, IEnumerable<ObjectId>, IEnumerable<string>, params string[]) BasicServiceProvider.PostBatchRequestAsync(string, IEnumerable<BatchRequestParam>, params string[]) BasicServiceProvider.PutBatchRequestAsync(string, IEnumerable<BatchRequestParam>, params string[]) BasicServiceProvider.PatchBatchRequestAsync(string, IEnumerable<BatchRequestParam>) BasicServiceProvider.CheckVersion(ApiVersion) ObjectUtil.GetJTokenValue(JToken, string) ObjectUtil.GetJTokenDate(JToken, string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TrendServiceProvider(IFlurlClient, ApiVersion, bool) Initialize a new instance given the Flurl client. public TrendServiceProvider(IFlurlClient client, ApiVersion version, bool logClientErrors = true) Parameters client IFlurlClient version ApiVersion The server's Api version. logClientErrors bool Set this flag to false to disable logging of client errors. Fields Units Caching about read units. protected Dictionary<string, string> Units Field Value Dictionary<string, string> Methods GetNetDevSamples(ObjectId, AttributeEnumSet, TimeFilter) Retrieves available samples for the given network device attribute, filtered by startTime and endTime. public PagedResult<Sample> GetNetDevSamples(ObjectId networkDeviceId, AttributeEnumSet attributeName, TimeFilter filter) Parameters networkDeviceId ObjectId The identifier of the network device. attributeName AttributeEnumSet The textual identifier of the attribute. filter TimeFilter The filter that specifies: startTime, endTime, page, pageSize, sort. Returns PagedResult<Sample> The list of samples. Remarks StartTime and EndTime are mandatory parameters. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException GetNetDevSamples(ObjectId, int, TimeFilter) Retrieves available samples for the given network device attribute, filtered by startTime and endTime. public PagedResult<Sample> GetNetDevSamples(ObjectId networkDeviceId, int attributeId, TimeFilter filter) Parameters networkDeviceId ObjectId The identifier of the network device. attributeId int The numeric identifier of the attribute. filter TimeFilter The filter that specifies: startTime, endTime, page, pageSize, sort. Returns PagedResult<Sample> The list of samples. Remarks StartTime and EndTime are mandatory parameters. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException GetNetDevSamplesAsync(ObjectId, AttributeEnumSet, TimeFilter) Retrieves available samples for the given network device attribute, filtered by startTime and endTime. public Task<PagedResult<Sample>> GetNetDevSamplesAsync(ObjectId networkDeviceId, AttributeEnumSet attributeName, TimeFilter filter) Parameters networkDeviceId ObjectId The identifier of the network device. attributeName AttributeEnumSet The textual identifier of the attribute. filter TimeFilter The filter that specifies: startTime, endTime, page, pageSize, sort. Returns Task<PagedResult<Sample>> The list of samples. Remarks StartTime and EndTime are mandatory parameters. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException GetNetDevSamplesAsync(ObjectId, int, TimeFilter) Retrieves available samples for the given network device attribute, filtered by startTime and endTime. public Task<PagedResult<Sample>> GetNetDevSamplesAsync(ObjectId networkDeviceId, int attributeId, TimeFilter filter) Parameters networkDeviceId ObjectId The identifier of the network device. attributeId int The numeric identifier of the attribute. filter TimeFilter The filter that specifies: startTime, endTime, page, pageSize, sort. Returns Task<PagedResult<Sample>> The list of samples. Remarks StartTime and EndTime are mandatory parameters. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException GetNetDevTrendedAttributes(ObjectId) Get the list of trended attributes for the given Network Device. public List<MetasysAttribute> GetNetDevTrendedAttributes(ObjectId id) Parameters id ObjectId The identifier of the network device. Returns List<MetasysAttribute> The list of trended attributes. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException GetNetDevTrendedAttributesAsync(ObjectId) Get the list of trended attributes for the given Network Device. public Task<List<MetasysAttribute>> GetNetDevTrendedAttributesAsync(ObjectId id) Parameters id ObjectId The identifier of the network device. Returns Task<List<MetasysAttribute>> The list of trended attributes. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException GetSamples(ObjectId, AttributeEnumSet, TimeFilter) Retrieves available samples for the given object attribute, filtered by startTime and endTime. public PagedResult<Sample> GetSamples(ObjectId objectId, AttributeEnumSet attributeName, TimeFilter filter) Parameters objectId ObjectId The identifier of the object. attributeName AttributeEnumSet The textual identifier of the attribute. filter TimeFilter The filter that specifies: startTime, endTime, page, pageSize, sort. Returns PagedResult<Sample> The list of samples. Remarks StartTime and EndTime are mandatory parameters. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException GetSamples(ObjectId, int, TimeFilter) Retrieves available samples for the given object attribute, filtered by startTime and endTime. public PagedResult<Sample> GetSamples(ObjectId objectId, int attributeId, TimeFilter filter) Parameters objectId ObjectId The identifier of the object. attributeId int The numeric identifier of the attribute. filter TimeFilter The filter that specifies: startTime, endTime, page, pageSize, sort. Returns PagedResult<Sample> The list of samples. Remarks StartTime and EndTime are mandatory parameters. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException GetSamplesAsync(ObjectId, AttributeEnumSet, TimeFilter) Retrieves available samples for the given object attribute, filtered by startTime and endTime. public Task<PagedResult<Sample>> GetSamplesAsync(ObjectId objectId, AttributeEnumSet attributeName, TimeFilter filter) Parameters objectId ObjectId The identifier of the object. attributeName AttributeEnumSet The textual identifier of the attribute. filter TimeFilter The filter that specifies: startTime, endTime, page, pageSize, sort. Returns Task<PagedResult<Sample>> The list of samples. Remarks StartTime and EndTime are mandatory parameters. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException GetSamplesAsync(ObjectId, int, TimeFilter) Retrieves available samples for the given object attribute, filtered by startTime and endTime. public Task<PagedResult<Sample>> GetSamplesAsync(ObjectId objectId, int attributeId, TimeFilter filter) Parameters objectId ObjectId The identifier of the object. attributeId int The numeric identifier of the attribute. filter TimeFilter The filter that specifies: startTime, endTime, page, pageSize, sort. Returns Task<PagedResult<Sample>> The list of samples. Remarks StartTime and EndTime are mandatory parameters. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException GetTrendedAttributes(ObjectId) Get the list of trended attributes for the given object. public List<MetasysAttribute> GetTrendedAttributes(ObjectId id) Parameters id ObjectId The identifier of the object. Returns List<MetasysAttribute> The list of trended attributes. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException GetTrendedAttributesAsync(ObjectId) Get the list of trended attributes for the given object. public Task<List<MetasysAttribute>> GetTrendedAttributesAsync(ObjectId id) Parameters id ObjectId The identifier of the object. Returns Task<List<MetasysAttribute>> The list of trended attributes. Exceptions MetasysHttpNotFoundException MetasysHttpException MetasysHttpTimeoutException MetasysHttpParsingException MetasysHttpNotFoundException MetasysObjectException"
  },
  "api/JohnsonControls.Metasys.BasicServices.TriggerValue.Schema.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.TriggerValue.Schema.html",
    "title": "Class TriggerValue.Schema | Metasys Services",
    "keywords": "Class TriggerValue.Schema Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll public class TriggerValue.Schema Inheritance object TriggerValue.Schema Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties metasysType public string metasysType { get; set; } Property Value string type public string type { get; set; } Property Value string units public TriggerValue.SchemaUnits units { get; set; } Property Value TriggerValue.SchemaUnits"
  },
  "api/JohnsonControls.Metasys.BasicServices.TriggerValue.SchemaUnits.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.TriggerValue.SchemaUnits.html",
    "title": "Class TriggerValue.SchemaUnits | Metasys Services",
    "keywords": "Class TriggerValue.SchemaUnits Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll public class TriggerValue.SchemaUnits Inheritance object TriggerValue.SchemaUnits Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties id public string id { get; set; } Property Value string title public string title { get; set; } Property Value string"
  },
  "api/JohnsonControls.Metasys.BasicServices.TriggerValue.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.TriggerValue.html",
    "title": "Class TriggerValue | Metasys Services",
    "keywords": "Class TriggerValue Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll A Trigger Object (specifically for Alarms). public class TriggerValue Inheritance object TriggerValue Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Units Fully qualified enumeration value for the unit. public string Units { get; set; } Property Value string Remarks This is available since Metasys API v3. UnitsUrl Route to the endpoind for the current unit enumset. public string UnitsUrl { get; set; } Property Value string Remarks This is available only in Metasys API v2 and v1. Value The value of measurement. public string Value { get; set; } Property Value string item Item. public string item { get; set; } Property Value string Remarks This is available since Metasys API v4. schema Schema. public TriggerValue.Schema schema { get; set; } Property Value TriggerValue.Schema Remarks This is available since Metasys API v4. Methods Equals(object) Returns a value indicating whether this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/JohnsonControls.Metasys.BasicServices.UntrustedCertClientFactory.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.UntrustedCertClientFactory.html",
    "title": "Class UntrustedCertClientFactory | Metasys Services",
    "keywords": "Class UntrustedCertClientFactory Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Provide Untrusted Certificate Client Factory. public class UntrustedCertClientFactory : DefaultHttpClientFactory, IHttpClientFactory Inheritance object DefaultHttpClientFactory UntrustedCertClientFactory Implements IHttpClientFactory Inherited Members DefaultHttpClientFactory.CreateHttpClient(HttpMessageHandler) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateMessageHandler() Create Message Handler. public override HttpMessageHandler CreateMessageHandler() Returns HttpMessageHandler"
  },
  "api/JohnsonControls.Metasys.BasicServices.Utils.CredentialUtil.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.Utils.CredentialUtil.html",
    "title": "Class CredentialUtil | Metasys Services",
    "keywords": "Class CredentialUtil Namespace JohnsonControls.Metasys.BasicServices.Utils Assembly MetasysServices.dll Utility that allows to read Credential Manager targets. public static class CredentialUtil Inheritance object CredentialUtil Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetCredential(string) Retrieve the credentials for the given target. public static UserPass GetCredential(string target) Parameters target string Returns UserPass RemoveCredentials(string) Remove credentials for the given target. public static bool RemoveCredentials(string target) Parameters target string Returns bool SetCredentials(string, string, string, PersistanceType) Set the credentials for the given target. public static bool SetCredentials(string target, string username, string password, PersistanceType persistenceType) Parameters target string username string password string persistenceType PersistanceType Returns bool convertToUnSecureString(SecureString) Returns the plain text of a secure string. public static string convertToUnSecureString(SecureString secstrPassword) Parameters secstrPassword SecureString Returns string"
  },
  "api/JohnsonControls.Metasys.BasicServices.Utils.ObjectUtil.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.Utils.ObjectUtil.html",
    "title": "Class ObjectUtil | Metasys Services",
    "keywords": "Class ObjectUtil Namespace JohnsonControls.Metasys.BasicServices.Utils Assembly MetasysServices.dll Utility that provides useful methods to handle Json values. public class ObjectUtil Inheritance object ObjectUtil Derived BasicServiceProvider MetasysObject MetasysPoint Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetJTokenDate(JToken, string) Get the date value of a JToken field. public static DateTime GetJTokenDate(JToken jToken, string field) Parameters jToken JToken field string Returns DateTime GetJTokenValue(JToken, string) Get the string value of a JToken field. public static string GetJTokenValue(JToken jToken, string field) Parameters jToken JToken field string Returns string"
  },
  "api/JohnsonControls.Metasys.BasicServices.Utils.ResourceManager.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.Utils.ResourceManager.html",
    "title": "Class ResourceManager | Metasys Services",
    "keywords": "Class ResourceManager Namespace JohnsonControls.Metasys.BasicServices.Utils Assembly MetasysServices.dll Utility that helps the management of resources. public static class ResourceManager Inheritance object ResourceManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetCommandEnumeration(string) Attempts to get the enumeration key of a given en-US localized command. public static string GetCommandEnumeration(string resource) Parameters resource string The en-US value for the localization resource. Returns string The enumeration key of the en-US command if found, original resource if not. Remarks The resource parameter must be the value of a Metasys commandIdEnumSet en-US value, otherwise no key will be found. GetObjectTypeEnumeration(string) Attempts to get the enumeration key of a given en-US localized objectType. public static string GetObjectTypeEnumeration(string resource) Parameters resource string The en-US value for the localization resource. Returns string The enumeration key of the en-US objectType if found, original resource if not. Remarks The resource parameter must be the value of a Metasys objectTypeEnumSet en-US value, otherwise no key will be found. Localize(string, CultureInfo) Localizes the specified resource key for the current MetasysClient locale or specified culture. public static string Localize(string resource, CultureInfo cultureInfo = null) Parameters resource string The key for the localization resource. cultureInfo CultureInfo Optional culture specification. Returns string Localized string if the resource was found, the default en-US localized string if not found, or the resource parameter value if neither resource is found. Remarks The resource parameter must be the key of a Metasys enumeration resource, otherwise no translation will be found."
  },
  "api/JohnsonControls.Metasys.BasicServices.Utils.UserPass.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.Utils.UserPass.html",
    "title": "Class UserPass | Metasys Services",
    "keywords": "Class UserPass Namespace JohnsonControls.Metasys.BasicServices.Utils Assembly MetasysServices.dll Credentials DTO Class public class UserPass Inheritance object UserPass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UserPass(string, string) Constructor of Secure Strings given plain text string public UserPass(string user, string psw) Parameters user string psw string Properties Password Password's credentials public SecureString Password { get; } Property Value SecureString Username Username's credentials public SecureString Username { get; } Property Value SecureString"
  },
  "api/JohnsonControls.Metasys.BasicServices.Utils.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.Utils.html",
    "title": "Namespace JohnsonControls.Metasys.BasicServices.Utils | Metasys Services",
    "keywords": "Namespace JohnsonControls.Metasys.BasicServices.Utils Classes CredentialUtil Utility that allows to read Credential Manager targets. ObjectUtil Utility that provides useful methods to handle Json values. ResourceManager Utility that helps the management of resources. UserPass Credentials DTO Class"
  },
  "api/JohnsonControls.Metasys.BasicServices.Variant.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.Variant.html",
    "title": "Class Variant | Metasys Services",
    "keywords": "Class Variant Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll Variant is a structure that holds information about an attribute/property value from a single Metasys object. public class Variant Inheritance object Variant Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks If the returned property is an array of values the ArrayValue will hold each of these values in a new Variant object. Properties ArrayValue An array of Variant values. public Variant[] ArrayValue { get; } Property Value Variant[] Null unless value is an array. Attribute The attribute from the Metasys object. public string Attribute { get; } Property Value string BooleanValue The boolean representation of the value. public bool BooleanValue { get; } Property Value bool 0 if false, numeric value is 0, or attribute is non-numeric. 1 if true or numeric value not equal to 0. Id The id of the Metasys object. public ObjectId Id { get; } Property Value ObjectId IsReliable Boolean representation of the reliability of the value. public bool IsReliable { get; } Property Value bool True if the reliability of the value is reliable. ItemType The string representation of the item type. public string ItemType { get; } Property Value string Type of the item (e.g. 'string', 'numeric', 'boolean', 'object'). NumericValue The numeric representation of the value. public double NumericValue { get; } Property Value double Numeric value as specified in the MSSDA Bulletin rawValue. The numeric value for an Array will be 0. ObjectValue The object representation of the value. public object ObjectValue { get; } Property Value object Object value specified as Json. Priority The priority of the value. public string Priority { get; } Property Value string If the attribute is \"presentValue\": the priority of the value. Otherwise null by default. PriorityEnumerationKey The priority enumeration key of the priority. public string PriorityEnumerationKey { get; } Property Value string If the attribute is \"presentValue\": the priority enumeration key of the priority. Otherwise null by default. Reliability The reliability of the value. public string Reliability { get; } Property Value string If the attribute is \"presentValue\": the reliability of the value. Otherwise reliable by default. ReliabilityEnumerationKey The reliability enumeration key of the reliability. public string ReliabilityEnumerationKey { get; } Property Value string If the attribute is \"presentValue\": the reliability enumeration key of the reliability. Otherwise reliabilityEnumSet.reliable by default. StringValue The string representation of the value. public string StringValue { get; } Property Value string String value as specified in the MSSDA Bulletin stringValue or a translated string if a type of enumeration. StringValueEnumerationKey The enumeration key of the StringValue. public string StringValueEnumerationKey { get; } Property Value string The pre-translated StringValue as an enumeration key or the StringValue if it was not an enumeration key. Null if value is not a string, array, or unsupported type. Methods Equals(object) Returns a value indicating whither this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() Return a pretty JSON string of the current object. public override string ToString() Returns string"
  },
  "api/JohnsonControls.Metasys.BasicServices.VariantMultiple.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.VariantMultiple.html",
    "title": "Class VariantMultiple | Metasys Services",
    "keywords": "Class VariantMultiple Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll A structure for grouping Variant values with the same id. public class VariantMultiple Inheritance object VariantMultiple Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods VariantMultipleCollectionExtension.FindAttributeByName(VariantMultiple, string) Properties Id The object id. public ObjectId Id { get; } Property Value ObjectId Values The list of Variants. public IEnumerable<Variant> Values { get; set; } Property Value IEnumerable<Variant> Methods Equals(object) Returns a value indicating whither this instance has values equal to a specified object. public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() Return a pretty JSON string of the current object. public override string ToString() Returns string"
  },
  "api/JohnsonControls.Metasys.BasicServices.VariantMultipleCollectionExtension.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.VariantMultipleCollectionExtension.html",
    "title": "Class VariantMultipleCollectionExtension | Metasys Services",
    "keywords": "Class VariantMultipleCollectionExtension Namespace JohnsonControls.Metasys.BasicServices Assembly MetasysServices.dll A helper to work with VariantMultiple collections. public static class VariantMultipleCollectionExtension Inheritance object VariantMultipleCollectionExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FindAttributeByName(VariantMultiple, string) Returns the Variant object of the collection with the given attribute name. public static Variant FindAttributeByName(this VariantMultiple source, string name) Parameters source VariantMultiple name string The name of the attribute Returns Variant FindById(IEnumerable<VariantMultiple>, ObjectId) Returns the VariantMultiple in the collection with the given ID. public static VariantMultiple FindById(this IEnumerable<VariantMultiple> source, ObjectId id) Parameters source IEnumerable<VariantMultiple> id ObjectId The Id of the Metasys Object. Returns VariantMultiple"
  },
  "api/JohnsonControls.Metasys.BasicServices.html": {
    "href": "api/JohnsonControls.Metasys.BasicServices.html",
    "title": "Namespace JohnsonControls.Metasys.BasicServices | Metasys Services",
    "keywords": "Namespace JohnsonControls.Metasys.BasicServices Classes AccessToken The session access token and expiration in UTC time along with related host information. Activity Provides Activity Item ActivityAlarm Provides ActivityAlarm Item ActivityAudit Provides ActivityAudit Item ActivityFilter Filters to get activity items. Alarm Provides alarm Item AlarmAnnotation Annotaion for an alarm. AlarmFilter Filters to get alarms when using API v2 or v3. AlarmFilterV4Plus Filters to get activity items from API v4 on. AlarmServiceProvider Provide alarm item for the endpoints of the Metasys Alarm API. Audit Provides audit Item AuditAnnotation Annotation for an audit. AuditData AuditData is a structure that holds information about Audit Information. AuditFilter Filters to get audits AuditServiceProvider Provide audit item for the endpoints of the Metasys Audit API. AuditSignature DTO for the AuditSignature model. BasicFilter Basic filter for a general API request. BasicServiceProvider Base abstract class to be extended on specific provider implementation. BatchRequest Body class for a Metasys server batch request. BatchRequestParam Body class to pass list of parameters for Metasys server batch request. Command Command is a class that holds information about a Metasys object command. CommandCollectionExtension A helper to work with Command collections. CredManException An exception that is thrown when something went wrong while reading a target from Credential Manger. EnumerationServiceProvider Provide enumeration item for the endpoints of the Metasys Enumerations API. EquipmentServiceProvider Provide equipment item for the endpoints of the Metasys Equipments API. LegacyData LegacyData is a structure that holds information about Legacy Information. LegacyInfo Legacy information for the audit. LogFactory Factory to provide log4net.ILog LogFactoryInstance. LogInitializer Responsible for the Log initialization. ManageException Manage Http exceptions. Measurement A measurement expressed in terms of value and unit. MetasysAnnotation Base class for a Metasys Annotation. MetasysAttribute DTO for the attribute of an Object. MetasysClient An HTTP client for consuming the most commonly used endpoints of the Metasys API. MetasysCommandException An exception that is thrown when a MetasysObject could not be created from a Http response. MetasysException A general exception that is thrown when any type of Metasys Exception occurs. MetasysGuidException An exception that is thrown when a Guid could not be created from a Http response. MetasysHttpException An exception that is thrown when a Flurl.Http exception occurs. MetasysHttpNotFoundException An exception that is thrown when a resource is not found MetasysHttpParsingException An exception that is thrown when a Flurl.Http.FlurlHttpParsingException exception occurs. MetasysHttpTimeoutException An exception that is thrown when a Flurl.Http.FlurlHttpTimeoutException exception occurs. MetasysObject MetasysObject is a structure that holds information about a Metasys object. MetasysObjectCollectionExtension A helper to work with Metasys Objects collections. MetasysObjectException An exception that is thrown when a MetasysObject could not be created from a Http response. MetasysObjectTypeException An exception that is thrown when a MetasysObjectType could not be created from a Http response. MetasysPoint Point is a structure that holds information about an object attribute mapped to a point. MetasysPointCollectionExtension A helper to work with MetasysPoint collections. MetasysPropertyException An exception that is thrown when a Variant could not be created from a Http response. MetasysTokenException An exception that is thrown when an AccessToken could not be created from a Http response. MetasysUnsupportedApiVersion An exception that is thrown when the given API version is invalid or not supported NetworkDevice NetworkDevice is a structure that hold information about a Metasys Network Device NetworkDeviceServiceProvider Provide network device item for the endpoints of the Metasys Network Devices API. ObjectRequest Request related to an object PagedResult<T> Generic Paged Result Object containing Items along with paging information. Result This holds the inofrmation returned as result of a call Sample DTO for Sample SpaceServiceProvider Provide space item for the endpoints of the Metasys Spaces API. StreamEventArgs Defines Stream event arguments. StreamMessage Provides Stream message data StreamServiceProvider Provide methods for the endpoints of the Metasys Stream API v4. Subscription Provides Subscription Item TimeFilter Temporal filter for a timeline based request. TreeObject Generic class for handling JSON objects with a hierarchical pattern. Children is null when the object has no children. TrendServiceProvider Provider Class for Trend Service TriggerValue A Trigger Object (specifically for Alarms). TriggerValue.Schema TriggerValue.SchemaUnits UntrustedCertClientFactory Provide Untrusted Certificate Client Factory. Variant Variant is a structure that holds information about an attribute/property value from a single Metasys object. VariantMultiple A structure for grouping Variant values with the same id. VariantMultipleCollectionExtension A helper to work with VariantMultiple collections. Structs Command.EnumerationItem The value and translated title of an enumeration item. Command.Item A value that can be changed by a command. MetasysEnumValue MetasysEnumValue is a structure that hold information about a Metasys Enumeration values MetasysEnumeration MetasysEnumeration is a structure that hold information about a Metasys Enumeration definition MetasysObjectType MetasysObjectType is a structure that hold information about a Metasys ObjectId A Metasys Object Identifier Interfaces IActivityService Defines method to provide activity infos for endpoints of the Metasys Activity API. IAlarmsService Defines method to provide alarm infos for endpoints of the Metasys Alarm API. IAuditService Defines method to provide audit infos for endpoints of the Metasys Audit API. IBasicService Base Interface for implementing a new service for Metasys Client. IEnumerationService Defines method to provide enumeration infos for endpoints of the Metasys Enumerations API. IEquipmentService Defines method to provide equipment infos for endpoints of the Metasys Equipments API. IMetasysClient An HTTP client for consuming the most commonly used endpoints of the Metasys API. INetworkDeviceService Defines method to provide network device infos for endpoints of the Metasys Network Devices API. ISpaceService Defines method to provide space infos for endpoints of the Metasys Spaces API. IStreamService Defines methods to provide Streams infos for endpoints of the Metasys Stream API. ITrendService Enums ActionTypeEnum Enumeration of possible Action Type for an Audit. ActivityManagementStatusEnum Enumeration of possible values for editing an Alarm. ApiVersion The supported Metasys server Api versions. AttributeEnumSet Enumeration of possible Attributes (typically for Trended Samples). ClassLevelsEnum Enumeration of possible Class Levels for an Audit. MetasysObjectTypeEnum Collection of Metasys Object Types. NetworkDeviceTypeEnum Enumeration of possible Network Device Type. OriginApplicationsEnum Enumeration of possible OriginApplications for an Audit. SpaceSortEnum Enumeration of possible sort types for a Space. SpaceTypeEnum Enumeration of possible types for a Space."
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | Metasys Services",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | Metasys Services",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Metasys Services",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}